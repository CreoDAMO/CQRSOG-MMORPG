{
	"id": "cfe8b602d7297f38bb98e83b83969406",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/smartcontracts/CryptoQuestSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\n/// @custom:security-contact jacquedegraff@creodamo.com\ncontract CryptoQuestSwap is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n    bytes32 public constant LIQUIDITY_MANAGER_ROLE = keccak256(\"LIQUIDITY_MANAGER_ROLE\");\n\n    uint256 public constant FEE_RATE = 3; // 0.3% fee\n\n    IERC20Upgradeable public cqtToken;\n    IERC721Upgradeable public cqtNFT;\n\n    struct LiquidityPool {\n        uint256 tokenAmount;\n        uint256 ethAmount;\n        uint256 totalLiquidity;\n        mapping(address => uint256) liquidity;\n    }\n\n    mapping(address => LiquidityPool) public liquidityPools;\n\n    event LiquidityAdded(address indexed provider, address indexed token, uint256 tokenAmount, uint256 ethAmount, uint256 liquidity);\n    event LiquidityRemoved(address indexed provider, address indexed token, uint256 tokenAmount, uint256 ethAmount, uint256 liquidity);\n    event TokenSwapped(address indexed swapper, address indexed token, uint256 tokenAmount, uint256 ethAmount);\n    event NFTSwapped(address indexed swapper, address indexed nftContract, uint256 indexed tokenId, uint256 ethAmount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address defaultAdmin,\n        address pauser,\n        address upgrader,\n        address liquidityManager,\n        address cqtTokenAddress,\n        address cqtNFTAddress\n    ) initializer public {\n        __Pausable_init();\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(PAUSER_ROLE, pauser);\n        _grantRole(UPGRADER_ROLE, upgrader);\n        _grantRole(LIQUIDITY_MANAGER_ROLE, liquidityManager);\n\n        cqtToken = IERC20Upgradeable(cqtTokenAddress);\n        cqtNFT = IERC721Upgradeable(cqtNFTAddress);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function addLiquidity(address token, uint256 tokenAmount) external payable whenNotPaused returns (uint256) {\n        require(tokenAmount > 0, \"Token amount must be greater than zero\");\n        require(msg.value > 0, \"ETH amount must be greater than zero\");\n\n        IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount);\n\n        LiquidityPool storage pool = liquidityPools[token];\n        uint256 liquidity;\n\n        if (pool.totalLiquidity == 0) {\n            pool.tokenAmount = tokenAmount;\n            pool.ethAmount = msg.value;\n            liquidity = tokenAmount;\n        } else {\n            require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Invalid pool state\");\n\n            uint256 ethAmountRatio = (pool.ethAmount * tokenAmount) / pool.tokenAmount;\n            require(msg.value >= ethAmountRatio, \"Insufficient ETH amount\");\n\n            pool.tokenAmount += tokenAmount;\n            pool.ethAmount += msg.value;\n            liquidity = (pool.totalLiquidity * tokenAmount) / pool.tokenAmount;\n        }\n\n        pool.totalLiquidity += liquidity;\n        pool.liquidity[msg.sender] += liquidity;\n\n        emit LiquidityAdded(msg.sender, token, tokenAmount, msg.value, liquidity);\n        return liquidity;\n    }\n\n    function removeLiquidity(address token, uint256 liquidity) external whenNotPaused returns (uint256 tokenAmount, uint256 ethAmount) {\n        LiquidityPool storage pool = liquidityPools[token];\n        require(pool.liquidity[msg.sender] >= liquidity, \"Insufficient liquidity\");\n\n        tokenAmount = (pool.tokenAmount * liquidity) / pool.totalLiquidity;\n        ethAmount = (pool.ethAmount * liquidity) / pool.totalLiquidity;\n\n        pool.tokenAmount -= tokenAmount;\n        pool.ethAmount -= ethAmount;\n        pool.totalLiquidity -= liquidity;\n        pool.liquidity[msg.sender] -= liquidity;\n\n        IERC20Upgradeable(token).transfer(msg.sender, tokenAmount);\n        payable(msg.sender).transfer(ethAmount);\n\n        emit LiquidityRemoved(msg.sender, token, tokenAmount, ethAmount, liquidity);\n    }\n\n    function swapETHForTokens(address token, uint256 minTokens) external payable whenNotPaused {\n        require(msg.value > 0, \"ETH amount must be greater than zero\");\n        LiquidityPool storage pool = liquidityPools[token];\n        require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Insufficient liquidity\");\n\n        uint256 tokenAmount = getOutputAmount(msg.value, pool.ethAmount, pool.tokenAmount);\n        require(tokenAmount >= minTokens, \"Slippage tolerance exceeded\");\n\n        pool.ethAmount += msg.value;\n        pool.tokenAmount -= tokenAmount;\n\n        IERC20Upgradeable(token).transfer(msg.sender, tokenAmount);\n\n        emit TokenSwapped(msg.sender, token, tokenAmount, msg.value);\n    }\n\n    function swapTokensForETH(address token, uint256 tokenAmount, uint256 minETH) external whenNotPaused {\n        require(tokenAmount > 0, \"Token amount must be greater than zero\");\n        LiquidityPool storage pool = liquidityPools[token];\n        require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Insufficient liquidity\");\n\n        uint256 ethAmount = getOutputAmount(tokenAmount, pool.tokenAmount, pool.ethAmount);\n        require(ethAmount >= minETH, \"Slippage tolerance exceeded\");\n\n        pool.tokenAmount += tokenAmount;\n        pool.ethAmount -= ethAmount;\n\n        IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount);\n        payable(msg.sender).transfer(ethAmount);\n\n        emit TokenSwapped(msg.sender, token, tokenAmount, ethAmount);\n    }\n\n    function swapETHForNFT(uint256 tokenId, uint256 minETH) external payable whenNotPaused {\n        require(msg.value > 0, \"ETH amount must be greater than zero\");\n        require(cqtNFT.ownerOf(tokenId) == address(this), \"NFT not owned by contract\");\n\n        uint256 ethAmount = getOutputAmount(msg.value, address(this).balance - msg.value, 1); // Assuming 1 NFT as reserve\n        require(ethAmount >= minETH, \"Slippage tolerance exceeded\");\n\n        payable(msg.sender).transfer(ethAmount);\n        cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId);\n\n        emit NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount);\n    }\n\n    function swapNFTForETH(uint256 tokenId, uint256 minETH) external whenNotPaused {\n        require(cqtNFT.ownerOf(tokenId) == msg.sender, \"Not owner of NFT\");\n\n        uint256 ethAmount = getOutputAmount(1, 1, address(this).balance); // Assuming 1 NFT as input\n        require(ethAmount >= minETH, \"Slippage tolerance exceeded\");\n\n        cqtNFT.safeTransferFrom(msg.sender, address(this), tokenId);\n        payable(msg.sender).transfer(ethAmount);\n\n        emit NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount);\n    }\n\n    function getOutputAmount(uint256 inputAmount, uint256 inputReserve, uint256 outputReserve) internal pure returns (uint256) {\n        uint256 inputAmountWithFee = inputAmount * (1000 - FEE_RATE);\n        uint256 numerator = inputAmountWithFee * outputReserve;\n        uint256 denominator = (inputReserve * 1000) + inputAmountWithFee;\n        return numerator / denominator;\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal onlyRole(UPGRADER_ROLE) override {}\n\n    function updateLiquidityPool(address token, uint256 newTokenAmount, uint256 newEthAmount) external onlyRole(LIQUIDITY_MANAGER_ROLE) {\n        liquidityPools[token].tokenAmount = newTokenAmount;\n        liquidityPools[token].ethAmount = newEthAmount;\n    }\n\n    function withdrawETH(uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(address(this).balance >= amount, \"Insufficient balance\");\n        payable(msg.sender).transfer(amount);\n    }\n\n    function withdrawTokens(address token, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        IERC20Upgradeable(token).transfer(msg.sender, amount);\n    }\n\n    function withdrawNFT(uint256 tokenId) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"IERC721Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xB9 MULMOD PUSH23 0x27847E7B1B3961AC8917BFAEEAAD3D7F005987E102606 0x22 CALLVALUE BASEFEE 0xC CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "449:6273:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xB9 MULMOD PUSH23 0x27847E7B1B3961AC8917BFAEEAAD3D7F005987E102606 0x22 CALLVALUE BASEFEE 0xC CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "449:6273:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1245:2685:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1245:2685:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/smartcontracts/CryptoQuestSwap.sol": {
				"CryptoQuestSwap": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "swapper",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "NFTSwapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "swapper",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "TokenSwapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FEE_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LIQUIDITY_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cqtNFT",
							"outputs": [
								{
									"internalType": "contract IERC721Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cqtToken",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "defaultAdmin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pauser",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "upgrader",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "liquidityManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "cqtTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "cqtNFTAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidityPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalLiquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minETH",
									"type": "uint256"
								}
							],
							"name": "swapETHForNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "minTokens",
									"type": "uint256"
								}
							],
							"name": "swapETHForTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minETH",
									"type": "uint256"
								}
							],
							"name": "swapNFTForETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minETH",
									"type": "uint256"
								}
							],
							"name": "swapTokensForETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "newTokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newEthAmount",
									"type": "uint256"
								}
							],
							"name": "updateLiquidityPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "withdrawNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "jacquedegraff@creodamo.com",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/smartcontracts/CryptoQuestSwap.sol\":638:8779  contract CryptoQuestSwap is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":1901:1954  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":1925:1947  _disableInitializers() */\n  tag_4\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":1925:1945  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":1925:1947  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":638:8779  contract CryptoQuestSwap is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7856  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7883  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7885  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7901  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8003:8019  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7986  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8052:8068  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8036  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8049  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8099:8115  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":638:8779  contract CryptoQuestSwap is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":638:8779  contract CryptoQuestSwap is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x56688700\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xcc2a9a5b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe15cc8da\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe15cc8da\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf14210a6\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf72c0d8b\n      eq\n      tag_32\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0xcc2a9a5b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd9a37ad2\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xda069683\n      eq\n      tag_28\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0xa201ccf6\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xa201ccf6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc7088313\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x56688700\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x49f0346e\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x49f0346e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x51422e97\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_38:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x34aab064\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_37:\n      dup1\n      0x0b0fd47e\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x0b0fd47e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x242f0551\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2d11c58a\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_39:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x023245d7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06b091f9\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8625:8777  function withdrawNFT(uint256 tokenId) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8456:8619  function withdrawTokens(address token, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1283:1338  mapping(address => LiquidityPool) public liquidityPools */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":890:974  bytes32 public constant LIQUIDITY_MANAGER_ROLE = keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":981:1017  uint256 public constant FEE_RATE = 3 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1036:1069  IERC20Upgradeable public cqtToken */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2677:2752  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6319:6960  function swapETHForNFT(uint256 tokenId, uint256 minETH) external payable whenNotPaused {... */\n    tag_13:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_14:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4824:5527  function swapETHForTokens(address token, uint256 minTokens) external payable whenNotPaused {... */\n    tag_15:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2758:4007  function addLiquidity(address token, uint256 tokenAmount) external payable whenNotPaused returns (uint256) {... */\n    tag_17:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2600:2671  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4013:4818  function removeLiquidity(address token, uint256 liquidity) external whenNotPaused returns (uint256 tokenAmount, uint256 ethAmount) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_132\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7987:8242  function updateLiquidityPool(address token, uint256 newTokenAmount, uint256 newEthAmount) external onlyRole(LIQUIDITY_MANAGER_ROLE) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n    tag_144:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1960:2594  function initialize(... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n    tag_149:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_154\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n    tag_154:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6966:7493  function swapNFTForETH(uint256 tokenId, uint256 minETH) external whenNotPaused {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n    tag_158:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1075:1107  IERC721Upgradeable public cqtNFT */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5533:6313  function swapTokensForETH(address token, uint256 tokenAmount, uint256 minETH) external whenNotPaused {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_167\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n    tag_167:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":750:812  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8248:8450  function withdrawETH(uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_175\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n    tag_175:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":818:884  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3566:3598  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3562  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_183\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3626:3637  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3625  super.supportsInterface */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8625:8777  function withdrawNFT(uint256 tokenId) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8681:8699  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_187:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8711:8717  cqtNFT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8711:8734  cqtNFT.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8743:8747  this */\n      address\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8750:8760  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8762:8769  tokenId */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8711:8770  cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8625:8777  function withdrawNFT(uint256 tokenId) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8456:8619  function withdrawTokens(address token, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8529:8547  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_196:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8577:8582  token */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8559:8592  IERC20Upgradeable(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8593:8603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8605:8611  amount */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8559:8612  IERC20Upgradeable(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8456:8619  function withdrawTokens(address token, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1283:1338  mapping(address => LiquidityPool) public liquidityPools */\n    tag_61:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":890:974  bytes32 public constant LIQUIDITY_MANAGER_ROLE = keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n    tag_66:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":939:974  keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n      0x77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":890:974  bytes32 public constant LIQUIDITY_MANAGER_ROLE = keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4843:4873  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4902  _getAccessControlStorage() */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4900  _getAccessControlStorage */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4902  _getAccessControlStorage() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4843:4902  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4920  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4927  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4928:4932  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4912:4943  return $._roles[role].adminRole */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":981:1017  uint256 public constant FEE_RATE = 3 */\n    tag_77:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1016:1017  3 */\n      0x03\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":981:1017  uint256 public constant FEE_RATE = 3 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n    tag_211:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1036:1069  IERC20Upgradeable public cqtToken */\n    tag_87:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6475  _msgSender() */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6473  _msgSender */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6475  _msgSender() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6459  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_217:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2677:2752  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_96:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":788:812  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_220:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2735:2745  _unpause() */\n      tag_222\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2735:2743  _unpause */\n      tag_223\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2735:2745  _unpause() */\n      jump\t// in\n    tag_222:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2677:2752  function unpause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6319:6960  function swapETHForNFT(uint256 tokenId, uint256 minETH) external payable whenNotPaused {... */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_225:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6436:6437  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6424:6433  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6424:6437  msg.value > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6416:6478  require(msg.value > 0, \"ETH amount must be greater than zero\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6531:6535  this */\n      address\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6536  cqtNFT.ownerOf(tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6502  cqtNFT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6510  cqtNFT.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6511:6518  tokenId */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6519  cqtNFT.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_231:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_233:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_234\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6536  cqtNFT.ownerOf(tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6488:6566  require(cqtNFT.ownerOf(tokenId) == address(this), \"NFT not owned by contract\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6577:6594  uint256 ethAmount */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6597:6661  getOutputAmount(msg.value, address(this).balance - msg.value, 1) */\n      tag_239\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6613:6622  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6624:6645  address(this).balance */\n      selfbalance\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6624:6657  address(this).balance - msg.value */\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6659:6660  1 */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6597:6612  getOutputAmount */\n      tag_242\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6597:6661  getOutputAmount(msg.value, address(this).balance - msg.value, 1) */\n      jump\t// in\n    tag_239:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6577:6661  uint256 ethAmount = getOutputAmount(msg.value, address(this).balance - msg.value, 1) */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6721:6727  minETH */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6708:6717  ethAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6708:6727  ethAmount >= minETH */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6700:6759  require(ethAmount >= minETH, \"Slippage tolerance exceeded\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6778:6788  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6770:6798  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6770:6809  payable(msg.sender).transfer(ethAmount) */\n      0x08fc\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6799:6808  ethAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6770:6809  payable(msg.sender).transfer(ethAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6819:6825  cqtNFT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6819:6842  cqtNFT.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6851:6855  this */\n      address\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6858:6868  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6870:6877  tokenId */\n      dup7\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6819:6878  cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_248:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_249:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6934:6941  tokenId */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6925:6931  cqtNFT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6894:6953  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6905:6915  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6894:6953  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e65\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6943:6952  ethAmount */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6894:6953  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      mload(0x40)\n      tag_252\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6406:6960  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6319:6960  function swapETHForNFT(uint256 tokenId, uint256 minETH) external payable whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_260\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4824:5527  function swapETHForTokens(address token, uint256 minTokens) external payable whenNotPaused {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_262:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4945:4946  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4933:4942  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4933:4946  msg.value > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4925:4987  require(msg.value > 0, \"ETH amount must be greater than zero\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_230\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4997:5023  LiquidityPool storage pool */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5026:5040  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5026:5047  liquidityPools[token] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5041:5046  token */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5026:5047  liquidityPools[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4997:5047  LiquidityPool storage pool = liquidityPools[token] */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5082:5083  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5065:5069  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5065:5079  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5065:5083  pool.ethAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5065:5107  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n      dup1\n      iszero\n      tag_266\n      jumpi\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5106:5107  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5087:5091  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5087:5103  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5087:5107  pool.tokenAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5065:5107  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n    tag_266:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5057:5134  require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Insufficient liquidity\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5145:5164  uint256 tokenAmount */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5167:5227  getOutputAmount(msg.value, pool.ethAmount, pool.tokenAmount) */\n      tag_270\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5183:5192  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5194:5198  pool */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5194:5208  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5210:5214  pool */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5210:5226  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5167:5182  getOutputAmount */\n      tag_242\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5167:5227  getOutputAmount(msg.value, pool.ethAmount, pool.tokenAmount) */\n      jump\t// in\n    tag_270:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5145:5227  uint256 tokenAmount = getOutputAmount(msg.value, pool.ethAmount, pool.tokenAmount) */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5260:5269  minTokens */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5245:5256  tokenAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5245:5269  tokenAmount >= minTokens */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5237:5301  require(tokenAmount >= minTokens, \"Slippage tolerance exceeded\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_245\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5330:5339  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5312:5316  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5312:5326  pool.ethAmount */\n      0x01\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5312:5339  pool.ethAmount += msg.value */\n      dup3\n      dup3\n      sload\n      tag_273\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5369:5380  tokenAmount */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5349:5353  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5349:5365  pool.tokenAmount */\n      0x00\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5349:5380  pool.tokenAmount -= tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_275\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_275:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5409:5414  token */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5391:5424  IERC20Upgradeable(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5425:5435  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5437:5448  tokenAmount */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5391:5449  IERC20Upgradeable(token).transfer(msg.sender, tokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_276:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_278:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_279\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_279:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5490:5495  token */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5465:5520  TokenSwapped(msg.sender, token, tokenAmount, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5478:5488  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5465:5520  TokenSwapped(msg.sender, token, tokenAmount, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5497:5508  tokenAmount */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5510:5519  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5465:5520  TokenSwapped(msg.sender, token, tokenAmount, msg.value) */\n      mload(0x40)\n      tag_280\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4915:5527  {... */\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4824:5527  function swapETHForTokens(address token, uint256 minTokens) external payable whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3800:3832  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3793:3832  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2758:4007  function addLiquidity(address token, uint256 tokenAmount) external payable whenNotPaused returns (uint256) {... */\n    tag_114:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2856:2863  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_286:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2897:2898  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2883:2894  tokenAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2883:2898  tokenAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2875:2941  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2971:2972  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2959:2968  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2959:2972  msg.value > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2951:3013  require(msg.value > 0, \"ETH amount must be greater than zero\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap1\n      tag_230\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3042:3047  token */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3024:3061  IERC20Upgradeable(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3062:3072  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3082:3086  this */\n      address\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3089:3100  tokenAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3024:3101  IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_293:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_296:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3112:3138  LiquidityPool storage pool */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3141:3155  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3141:3162  liquidityPools[token] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3156:3161  token */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3141:3162  liquidityPools[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3112:3162  LiquidityPool storage pool = liquidityPools[token] */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3172:3189  uint256 liquidity */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3227:3228  0 */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3204:3208  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3204:3223  pool.totalLiquidity */\n      0x02\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3204:3228  pool.totalLiquidity == 0 */\n      sub\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3200:3799  if (pool.totalLiquidity == 0) {... */\n      tag_297\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3263:3274  tokenAmount */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3244:3248  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3244:3260  pool.tokenAmount */\n      0x00\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3244:3274  pool.tokenAmount = tokenAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3305:3314  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3288:3292  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3288:3302  pool.ethAmount */\n      0x01\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3288:3314  pool.ethAmount = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3340:3351  tokenAmount */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3328:3351  liquidity = tokenAmount */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3200:3799  if (pool.totalLiquidity == 0) {... */\n      jump(tag_298)\n    tag_297:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3407:3408  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3390:3394  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3390:3404  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3390:3408  pool.ethAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3390:3432  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n      dup1\n      iszero\n      tag_299\n      jumpi\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3431:3432  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3412:3416  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3412:3428  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3412:3432  pool.tokenAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3390:3432  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n    tag_299:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3382:3455  require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Invalid pool state\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3470:3492  uint256 ethAmountRatio */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3528:3532  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3528:3544  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3513:3524  tokenAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3496:3500  pool */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3496:3510  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3496:3524  pool.ethAmount * tokenAmount */\n      tag_303\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3495:3544  (pool.ethAmount * tokenAmount) / pool.tokenAmount */\n      tag_305\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3470:3544  uint256 ethAmountRatio = (pool.ethAmount * tokenAmount) / pool.tokenAmount */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3579:3593  ethAmountRatio */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3566:3575  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3566:3593  msg.value >= ethAmountRatio */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3558:3621  require(msg.value >= ethAmountRatio, \"Insufficient ETH amount\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3656:3667  tokenAmount */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3636:3640  pool */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3636:3652  pool.tokenAmount */\n      0x00\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3636:3667  pool.tokenAmount += tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_310\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_310:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3699:3708  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3681:3685  pool */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3681:3695  pool.ethAmount */\n      0x01\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3681:3708  pool.ethAmount += msg.value */\n      dup3\n      dup3\n      sload\n      tag_311\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_311:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3772:3776  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3772:3788  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3757:3768  tokenAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3735:3739  pool */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3735:3754  pool.totalLiquidity */\n      0x02\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3735:3768  pool.totalLiquidity * tokenAmount */\n      tag_312\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_312:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3734:3788  (pool.totalLiquidity * tokenAmount) / pool.tokenAmount */\n      tag_313\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_313:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3722:3788  liquidity = (pool.totalLiquidity * tokenAmount) / pool.tokenAmount */\n      swap2\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3368:3799  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3200:3799  if (pool.totalLiquidity == 0) {... */\n    tag_298:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3832:3841  liquidity */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3809:3813  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3809:3828  pool.totalLiquidity */\n      0x02\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3809:3841  pool.totalLiquidity += liquidity */\n      dup3\n      dup3\n      sload\n      tag_314\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_314:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3881:3890  liquidity */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3855  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3865  pool.liquidity */\n      0x03\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3877  pool.liquidity[msg.sender] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3866:3876  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3877  pool.liquidity[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3890  pool.liquidity[msg.sender] += liquidity */\n      dup3\n      dup3\n      sload\n      tag_315\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_315:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3933:3938  token */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3906:3974  LiquidityAdded(msg.sender, token, tokenAmount, msg.value, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3921:3931  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3906:3974  LiquidityAdded(msg.sender, token, tokenAmount, msg.value, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f7\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3940:3951  tokenAmount */\n      dup7\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3953:3962  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3964:3973  liquidity */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3906:3974  LiquidityAdded(msg.sender, token, tokenAmount, msg.value, liquidity) */\n      mload(0x40)\n      tag_316\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3991:4000  liquidity */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3984:4000  return liquidity */\n      swap3\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2758:4007  function addLiquidity(address token, uint256 tokenAmount) external payable whenNotPaused returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2739:2743  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2755:2780  PausableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2804  _getPausableStorage() */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2802  _getPausableStorage */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2804  _getPausableStorage() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2755:2804  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2822  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2814:2830  return $._paused */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2600:2671  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_122:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":788:812  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_321:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2656:2664  _pause() */\n      tag_323\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2656:2662  _pause */\n      tag_324\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2656:2664  _pause() */\n      jump\t// in\n    tag_323:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2600:2671  function pause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3825:3855  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3884  _getAccessControlStorage() */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3882  _getAccessControlStorage */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3884  _getAccessControlStorage() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3825:3884  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3902  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3909  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3910:3914  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3923  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3924:3931  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3894:3932  return $._roles[role].hasRole[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4013:4818  function removeLiquidity(address token, uint256 liquidity) external whenNotPaused returns (uint256 tokenAmount, uint256 ethAmount) {... */\n    tag_131:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4104:4123  uint256 tokenAmount */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4125:4142  uint256 ethAmount */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_328\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_328:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4154:4180  LiquidityPool storage pool */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4183:4197  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4183:4204  liquidityPools[token] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4198:4203  token */\n      dup7\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4183:4204  liquidityPools[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4154:4204  LiquidityPool storage pool = liquidityPools[token] */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4252:4261  liquidity */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4222:4226  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4222:4236  pool.liquidity */\n      0x03\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4222:4248  pool.liquidity[msg.sender] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4237:4247  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4222:4248  pool.liquidity[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4222:4261  pool.liquidity[msg.sender] >= liquidity */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4214:4288  require(pool.liquidity[msg.sender] >= liquidity, \"Insufficient liquidity\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap1\n      tag_269\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_330:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4346:4350  pool */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4346:4365  pool.totalLiquidity */\n      0x02\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4333:4342  liquidity */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4314:4318  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4314:4330  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4314:4342  pool.tokenAmount * liquidity */\n      tag_332\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_332:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4313:4365  (pool.tokenAmount * liquidity) / pool.totalLiquidity */\n      tag_333\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_333:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4299:4365  tokenAmount = (pool.tokenAmount * liquidity) / pool.totalLiquidity */\n      swap3\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4418:4422  pool */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4418:4437  pool.totalLiquidity */\n      0x02\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4405:4414  liquidity */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4388:4392  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4388:4402  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4388:4414  pool.ethAmount * liquidity */\n      tag_334\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_334:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4387:4437  (pool.ethAmount * liquidity) / pool.totalLiquidity */\n      tag_335\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_335:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4375:4437  ethAmount = (pool.ethAmount * liquidity) / pool.totalLiquidity */\n      swap2\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4468:4479  tokenAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4448:4452  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4448:4464  pool.tokenAmount */\n      0x00\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4448:4479  pool.tokenAmount -= tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_336\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_336:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4507:4516  ethAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4489:4493  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4489:4503  pool.ethAmount */\n      0x01\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4489:4516  pool.ethAmount -= ethAmount */\n      dup3\n      dup3\n      sload\n      tag_337\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_337:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4549:4558  liquidity */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4526:4530  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4526:4545  pool.totalLiquidity */\n      0x02\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4526:4558  pool.totalLiquidity -= liquidity */\n      dup3\n      dup3\n      sload\n      tag_338\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_338:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4598:4607  liquidity */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4572  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4582  pool.liquidity */\n      0x03\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4594  pool.liquidity[msg.sender] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4583:4593  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4594  pool.liquidity[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4607  pool.liquidity[msg.sender] -= liquidity */\n      dup3\n      dup3\n      sload\n      tag_339\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_339:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4636:4641  token */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4618:4651  IERC20Upgradeable(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4652:4662  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4664:4675  tokenAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4618:4676  IERC20Upgradeable(token).transfer(msg.sender, tokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_340:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_342\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_342:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_343\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_343:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4694:4704  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4686:4714  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4686:4725  payable(msg.sender).transfer(ethAmount) */\n      0x08fc\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4715:4724  ethAmount */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4686:4725  payable(msg.sender).transfer(ethAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_345\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_345:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4770:4775  token */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4741:4811  LiquidityRemoved(msg.sender, token, tokenAmount, ethAmount, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4758:4768  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4741:4811  LiquidityRemoved(msg.sender, token, tokenAmount, ethAmount, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7d19d505c7ec4db83f3b51f19fb98c4c8a99922e7839d1ee608dfbee29501b\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4777:4788  tokenAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4790:4799  ethAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4801:4810  liquidity */\n      dup9\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4741:4811  LiquidityRemoved(msg.sender, token, tokenAmount, ethAmount, liquidity) */\n      mload(0x40)\n      tag_346\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4144:4818  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4013:4818  function removeLiquidity(address token, uint256 liquidity) external whenNotPaused returns (uint256 tokenAmount, uint256 ethAmount) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_140:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7987:8242  function updateLiquidityPool(address token, uint256 newTokenAmount, uint256 newEthAmount) external onlyRole(LIQUIDITY_MANAGER_ROLE) {... */\n    tag_147:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":939:974  keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n      0x77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_348:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8165:8179  newTokenAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8129:8143  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8129:8150  liquidityPools[token] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8144:8149  token */\n      dup7\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8129:8150  liquidityPools[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8129:8162  liquidityPools[token].tokenAmount */\n      0x00\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8129:8179  liquidityPools[token].tokenAmount = newTokenAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8223:8235  newEthAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8189:8203  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8189:8210  liquidityPools[token] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8204:8209  token */\n      dup7\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8189:8210  liquidityPools[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8189:8220  liquidityPools[token].ethAmount */\n      0x01\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8189:8235  liquidityPools[token].ethAmount = newEthAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7987:8242  function updateLiquidityPool(address token, uint256 newTokenAmount, uint256 newEthAmount) external onlyRole(LIQUIDITY_MANAGER_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1960:2594  function initialize(... */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_353\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_354\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_355\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_355:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_357:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2193:2210  __Pausable_init() */\n      tag_359\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2193:2208  __Pausable_init */\n      tag_360\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2193:2210  __Pausable_init() */\n      jump\t// in\n    tag_359:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2220:2242  __AccessControl_init() */\n      tag_361\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2220:2240  __AccessControl_init */\n      tag_362\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2220:2242  __AccessControl_init() */\n      jump\t// in\n    tag_361:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2252:2276  __UUPSUpgradeable_init() */\n      tag_363\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2252:2274  __UUPSUpgradeable_init */\n      tag_364\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2252:2276  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_363:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2287:2331  _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin) */\n      tag_365\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2298:2316  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2318:2330  defaultAdmin */\n      dup13\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2287:2297  _grantRole */\n      tag_212\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2287:2331  _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin) */\n      jump\t// in\n    tag_365:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2341:2372  _grantRole(PAUSER_ROLE, pauser) */\n      tag_366\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":788:812  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2365:2371  pauser */\n      dup12\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2341:2351  _grantRole */\n      tag_212\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2341:2372  _grantRole(PAUSER_ROLE, pauser) */\n      jump\t// in\n    tag_366:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2382:2417  _grantRole(UPGRADER_ROLE, upgrader) */\n      tag_367\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":858:884  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2408:2416  upgrader */\n      dup11\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2382:2392  _grantRole */\n      tag_212\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2382:2417  _grantRole(UPGRADER_ROLE, upgrader) */\n      jump\t// in\n    tag_367:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2427:2479  _grantRole(LIQUIDITY_MANAGER_ROLE, liquidityManager) */\n      tag_368\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":939:974  keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n      0x77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2462:2478  liquidityManager */\n      dup10\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2427:2437  _grantRole */\n      tag_212\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2427:2479  _grantRole(LIQUIDITY_MANAGER_ROLE, liquidityManager) */\n      jump\t// in\n    tag_368:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2519:2534  cqtTokenAddress */\n      dup7\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2490:2498  cqtToken */\n      0x00\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2490:2535  cqtToken = IERC20Upgradeable(cqtTokenAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2573:2586  cqtNFTAddress */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2545:2551  cqtNFT */\n      0x01\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2545:2587  cqtNFT = IERC721Upgradeable(cqtNFTAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_370\n      swap2\n      swap1\n      tag_371\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1960:2594  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_372\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_376\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n    tag_376:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6966:7493  function swapNFTForETH(uint256 tokenId, uint256 minETH) external whenNotPaused {... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_378:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7090:7100  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7100  cqtNFT.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7069  cqtNFT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7077  cqtNFT.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7078:7085  tokenId */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7086  cqtNFT.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_380\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_380:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_382\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_382:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_383\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_383:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7100  cqtNFT.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7055:7121  require(cqtNFT.ownerOf(tokenId) == msg.sender, \"Not owner of NFT\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_385\n      swap1\n      tag_386\n      jump\t// in\n    tag_385:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_384:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7132:7149  uint256 ethAmount */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7152:7196  getOutputAmount(1, 1, address(this).balance) */\n      tag_387\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7168:7169  1 */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7171:7172  1 */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7174:7195  address(this).balance */\n      selfbalance\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7152:7167  getOutputAmount */\n      tag_242\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7152:7196  getOutputAmount(1, 1, address(this).balance) */\n      jump\t// in\n    tag_387:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7132:7196  uint256 ethAmount = getOutputAmount(1, 1, address(this).balance) */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7254:7260  minETH */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7241:7250  ethAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7241:7260  ethAmount >= minETH */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7233:7292  require(ethAmount >= minETH, \"Slippage tolerance exceeded\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_389\n      swap1\n      tag_245\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_388:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7303:7309  cqtNFT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7303:7326  cqtNFT.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7327:7337  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7347:7351  this */\n      address\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7354:7361  tokenId */\n      dup7\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7303:7362  cqtNFT.safeTransferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_390:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_391\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_391:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_393\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_393:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7380:7390  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7372:7400  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7372:7411  payable(msg.sender).transfer(ethAmount) */\n      0x08fc\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7401:7410  ethAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7372:7411  payable(msg.sender).transfer(ethAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_395\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_395:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7467:7474  tokenId */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7458:7464  cqtNFT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7427:7486  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7438:7448  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7427:7486  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e65\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7476:7485  ethAmount */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7427:7486  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      mload(0x40)\n      tag_396\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7045:7493  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6966:7493  function swapNFTForETH(uint256 tokenId, uint256 minETH) external whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1075:1107  IERC721Upgradeable public cqtNFT */\n    tag_163:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5533:6313  function swapTokensForETH(address token, uint256 tokenAmount, uint256 minETH) external whenNotPaused {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_398\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_398:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5666:5667  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5652:5663  tokenAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5652:5667  tokenAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5644:5710  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n      tag_400\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_401\n      swap1\n      tag_290\n      jump\t// in\n    tag_401:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_400:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5720:5746  LiquidityPool storage pool */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5749:5763  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5749:5770  liquidityPools[token] */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5764:5769  token */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5749:5770  liquidityPools[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5720:5770  LiquidityPool storage pool = liquidityPools[token] */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5805:5806  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5788:5792  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5788:5802  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5788:5806  pool.ethAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5788:5830  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n      dup1\n      iszero\n      tag_402\n      jumpi\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5829:5830  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5810:5814  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5810:5826  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5810:5830  pool.tokenAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5788:5830  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n    tag_402:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5780:5857  require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Insufficient liquidity\") */\n      tag_403\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_404\n      swap1\n      tag_269\n      jump\t// in\n    tag_404:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_403:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5868:5885  uint256 ethAmount */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5888:5950  getOutputAmount(tokenAmount, pool.tokenAmount, pool.ethAmount) */\n      tag_405\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5904:5915  tokenAmount */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5917:5921  pool */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5917:5933  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5935:5939  pool */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5935:5949  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5888:5903  getOutputAmount */\n      tag_242\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5888:5950  getOutputAmount(tokenAmount, pool.tokenAmount, pool.ethAmount) */\n      jump\t// in\n    tag_405:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5868:5950  uint256 ethAmount = getOutputAmount(tokenAmount, pool.tokenAmount, pool.ethAmount) */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5981:5987  minETH */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5968:5977  ethAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5968:5987  ethAmount >= minETH */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5960:6019  require(ethAmount >= minETH, \"Slippage tolerance exceeded\") */\n      tag_406\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_407\n      swap1\n      tag_245\n      jump\t// in\n    tag_407:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_406:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6050:6061  tokenAmount */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6030:6034  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6030:6046  pool.tokenAmount */\n      0x00\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6030:6061  pool.tokenAmount += tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_408\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_408:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6089:6098  ethAmount */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6071:6075  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6071:6085  pool.ethAmount */\n      0x01\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6071:6098  pool.ethAmount -= ethAmount */\n      dup3\n      dup3\n      sload\n      tag_409\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_409:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6127:6132  token */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6109:6146  IERC20Upgradeable(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6147:6157  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6167:6171  this */\n      address\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6174:6185  tokenAmount */\n      dup8\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6109:6186  IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_410\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_410:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_412\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_412:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_413\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_413:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6204:6214  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6196:6224  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6196:6235  payable(msg.sender).transfer(ethAmount) */\n      0x08fc\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6225:6234  ethAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6196:6235  payable(msg.sender).transfer(ethAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_415\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_415:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6276:6281  token */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6251:6306  TokenSwapped(msg.sender, token, tokenAmount, ethAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6264:6274  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6251:6306  TokenSwapped(msg.sender, token, tokenAmount, ethAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6283:6294  tokenAmount */\n      dup7\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6296:6305  ethAmount */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6251:6306  TokenSwapped(msg.sender, token, tokenAmount, ethAmount) */\n      mload(0x40)\n      tag_416\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_416:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5634:6313  {... */\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5533:6313  function swapTokensForETH(address token, uint256 tokenAmount, uint256 minETH) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":750:812  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_172:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":788:812  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":750:812  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8248:8450  function withdrawETH(uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8303:8321  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_418\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_418:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8366:8372  amount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8341:8362  address(this).balance */\n      selfbalance\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8341:8372  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8333:8397  require(address(this).balance >= amount, \"Insufficient balance\") */\n      tag_420\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap1\n      tag_422\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_420:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8415:8425  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8407:8435  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8407:8443  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8436:8442  amount */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8407:8443  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_424\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_424:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8248:8450  function withdrawETH(uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":818:884  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_180:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":858:884  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":818:884  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1034:1180  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1110:1114  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1148:1173  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1173  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1144  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1173  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1126:1173  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1034:1180  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4243  _msgSender() */\n      tag_428\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4241  _msgSender */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4243  _msgSender() */\n      jump\t// in\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_429\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_427:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2787:2964  function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2845:2875  AccessControlStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2920:2948  AccessControlStorageLocation */\n      0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2910:2948  $.slot := AccessControlStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2787:2964  function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7363:7393  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7422  _getAccessControlStorage() */\n      tag_432\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7420  _getAccessControlStorage */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7422  _getAccessControlStorage() */\n      jump\t// in\n    tag_432:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7363:7422  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_433\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_433:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_434\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7476  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7484:7488  role */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7497  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7498:7505  account */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_435\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7569  _msgSender */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      jump\t// in\n    tag_435:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_431)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_434:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_431:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7970:7974  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7986:8016  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8019:8045  _getAccessControlStorage() */\n      tag_439\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8019:8043  _getAccessControlStorage */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8019:8045  _getAccessControlStorage() */\n      jump\t// in\n    tag_439:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7986:8045  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      tag_440\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8067:8071  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8073:8080  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8066  hasRole */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      jump\t// in\n    tag_440:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8055:8274  if (hasRole(role, account)) {... */\n      iszero\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8098  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8105  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8106:8110  role */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8119  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8128  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8120:8127  account */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8128  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8136  $._roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8182:8194  _msgSender() */\n      tag_442\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8182:8192  _msgSender */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8182:8194  _msgSender() */\n      jump\t// in\n    tag_442:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8173:8180  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8167:8171  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8216:8220  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8209:8220  return true */\n      swap2\n      pop\n      pop\n      jump(tag_438)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8055:8274  if (hasRole(role, account)) {... */\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8258:8263  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8251:8263  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_438:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_445\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_446\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_445:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3732:3757  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3781  _getPausableStorage() */\n      tag_448\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3779  _getPausableStorage */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3781  _getPausableStorage() */\n      jump\t// in\n    tag_448:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3732:3781  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3803:3808  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3792  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3800  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n      tag_449\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3842  _msgSender */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_450\n      swap2\n      swap1\n      tag_451\n      jump\t// in\n    tag_450:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3722:3852  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2978  paused() */\n      tag_453\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2976  paused */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2978  paused() */\n      jump\t// in\n    tag_453:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n    tag_454:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7499:7877  function getOutputAmount(uint256 inputAmount, uint256 inputReserve, uint256 outputReserve) internal pure returns (uint256) {... */\n    tag_242:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7613:7620  uint256 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7632:7658  uint256 inputAmountWithFee */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1016:1017  3 */\n      0x03\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7676:7680  1000 */\n      0x03e8\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7676:7691  1000 - FEE_RATE */\n      tag_456\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_456:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7661:7672  inputAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7661:7692  inputAmount * (1000 - FEE_RATE) */\n      tag_457\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_457:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7632:7692  uint256 inputAmountWithFee = inputAmount * (1000 - FEE_RATE) */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7702:7719  uint256 numerator */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7743:7756  outputReserve */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7722:7740  inputAmountWithFee */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7722:7756  inputAmountWithFee * outputReserve */\n      tag_458\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_458:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7702:7756  uint256 numerator = inputAmountWithFee * outputReserve */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7766:7785  uint256 denominator */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7812:7830  inputAmountWithFee */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7804:7808  1000 */\n      0x03e8\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7789:7801  inputReserve */\n      dup8\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7789:7808  inputReserve * 1000 */\n      tag_459\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_459:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7788:7830  (inputReserve * 1000) + inputAmountWithFee */\n      tag_460\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_460:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7766:7830  uint256 denominator = (inputReserve * 1000) + inputAmountWithFee */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7859:7870  denominator */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7847:7856  numerator */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7847:7870  numerator / denominator */\n      tag_461\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_461:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7840:7870  return numerator / denominator */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7499:7877  function getOutputAmount(uint256 inputAmount, uint256 inputReserve, uint256 outputReserve) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_463\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_464\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4779  ERC1967Utils.getImplementation */\n      tag_465\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_464:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_463:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_466\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_466:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7883:7981  function _authorizeUpgrade(address newImplementation) internal onlyRole(UPGRADER_ROLE) override {} */\n    tag_258:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":858:884  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_468\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_468:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7883:7981  function _authorizeUpgrade(address newImplementation) internal onlyRole(UPGRADER_ROLE) override {} */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_471\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_472\n      swap2\n      swap1\n      tag_473\n      jump\t// in\n    tag_472:\n      0x01\n    tag_471:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_474\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6555:6572  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_478\n      swap2\n      swap1\n      tag_451\n      jump\t// in\n    tag_478:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_474:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6253:6285  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6249  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6341:6345  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_481\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_481:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_480:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_482\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_483\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_482:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_485\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n    tag_485:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1147:1309  function _getPausableStorage() private pure returns (PausableStorage storage $) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1200:1225  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1270:1293  PausableStorageLocation */\n      0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1260:1293  $.slot := PausableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1147:1309  function _getPausableStorage() private pure returns (PausableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_488\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_488:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3425:3450  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3474  _getPausableStorage() */\n      tag_490\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3472  _getPausableStorage */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3474  _getPausableStorage() */\n      jump\t// in\n    tag_490:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3425:3474  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3485  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3493  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_491\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3532  _msgSender */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      jump\t// in\n    tag_491:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      mload(0x40)\n      tag_492\n      swap2\n      swap1\n      tag_451\n      jump\t// in\n    tag_492:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3415:3542  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_495\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_496\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_495:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      tag_498\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1924  __Pausable_init_unchained */\n      tag_499\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      jump\t// in\n    tag_498:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_501\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_496\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_501:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_504\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_496\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_504:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_429:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_507\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_507:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_508\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4547:4554  account */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4556:4560  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_509\n      swap3\n      swap2\n      swap1\n      tag_510\n      jump\t// in\n    tag_509:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n    tag_508:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_446:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3176  paused() */\n      tag_512\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3174  paused */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3176  paused() */\n      jump\t// in\n    tag_512:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_513\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n    tag_513:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n    tag_465:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2009:2016  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_515\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2062:2081  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2061  StorageSlot.getAddressSlot */\n      tag_516\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_515:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2028:2088  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_483:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_518\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_519\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_518:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2931:2948  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2978:2979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2968  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      iszero\n      tag_520\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_521\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_522\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_521:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      jump(tag_523)\n    tag_520:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_524\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_525\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n    tag_524:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_523:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_496:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_527\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_528\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_527:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_529\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_529:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_499:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_531\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_496\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_531:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2012:2037  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2061  _getPausableStorage() */\n      tag_533\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2059  _getPausableStorage */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2061  _getPausableStorage() */\n      jump\t// in\n    tag_533:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2012:2061  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2083:2088  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2072  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2080  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2002:2095  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_516:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1745:1766  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1854:1858  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1844:1858  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_519:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_536\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2349:2366  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_537\n      swap2\n      swap1\n      tag_451\n      jump\t// in\n    tag_537:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_536:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2443:2460  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_538\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2414:2433  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2413  StorageSlot.getAddressSlot */\n      tag_516\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_538:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2440  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_522:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_540\n      swap2\n      swap1\n      tag_541\n      jump\t// in\n    tag_540:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_544\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_543)\n    tag_544:\n      0x60\n      swap2\n      pop\n    tag_543:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_545\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_546\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_545:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_525:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6660:6661  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      iszero\n      tag_548\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n    tag_548:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_528:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_550\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_550:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_546:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_552\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_553\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_554\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_553:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_555)\n    tag_552:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_556\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_556:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_557\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_558\n      swap2\n      swap1\n      tag_451\n      jump\t// in\n    tag_558:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_557:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_551)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_555:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_551:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_554:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_560\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_560:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_562:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_563:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_564:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_565:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_566:\n        /* \"#utility.yul\":561:584   */\n      tag_641\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_565\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_642\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_642:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_567:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_644\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_566\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_43:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_647\n      tag_563\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":833:952   */\n    tag_646:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_648\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_567\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_568:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_569:\n        /* \"#utility.yul\":1268:1289   */\n      tag_651\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_568\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_46:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_653\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_569\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_570:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_571:\n        /* \"#utility.yul\":1674:1698   */\n      tag_656\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_570\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_657\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_657:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_572:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_659\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_571\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_50:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_662\n      tag_563\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":1950:2069   */\n    tag_661:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_663\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_572\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2335   */\n    tag_573:\n        /* \"#utility.yul\":2246:2253   */\n      0x00\n        /* \"#utility.yul\":2286:2328   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2279:2284   */\n      dup3\n        /* \"#utility.yul\":2275:2329   */\n      and\n        /* \"#utility.yul\":2264:2329   */\n      swap1\n      pop\n        /* \"#utility.yul\":2209:2335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2341:2437   */\n    tag_574:\n        /* \"#utility.yul\":2378:2385   */\n      0x00\n        /* \"#utility.yul\":2407:2431   */\n      tag_666\n        /* \"#utility.yul\":2425:2430   */\n      dup3\n        /* \"#utility.yul\":2407:2431   */\n      tag_573\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":2396:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2341:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2565   */\n    tag_575:\n        /* \"#utility.yul\":2516:2540   */\n      tag_668\n        /* \"#utility.yul\":2534:2539   */\n      dup2\n        /* \"#utility.yul\":2516:2540   */\n      tag_574\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":2509:2514   */\n      dup2\n        /* \"#utility.yul\":2506:2541   */\n      eq\n        /* \"#utility.yul\":2496:2559   */\n      tag_669\n      jumpi\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2552:2553   */\n      dup1\n        /* \"#utility.yul\":2545:2557   */\n      revert\n        /* \"#utility.yul\":2496:2559   */\n    tag_669:\n        /* \"#utility.yul\":2443:2565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2710   */\n    tag_576:\n        /* \"#utility.yul\":2617:2622   */\n      0x00\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2642:2662   */\n      calldataload\n        /* \"#utility.yul\":2633:2662   */\n      swap1\n      pop\n        /* \"#utility.yul\":2671:2704   */\n      tag_671\n        /* \"#utility.yul\":2698:2703   */\n      dup2\n        /* \"#utility.yul\":2671:2704   */\n      tag_575\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":2571:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3190   */\n    tag_55:\n        /* \"#utility.yul\":2784:2790   */\n      0x00\n        /* \"#utility.yul\":2792:2798   */\n      dup1\n        /* \"#utility.yul\":2841:2843   */\n      0x40\n        /* \"#utility.yul\":2829:2838   */\n      dup4\n        /* \"#utility.yul\":2820:2827   */\n      dup6\n        /* \"#utility.yul\":2816:2839   */\n      sub\n        /* \"#utility.yul\":2812:2844   */\n      slt\n        /* \"#utility.yul\":2809:2928   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":2847:2926   */\n      tag_674\n      tag_563\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":2809:2928   */\n    tag_673:\n        /* \"#utility.yul\":2967:2968   */\n      0x00\n        /* \"#utility.yul\":2992:3045   */\n      tag_675\n        /* \"#utility.yul\":3037:3044   */\n      dup6\n        /* \"#utility.yul\":3028:3034   */\n      dup3\n        /* \"#utility.yul\":3017:3026   */\n      dup7\n        /* \"#utility.yul\":3013:3035   */\n      add\n        /* \"#utility.yul\":2992:3045   */\n      tag_576\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":2982:3045   */\n      swap3\n      pop\n        /* \"#utility.yul\":2938:3055   */\n      pop\n        /* \"#utility.yul\":3094:3096   */\n      0x20\n        /* \"#utility.yul\":3120:3173   */\n      tag_676\n        /* \"#utility.yul\":3165:3172   */\n      dup6\n        /* \"#utility.yul\":3156:3162   */\n      dup3\n        /* \"#utility.yul\":3145:3154   */\n      dup7\n        /* \"#utility.yul\":3141:3163   */\n      add\n        /* \"#utility.yul\":3120:3173   */\n      tag_572\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":3110:3173   */\n      swap2\n      pop\n        /* \"#utility.yul\":3065:3183   */\n      pop\n        /* \"#utility.yul\":2716:3190   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3196:3525   */\n    tag_60:\n        /* \"#utility.yul\":3255:3261   */\n      0x00\n        /* \"#utility.yul\":3304:3306   */\n      0x20\n        /* \"#utility.yul\":3292:3301   */\n      dup3\n        /* \"#utility.yul\":3283:3290   */\n      dup5\n        /* \"#utility.yul\":3279:3302   */\n      sub\n        /* \"#utility.yul\":3275:3307   */\n      slt\n        /* \"#utility.yul\":3272:3391   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":3310:3389   */\n      tag_679\n      tag_563\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":3272:3391   */\n    tag_678:\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3455:3508   */\n      tag_680\n        /* \"#utility.yul\":3500:3507   */\n      dup5\n        /* \"#utility.yul\":3491:3497   */\n      dup3\n        /* \"#utility.yul\":3480:3489   */\n      dup6\n        /* \"#utility.yul\":3476:3498   */\n      add\n        /* \"#utility.yul\":3455:3508   */\n      tag_576\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":3445:3508   */\n      swap2\n      pop\n        /* \"#utility.yul\":3401:3518   */\n      pop\n        /* \"#utility.yul\":3196:3525   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3531:3649   */\n    tag_577:\n        /* \"#utility.yul\":3618:3642   */\n      tag_682\n        /* \"#utility.yul\":3636:3641   */\n      dup2\n        /* \"#utility.yul\":3618:3642   */\n      tag_570\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":3613:3616   */\n      dup3\n        /* \"#utility.yul\":3606:3643   */\n      mstore\n        /* \"#utility.yul\":3531:3649   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3655:4097   */\n    tag_63:\n        /* \"#utility.yul\":3804:3808   */\n      0x00\n        /* \"#utility.yul\":3842:3844   */\n      0x60\n        /* \"#utility.yul\":3831:3840   */\n      dup3\n        /* \"#utility.yul\":3827:3845   */\n      add\n        /* \"#utility.yul\":3819:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3855:3926   */\n      tag_684\n        /* \"#utility.yul\":3923:3924   */\n      0x00\n        /* \"#utility.yul\":3912:3921   */\n      dup4\n        /* \"#utility.yul\":3908:3925   */\n      add\n        /* \"#utility.yul\":3899:3905   */\n      dup7\n        /* \"#utility.yul\":3855:3926   */\n      tag_577\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":3936:4008   */\n      tag_685\n        /* \"#utility.yul\":4004:4006   */\n      0x20\n        /* \"#utility.yul\":3993:4002   */\n      dup4\n        /* \"#utility.yul\":3989:4007   */\n      add\n        /* \"#utility.yul\":3980:3986   */\n      dup6\n        /* \"#utility.yul\":3936:4008   */\n      tag_577\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":4018:4090   */\n      tag_686\n        /* \"#utility.yul\":4086:4088   */\n      0x40\n        /* \"#utility.yul\":4075:4084   */\n      dup4\n        /* \"#utility.yul\":4071:4089   */\n      add\n        /* \"#utility.yul\":4062:4068   */\n      dup5\n        /* \"#utility.yul\":4018:4090   */\n      tag_577\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":3655:4097   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4103:4180   */\n    tag_578:\n        /* \"#utility.yul\":4140:4147   */\n      0x00\n        /* \"#utility.yul\":4169:4174   */\n      dup2\n        /* \"#utility.yul\":4158:4174   */\n      swap1\n      pop\n        /* \"#utility.yul\":4103:4180   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4186:4304   */\n    tag_579:\n        /* \"#utility.yul\":4273:4297   */\n      tag_689\n        /* \"#utility.yul\":4291:4296   */\n      dup2\n        /* \"#utility.yul\":4273:4297   */\n      tag_578\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":4268:4271   */\n      dup3\n        /* \"#utility.yul\":4261:4298   */\n      mstore\n        /* \"#utility.yul\":4186:4304   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4310:4532   */\n    tag_68:\n        /* \"#utility.yul\":4403:4407   */\n      0x00\n        /* \"#utility.yul\":4441:4443   */\n      0x20\n        /* \"#utility.yul\":4430:4439   */\n      dup3\n        /* \"#utility.yul\":4426:4444   */\n      add\n        /* \"#utility.yul\":4418:4444   */\n      swap1\n      pop\n        /* \"#utility.yul\":4454:4525   */\n      tag_691\n        /* \"#utility.yul\":4522:4523   */\n      0x00\n        /* \"#utility.yul\":4511:4520   */\n      dup4\n        /* \"#utility.yul\":4507:4524   */\n      add\n        /* \"#utility.yul\":4498:4504   */\n      dup5\n        /* \"#utility.yul\":4454:4525   */\n      tag_579\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":4310:4532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4538:4660   */\n    tag_580:\n        /* \"#utility.yul\":4611:4635   */\n      tag_693\n        /* \"#utility.yul\":4629:4634   */\n      dup2\n        /* \"#utility.yul\":4611:4635   */\n      tag_578\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":4604:4609   */\n      dup2\n        /* \"#utility.yul\":4601:4636   */\n      eq\n        /* \"#utility.yul\":4591:4654   */\n      tag_694\n      jumpi\n        /* \"#utility.yul\":4650:4651   */\n      0x00\n        /* \"#utility.yul\":4647:4648   */\n      dup1\n        /* \"#utility.yul\":4640:4652   */\n      revert\n        /* \"#utility.yul\":4591:4654   */\n    tag_694:\n        /* \"#utility.yul\":4538:4660   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4666:4805   */\n    tag_581:\n        /* \"#utility.yul\":4712:4717   */\n      0x00\n        /* \"#utility.yul\":4750:4756   */\n      dup2\n        /* \"#utility.yul\":4737:4757   */\n      calldataload\n        /* \"#utility.yul\":4728:4757   */\n      swap1\n      pop\n        /* \"#utility.yul\":4766:4799   */\n      tag_696\n        /* \"#utility.yul\":4793:4798   */\n      dup2\n        /* \"#utility.yul\":4766:4799   */\n      tag_580\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":4666:4805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4811:5140   */\n    tag_72:\n        /* \"#utility.yul\":4870:4876   */\n      0x00\n        /* \"#utility.yul\":4919:4921   */\n      0x20\n        /* \"#utility.yul\":4907:4916   */\n      dup3\n        /* \"#utility.yul\":4898:4905   */\n      dup5\n        /* \"#utility.yul\":4894:4917   */\n      sub\n        /* \"#utility.yul\":4890:4922   */\n      slt\n        /* \"#utility.yul\":4887:5006   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":4925:5004   */\n      tag_699\n      tag_563\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":4887:5006   */\n    tag_698:\n        /* \"#utility.yul\":5045:5046   */\n      0x00\n        /* \"#utility.yul\":5070:5123   */\n      tag_700\n        /* \"#utility.yul\":5115:5122   */\n      dup5\n        /* \"#utility.yul\":5106:5112   */\n      dup3\n        /* \"#utility.yul\":5095:5104   */\n      dup6\n        /* \"#utility.yul\":5091:5113   */\n      add\n        /* \"#utility.yul\":5070:5123   */\n      tag_581\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":5060:5123   */\n      swap2\n      pop\n        /* \"#utility.yul\":5016:5133   */\n      pop\n        /* \"#utility.yul\":4811:5140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5146:5368   */\n    tag_79:\n        /* \"#utility.yul\":5239:5243   */\n      0x00\n        /* \"#utility.yul\":5277:5279   */\n      0x20\n        /* \"#utility.yul\":5266:5275   */\n      dup3\n        /* \"#utility.yul\":5262:5280   */\n      add\n        /* \"#utility.yul\":5254:5280   */\n      swap1\n      pop\n        /* \"#utility.yul\":5290:5361   */\n      tag_702\n        /* \"#utility.yul\":5358:5359   */\n      0x00\n        /* \"#utility.yul\":5347:5356   */\n      dup4\n        /* \"#utility.yul\":5343:5360   */\n      add\n        /* \"#utility.yul\":5334:5340   */\n      dup5\n        /* \"#utility.yul\":5290:5361   */\n      tag_577\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":5146:5368   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5374:5848   */\n    tag_83:\n        /* \"#utility.yul\":5442:5448   */\n      0x00\n        /* \"#utility.yul\":5450:5456   */\n      dup1\n        /* \"#utility.yul\":5499:5501   */\n      0x40\n        /* \"#utility.yul\":5487:5496   */\n      dup4\n        /* \"#utility.yul\":5478:5485   */\n      dup6\n        /* \"#utility.yul\":5474:5497   */\n      sub\n        /* \"#utility.yul\":5470:5502   */\n      slt\n        /* \"#utility.yul\":5467:5586   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":5505:5584   */\n      tag_705\n      tag_563\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":5467:5586   */\n    tag_704:\n        /* \"#utility.yul\":5625:5626   */\n      0x00\n        /* \"#utility.yul\":5650:5703   */\n      tag_706\n        /* \"#utility.yul\":5695:5702   */\n      dup6\n        /* \"#utility.yul\":5686:5692   */\n      dup3\n        /* \"#utility.yul\":5675:5684   */\n      dup7\n        /* \"#utility.yul\":5671:5693   */\n      add\n        /* \"#utility.yul\":5650:5703   */\n      tag_581\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":5640:5703   */\n      swap3\n      pop\n        /* \"#utility.yul\":5596:5713   */\n      pop\n        /* \"#utility.yul\":5752:5754   */\n      0x20\n        /* \"#utility.yul\":5778:5831   */\n      tag_707\n        /* \"#utility.yul\":5823:5830   */\n      dup6\n        /* \"#utility.yul\":5814:5820   */\n      dup3\n        /* \"#utility.yul\":5803:5812   */\n      dup7\n        /* \"#utility.yul\":5799:5821   */\n      add\n        /* \"#utility.yul\":5778:5831   */\n      tag_576\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":5768:5831   */\n      swap2\n      pop\n        /* \"#utility.yul\":5723:5841   */\n      pop\n        /* \"#utility.yul\":5374:5848   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5854:5914   */\n    tag_582:\n        /* \"#utility.yul\":5882:5885   */\n      0x00\n        /* \"#utility.yul\":5903:5908   */\n      dup2\n        /* \"#utility.yul\":5896:5908   */\n      swap1\n      pop\n        /* \"#utility.yul\":5854:5914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5920:6062   */\n    tag_583:\n        /* \"#utility.yul\":5970:5979   */\n      0x00\n        /* \"#utility.yul\":6003:6056   */\n      tag_710\n        /* \"#utility.yul\":6021:6055   */\n      tag_711\n        /* \"#utility.yul\":6030:6054   */\n      tag_712\n        /* \"#utility.yul\":6048:6053   */\n      dup5\n        /* \"#utility.yul\":6030:6054   */\n      tag_573\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":6021:6055   */\n      tag_582\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":6003:6056   */\n      tag_573\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":5990:6056   */\n      swap1\n      pop\n        /* \"#utility.yul\":5920:6062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6068:6194   */\n    tag_584:\n        /* \"#utility.yul\":6118:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6188   */\n      tag_714\n        /* \"#utility.yul\":6182:6187   */\n      dup3\n        /* \"#utility.yul\":6151:6188   */\n      tag_583\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":6138:6188   */\n      swap1\n      pop\n        /* \"#utility.yul\":6068:6194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6200:6351   */\n    tag_585:\n        /* \"#utility.yul\":6275:6284   */\n      0x00\n        /* \"#utility.yul\":6308:6345   */\n      tag_716\n        /* \"#utility.yul\":6339:6344   */\n      dup3\n        /* \"#utility.yul\":6308:6345   */\n      tag_584\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":6295:6345   */\n      swap1\n      pop\n        /* \"#utility.yul\":6200:6351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6357:6538   */\n    tag_586:\n        /* \"#utility.yul\":6469:6531   */\n      tag_718\n        /* \"#utility.yul\":6525:6530   */\n      dup2\n        /* \"#utility.yul\":6469:6531   */\n      tag_585\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":6464:6467   */\n      dup3\n        /* \"#utility.yul\":6457:6532   */\n      mstore\n        /* \"#utility.yul\":6357:6538   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6544:6816   */\n    tag_89:\n        /* \"#utility.yul\":6662:6666   */\n      0x00\n        /* \"#utility.yul\":6700:6702   */\n      0x20\n        /* \"#utility.yul\":6689:6698   */\n      dup3\n        /* \"#utility.yul\":6685:6703   */\n      add\n        /* \"#utility.yul\":6677:6703   */\n      swap1\n      pop\n        /* \"#utility.yul\":6713:6809   */\n      tag_720\n        /* \"#utility.yul\":6806:6807   */\n      0x00\n        /* \"#utility.yul\":6795:6804   */\n      dup4\n        /* \"#utility.yul\":6791:6808   */\n      add\n        /* \"#utility.yul\":6782:6788   */\n      dup5\n        /* \"#utility.yul\":6713:6809   */\n      tag_586\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":6544:6816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6822:7296   */\n    tag_99:\n        /* \"#utility.yul\":6890:6896   */\n      0x00\n        /* \"#utility.yul\":6898:6904   */\n      dup1\n        /* \"#utility.yul\":6947:6949   */\n      0x40\n        /* \"#utility.yul\":6935:6944   */\n      dup4\n        /* \"#utility.yul\":6926:6933   */\n      dup6\n        /* \"#utility.yul\":6922:6945   */\n      sub\n        /* \"#utility.yul\":6918:6950   */\n      slt\n        /* \"#utility.yul\":6915:7034   */\n      iszero\n      tag_722\n      jumpi\n        /* \"#utility.yul\":6953:7032   */\n      tag_723\n      tag_563\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":6915:7034   */\n    tag_722:\n        /* \"#utility.yul\":7073:7074   */\n      0x00\n        /* \"#utility.yul\":7098:7151   */\n      tag_724\n        /* \"#utility.yul\":7143:7150   */\n      dup6\n        /* \"#utility.yul\":7134:7140   */\n      dup3\n        /* \"#utility.yul\":7123:7132   */\n      dup7\n        /* \"#utility.yul\":7119:7141   */\n      add\n        /* \"#utility.yul\":7098:7151   */\n      tag_572\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":7088:7151   */\n      swap3\n      pop\n        /* \"#utility.yul\":7044:7161   */\n      pop\n        /* \"#utility.yul\":7200:7202   */\n      0x20\n        /* \"#utility.yul\":7226:7279   */\n      tag_725\n        /* \"#utility.yul\":7271:7278   */\n      dup6\n        /* \"#utility.yul\":7262:7268   */\n      dup3\n        /* \"#utility.yul\":7251:7260   */\n      dup7\n        /* \"#utility.yul\":7247:7269   */\n      add\n        /* \"#utility.yul\":7226:7279   */\n      tag_572\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":7216:7279   */\n      swap2\n      pop\n        /* \"#utility.yul\":7171:7289   */\n      pop\n        /* \"#utility.yul\":6822:7296   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7302:7419   */\n    tag_587:\n        /* \"#utility.yul\":7411:7412   */\n      0x00\n        /* \"#utility.yul\":7408:7409   */\n      dup1\n        /* \"#utility.yul\":7401:7413   */\n      revert\n        /* \"#utility.yul\":7425:7542   */\n    tag_588:\n        /* \"#utility.yul\":7534:7535   */\n      0x00\n        /* \"#utility.yul\":7531:7532   */\n      dup1\n        /* \"#utility.yul\":7524:7536   */\n      revert\n        /* \"#utility.yul\":7548:7650   */\n    tag_589:\n        /* \"#utility.yul\":7589:7595   */\n      0x00\n        /* \"#utility.yul\":7640:7642   */\n      0x1f\n        /* \"#utility.yul\":7636:7643   */\n      not\n        /* \"#utility.yul\":7631:7633   */\n      0x1f\n        /* \"#utility.yul\":7624:7629   */\n      dup4\n        /* \"#utility.yul\":7620:7634   */\n      add\n        /* \"#utility.yul\":7616:7644   */\n      and\n        /* \"#utility.yul\":7606:7644   */\n      swap1\n      pop\n        /* \"#utility.yul\":7548:7650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7836   */\n    tag_590:\n        /* \"#utility.yul\":7704:7781   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7701:7702   */\n      0x00\n        /* \"#utility.yul\":7694:7782   */\n      mstore\n        /* \"#utility.yul\":7801:7805   */\n      0x41\n        /* \"#utility.yul\":7798:7799   */\n      0x04\n        /* \"#utility.yul\":7791:7806   */\n      mstore\n        /* \"#utility.yul\":7825:7829   */\n      0x24\n        /* \"#utility.yul\":7822:7823   */\n      0x00\n        /* \"#utility.yul\":7815:7830   */\n      revert\n        /* \"#utility.yul\":7842:8123   */\n    tag_591:\n        /* \"#utility.yul\":7925:7952   */\n      tag_731\n        /* \"#utility.yul\":7947:7951   */\n      dup3\n        /* \"#utility.yul\":7925:7952   */\n      tag_589\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":7917:7923   */\n      dup2\n        /* \"#utility.yul\":7913:7953   */\n      add\n        /* \"#utility.yul\":8055:8061   */\n      dup2\n        /* \"#utility.yul\":8043:8053   */\n      dup2\n        /* \"#utility.yul\":8040:8062   */\n      lt\n        /* \"#utility.yul\":8019:8037   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8007:8017   */\n      dup3\n        /* \"#utility.yul\":8004:8038   */\n      gt\n        /* \"#utility.yul\":8001:8063   */\n      or\n        /* \"#utility.yul\":7998:8086   */\n      iszero\n      tag_732\n      jumpi\n        /* \"#utility.yul\":8066:8084   */\n      tag_733\n      tag_590\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":7998:8086   */\n    tag_732:\n        /* \"#utility.yul\":8106:8116   */\n      dup1\n        /* \"#utility.yul\":8102:8104   */\n      0x40\n        /* \"#utility.yul\":8095:8117   */\n      mstore\n        /* \"#utility.yul\":7885:8123   */\n      pop\n        /* \"#utility.yul\":7842:8123   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8129:8258   */\n    tag_592:\n        /* \"#utility.yul\":8163:8169   */\n      0x00\n        /* \"#utility.yul\":8190:8210   */\n      tag_735\n      tag_562\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":8180:8210   */\n      swap1\n      pop\n        /* \"#utility.yul\":8219:8252   */\n      tag_736\n        /* \"#utility.yul\":8247:8251   */\n      dup3\n        /* \"#utility.yul\":8239:8245   */\n      dup3\n        /* \"#utility.yul\":8219:8252   */\n      tag_591\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":8129:8258   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8264:8571   */\n    tag_593:\n        /* \"#utility.yul\":8325:8329   */\n      0x00\n        /* \"#utility.yul\":8415:8433   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8407:8413   */\n      dup3\n        /* \"#utility.yul\":8404:8434   */\n      gt\n        /* \"#utility.yul\":8401:8457   */\n      iszero\n      tag_738\n      jumpi\n        /* \"#utility.yul\":8437:8455   */\n      tag_739\n      tag_590\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":8401:8457   */\n    tag_738:\n        /* \"#utility.yul\":8475:8504   */\n      tag_740\n        /* \"#utility.yul\":8497:8503   */\n      dup3\n        /* \"#utility.yul\":8475:8504   */\n      tag_589\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":8467:8504   */\n      swap1\n      pop\n        /* \"#utility.yul\":8559:8563   */\n      0x20\n        /* \"#utility.yul\":8553:8557   */\n      dup2\n        /* \"#utility.yul\":8549:8564   */\n      add\n        /* \"#utility.yul\":8541:8564   */\n      swap1\n      pop\n        /* \"#utility.yul\":8264:8571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8577:8725   */\n    tag_594:\n        /* \"#utility.yul\":8675:8681   */\n      dup3\n        /* \"#utility.yul\":8670:8673   */\n      dup2\n        /* \"#utility.yul\":8665:8668   */\n      dup4\n        /* \"#utility.yul\":8652:8682   */\n      calldatacopy\n        /* \"#utility.yul\":8716:8717   */\n      0x00\n        /* \"#utility.yul\":8707:8713   */\n      dup4\n        /* \"#utility.yul\":8702:8705   */\n      dup4\n        /* \"#utility.yul\":8698:8714   */\n      add\n        /* \"#utility.yul\":8691:8718   */\n      mstore\n        /* \"#utility.yul\":8577:8725   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8731:9154   */\n    tag_595:\n        /* \"#utility.yul\":8808:8813   */\n      0x00\n        /* \"#utility.yul\":8833:8898   */\n      tag_743\n        /* \"#utility.yul\":8849:8897   */\n      tag_744\n        /* \"#utility.yul\":8890:8896   */\n      dup5\n        /* \"#utility.yul\":8849:8897   */\n      tag_593\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":8833:8898   */\n      tag_592\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":8824:8898   */\n      swap1\n      pop\n        /* \"#utility.yul\":8921:8927   */\n      dup3\n        /* \"#utility.yul\":8914:8919   */\n      dup2\n        /* \"#utility.yul\":8907:8928   */\n      mstore\n        /* \"#utility.yul\":8959:8963   */\n      0x20\n        /* \"#utility.yul\":8952:8957   */\n      dup2\n        /* \"#utility.yul\":8948:8964   */\n      add\n        /* \"#utility.yul\":8997:9000   */\n      dup5\n        /* \"#utility.yul\":8988:8994   */\n      dup5\n        /* \"#utility.yul\":8983:8986   */\n      dup5\n        /* \"#utility.yul\":8979:8995   */\n      add\n        /* \"#utility.yul\":8976:9001   */\n      gt\n        /* \"#utility.yul\":8973:9085   */\n      iszero\n      tag_745\n      jumpi\n        /* \"#utility.yul\":9004:9083   */\n      tag_746\n      tag_588\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":8973:9085   */\n    tag_745:\n        /* \"#utility.yul\":9094:9148   */\n      tag_747\n        /* \"#utility.yul\":9141:9147   */\n      dup5\n        /* \"#utility.yul\":9136:9139   */\n      dup3\n        /* \"#utility.yul\":9131:9134   */\n      dup6\n        /* \"#utility.yul\":9094:9148   */\n      tag_594\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":8814:9154   */\n      pop\n        /* \"#utility.yul\":8731:9154   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9173:9511   */\n    tag_596:\n        /* \"#utility.yul\":9228:9233   */\n      0x00\n        /* \"#utility.yul\":9277:9280   */\n      dup3\n        /* \"#utility.yul\":9270:9274   */\n      0x1f\n        /* \"#utility.yul\":9262:9268   */\n      dup4\n        /* \"#utility.yul\":9258:9275   */\n      add\n        /* \"#utility.yul\":9254:9281   */\n      slt\n        /* \"#utility.yul\":9244:9366   */\n      tag_749\n      jumpi\n        /* \"#utility.yul\":9285:9364   */\n      tag_750\n      tag_587\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":9244:9366   */\n    tag_749:\n        /* \"#utility.yul\":9402:9408   */\n      dup2\n        /* \"#utility.yul\":9389:9409   */\n      calldataload\n        /* \"#utility.yul\":9427:9505   */\n      tag_751\n        /* \"#utility.yul\":9501:9504   */\n      dup5\n        /* \"#utility.yul\":9493:9499   */\n      dup3\n        /* \"#utility.yul\":9486:9490   */\n      0x20\n        /* \"#utility.yul\":9478:9484   */\n      dup7\n        /* \"#utility.yul\":9474:9491   */\n      add\n        /* \"#utility.yul\":9427:9505   */\n      tag_595\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":9418:9505   */\n      swap2\n      pop\n        /* \"#utility.yul\":9234:9511   */\n      pop\n        /* \"#utility.yul\":9173:9511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9517:10169   */\n    tag_103:\n        /* \"#utility.yul\":9594:9600   */\n      0x00\n        /* \"#utility.yul\":9602:9608   */\n      dup1\n        /* \"#utility.yul\":9651:9653   */\n      0x40\n        /* \"#utility.yul\":9639:9648   */\n      dup4\n        /* \"#utility.yul\":9630:9637   */\n      dup6\n        /* \"#utility.yul\":9626:9649   */\n      sub\n        /* \"#utility.yul\":9622:9654   */\n      slt\n        /* \"#utility.yul\":9619:9738   */\n      iszero\n      tag_753\n      jumpi\n        /* \"#utility.yul\":9657:9736   */\n      tag_754\n      tag_563\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":9619:9738   */\n    tag_753:\n        /* \"#utility.yul\":9777:9778   */\n      0x00\n        /* \"#utility.yul\":9802:9855   */\n      tag_755\n        /* \"#utility.yul\":9847:9854   */\n      dup6\n        /* \"#utility.yul\":9838:9844   */\n      dup3\n        /* \"#utility.yul\":9827:9836   */\n      dup7\n        /* \"#utility.yul\":9823:9845   */\n      add\n        /* \"#utility.yul\":9802:9855   */\n      tag_576\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":9792:9855   */\n      swap3\n      pop\n        /* \"#utility.yul\":9748:9865   */\n      pop\n        /* \"#utility.yul\":9932:9934   */\n      0x20\n        /* \"#utility.yul\":9921:9930   */\n      dup4\n        /* \"#utility.yul\":9917:9935   */\n      add\n        /* \"#utility.yul\":9904:9936   */\n      calldataload\n        /* \"#utility.yul\":9963:9981   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9955:9961   */\n      dup2\n        /* \"#utility.yul\":9952:9982   */\n      gt\n        /* \"#utility.yul\":9949:10066   */\n      iszero\n      tag_756\n      jumpi\n        /* \"#utility.yul\":9985:10064   */\n      tag_757\n      tag_564\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":9949:10066   */\n    tag_756:\n        /* \"#utility.yul\":10090:10152   */\n      tag_758\n        /* \"#utility.yul\":10144:10151   */\n      dup6\n        /* \"#utility.yul\":10135:10141   */\n      dup3\n        /* \"#utility.yul\":10124:10133   */\n      dup7\n        /* \"#utility.yul\":10120:10142   */\n      add\n        /* \"#utility.yul\":10090:10152   */\n      tag_596\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":10080:10152   */\n      swap2\n      pop\n        /* \"#utility.yul\":9875:10162   */\n      pop\n        /* \"#utility.yul\":9517:10169   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10175:10507   */\n    tag_133:\n        /* \"#utility.yul\":10296:10300   */\n      0x00\n        /* \"#utility.yul\":10334:10336   */\n      0x40\n        /* \"#utility.yul\":10323:10332   */\n      dup3\n        /* \"#utility.yul\":10319:10337   */\n      add\n        /* \"#utility.yul\":10311:10337   */\n      swap1\n      pop\n        /* \"#utility.yul\":10347:10418   */\n      tag_760\n        /* \"#utility.yul\":10415:10416   */\n      0x00\n        /* \"#utility.yul\":10404:10413   */\n      dup4\n        /* \"#utility.yul\":10400:10417   */\n      add\n        /* \"#utility.yul\":10391:10397   */\n      dup6\n        /* \"#utility.yul\":10347:10418   */\n      tag_577\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":10428:10500   */\n      tag_761\n        /* \"#utility.yul\":10496:10498   */\n      0x20\n        /* \"#utility.yul\":10485:10494   */\n      dup4\n        /* \"#utility.yul\":10481:10499   */\n      add\n        /* \"#utility.yul\":10472:10478   */\n      dup5\n        /* \"#utility.yul\":10428:10500   */\n      tag_577\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":10175:10507   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10513:10612   */\n    tag_597:\n        /* \"#utility.yul\":10565:10571   */\n      0x00\n        /* \"#utility.yul\":10599:10604   */\n      dup2\n        /* \"#utility.yul\":10593:10605   */\n      mload\n        /* \"#utility.yul\":10583:10605   */\n      swap1\n      pop\n        /* \"#utility.yul\":10513:10612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10618:10787   */\n    tag_598:\n        /* \"#utility.yul\":10702:10713   */\n      0x00\n        /* \"#utility.yul\":10736:10742   */\n      dup3\n        /* \"#utility.yul\":10731:10734   */\n      dup3\n        /* \"#utility.yul\":10724:10743   */\n      mstore\n        /* \"#utility.yul\":10776:10780   */\n      0x20\n        /* \"#utility.yul\":10771:10774   */\n      dup3\n        /* \"#utility.yul\":10767:10781   */\n      add\n        /* \"#utility.yul\":10752:10781   */\n      swap1\n      pop\n        /* \"#utility.yul\":10618:10787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10793:10932   */\n    tag_599:\n        /* \"#utility.yul\":10882:10888   */\n      dup3\n        /* \"#utility.yul\":10877:10880   */\n      dup2\n        /* \"#utility.yul\":10872:10875   */\n      dup4\n        /* \"#utility.yul\":10866:10889   */\n      mcopy\n        /* \"#utility.yul\":10923:10924   */\n      0x00\n        /* \"#utility.yul\":10914:10920   */\n      dup4\n        /* \"#utility.yul\":10909:10912   */\n      dup4\n        /* \"#utility.yul\":10905:10921   */\n      add\n        /* \"#utility.yul\":10898:10925   */\n      mstore\n        /* \"#utility.yul\":10793:10932   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10938:11315   */\n    tag_600:\n        /* \"#utility.yul\":11026:11029   */\n      0x00\n        /* \"#utility.yul\":11054:11093   */\n      tag_766\n        /* \"#utility.yul\":11087:11092   */\n      dup3\n        /* \"#utility.yul\":11054:11093   */\n      tag_597\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":11109:11180   */\n      tag_767\n        /* \"#utility.yul\":11173:11179   */\n      dup2\n        /* \"#utility.yul\":11168:11171   */\n      dup6\n        /* \"#utility.yul\":11109:11180   */\n      tag_598\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":11102:11180   */\n      swap4\n      pop\n        /* \"#utility.yul\":11189:11254   */\n      tag_768\n        /* \"#utility.yul\":11247:11253   */\n      dup2\n        /* \"#utility.yul\":11242:11245   */\n      dup6\n        /* \"#utility.yul\":11235:11239   */\n      0x20\n        /* \"#utility.yul\":11228:11233   */\n      dup7\n        /* \"#utility.yul\":11224:11240   */\n      add\n        /* \"#utility.yul\":11189:11254   */\n      tag_599\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":11279:11308   */\n      tag_769\n        /* \"#utility.yul\":11301:11307   */\n      dup2\n        /* \"#utility.yul\":11279:11308   */\n      tag_589\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":11274:11277   */\n      dup5\n        /* \"#utility.yul\":11270:11309   */\n      add\n        /* \"#utility.yul\":11263:11309   */\n      swap2\n      pop\n        /* \"#utility.yul\":11030:11315   */\n      pop\n        /* \"#utility.yul\":10938:11315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11321:11634   */\n    tag_142:\n        /* \"#utility.yul\":11434:11438   */\n      0x00\n        /* \"#utility.yul\":11472:11474   */\n      0x20\n        /* \"#utility.yul\":11461:11470   */\n      dup3\n        /* \"#utility.yul\":11457:11475   */\n      add\n        /* \"#utility.yul\":11449:11475   */\n      swap1\n      pop\n        /* \"#utility.yul\":11521:11530   */\n      dup2\n        /* \"#utility.yul\":11515:11519   */\n      dup2\n        /* \"#utility.yul\":11511:11531   */\n      sub\n        /* \"#utility.yul\":11507:11508   */\n      0x00\n        /* \"#utility.yul\":11496:11505   */\n      dup4\n        /* \"#utility.yul\":11492:11509   */\n      add\n        /* \"#utility.yul\":11485:11532   */\n      mstore\n        /* \"#utility.yul\":11549:11627   */\n      tag_771\n        /* \"#utility.yul\":11622:11626   */\n      dup2\n        /* \"#utility.yul\":11613:11619   */\n      dup5\n        /* \"#utility.yul\":11549:11627   */\n      tag_600\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":11541:11627   */\n      swap1\n      pop\n        /* \"#utility.yul\":11321:11634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11640:12259   */\n    tag_146:\n        /* \"#utility.yul\":11717:11723   */\n      0x00\n        /* \"#utility.yul\":11725:11731   */\n      dup1\n        /* \"#utility.yul\":11733:11739   */\n      0x00\n        /* \"#utility.yul\":11782:11784   */\n      0x60\n        /* \"#utility.yul\":11770:11779   */\n      dup5\n        /* \"#utility.yul\":11761:11768   */\n      dup7\n        /* \"#utility.yul\":11757:11780   */\n      sub\n        /* \"#utility.yul\":11753:11785   */\n      slt\n        /* \"#utility.yul\":11750:11869   */\n      iszero\n      tag_773\n      jumpi\n        /* \"#utility.yul\":11788:11867   */\n      tag_774\n      tag_563\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":11750:11869   */\n    tag_773:\n        /* \"#utility.yul\":11908:11909   */\n      0x00\n        /* \"#utility.yul\":11933:11986   */\n      tag_775\n        /* \"#utility.yul\":11978:11985   */\n      dup7\n        /* \"#utility.yul\":11969:11975   */\n      dup3\n        /* \"#utility.yul\":11958:11967   */\n      dup8\n        /* \"#utility.yul\":11954:11976   */\n      add\n        /* \"#utility.yul\":11933:11986   */\n      tag_576\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":11923:11986   */\n      swap4\n      pop\n        /* \"#utility.yul\":11879:11996   */\n      pop\n        /* \"#utility.yul\":12035:12037   */\n      0x20\n        /* \"#utility.yul\":12061:12114   */\n      tag_776\n        /* \"#utility.yul\":12106:12113   */\n      dup7\n        /* \"#utility.yul\":12097:12103   */\n      dup3\n        /* \"#utility.yul\":12086:12095   */\n      dup8\n        /* \"#utility.yul\":12082:12104   */\n      add\n        /* \"#utility.yul\":12061:12114   */\n      tag_572\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":12051:12114   */\n      swap3\n      pop\n        /* \"#utility.yul\":12006:12124   */\n      pop\n        /* \"#utility.yul\":12163:12165   */\n      0x40\n        /* \"#utility.yul\":12189:12242   */\n      tag_777\n        /* \"#utility.yul\":12234:12241   */\n      dup7\n        /* \"#utility.yul\":12225:12231   */\n      dup3\n        /* \"#utility.yul\":12214:12223   */\n      dup8\n        /* \"#utility.yul\":12210:12232   */\n      add\n        /* \"#utility.yul\":12189:12242   */\n      tag_572\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":12179:12242   */\n      swap2\n      pop\n        /* \"#utility.yul\":12134:12252   */\n      pop\n        /* \"#utility.yul\":11640:12259   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":12265:13322   */\n    tag_151:\n        /* \"#utility.yul\":12369:12375   */\n      0x00\n        /* \"#utility.yul\":12377:12383   */\n      dup1\n        /* \"#utility.yul\":12385:12391   */\n      0x00\n        /* \"#utility.yul\":12393:12399   */\n      dup1\n        /* \"#utility.yul\":12401:12407   */\n      0x00\n        /* \"#utility.yul\":12409:12415   */\n      dup1\n        /* \"#utility.yul\":12458:12461   */\n      0xc0\n        /* \"#utility.yul\":12446:12455   */\n      dup8\n        /* \"#utility.yul\":12437:12444   */\n      dup10\n        /* \"#utility.yul\":12433:12456   */\n      sub\n        /* \"#utility.yul\":12429:12462   */\n      slt\n        /* \"#utility.yul\":12426:12546   */\n      iszero\n      tag_779\n      jumpi\n        /* \"#utility.yul\":12465:12544   */\n      tag_780\n      tag_563\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":12426:12546   */\n    tag_779:\n        /* \"#utility.yul\":12585:12586   */\n      0x00\n        /* \"#utility.yul\":12610:12663   */\n      tag_781\n        /* \"#utility.yul\":12655:12662   */\n      dup10\n        /* \"#utility.yul\":12646:12652   */\n      dup3\n        /* \"#utility.yul\":12635:12644   */\n      dup11\n        /* \"#utility.yul\":12631:12653   */\n      add\n        /* \"#utility.yul\":12610:12663   */\n      tag_576\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":12600:12663   */\n      swap7\n      pop\n        /* \"#utility.yul\":12556:12673   */\n      pop\n        /* \"#utility.yul\":12712:12714   */\n      0x20\n        /* \"#utility.yul\":12738:12791   */\n      tag_782\n        /* \"#utility.yul\":12783:12790   */\n      dup10\n        /* \"#utility.yul\":12774:12780   */\n      dup3\n        /* \"#utility.yul\":12763:12772   */\n      dup11\n        /* \"#utility.yul\":12759:12781   */\n      add\n        /* \"#utility.yul\":12738:12791   */\n      tag_576\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":12728:12791   */\n      swap6\n      pop\n        /* \"#utility.yul\":12683:12801   */\n      pop\n        /* \"#utility.yul\":12840:12842   */\n      0x40\n        /* \"#utility.yul\":12866:12919   */\n      tag_783\n        /* \"#utility.yul\":12911:12918   */\n      dup10\n        /* \"#utility.yul\":12902:12908   */\n      dup3\n        /* \"#utility.yul\":12891:12900   */\n      dup11\n        /* \"#utility.yul\":12887:12909   */\n      add\n        /* \"#utility.yul\":12866:12919   */\n      tag_576\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":12856:12919   */\n      swap5\n      pop\n        /* \"#utility.yul\":12811:12929   */\n      pop\n        /* \"#utility.yul\":12968:12970   */\n      0x60\n        /* \"#utility.yul\":12994:13047   */\n      tag_784\n        /* \"#utility.yul\":13039:13046   */\n      dup10\n        /* \"#utility.yul\":13030:13036   */\n      dup3\n        /* \"#utility.yul\":13019:13028   */\n      dup11\n        /* \"#utility.yul\":13015:13037   */\n      add\n        /* \"#utility.yul\":12994:13047   */\n      tag_576\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":12984:13047   */\n      swap4\n      pop\n        /* \"#utility.yul\":12939:13057   */\n      pop\n        /* \"#utility.yul\":13096:13099   */\n      0x80\n        /* \"#utility.yul\":13123:13176   */\n      tag_785\n        /* \"#utility.yul\":13168:13175   */\n      dup10\n        /* \"#utility.yul\":13159:13165   */\n      dup3\n        /* \"#utility.yul\":13148:13157   */\n      dup11\n        /* \"#utility.yul\":13144:13166   */\n      add\n        /* \"#utility.yul\":13123:13176   */\n      tag_576\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":13113:13176   */\n      swap3\n      pop\n        /* \"#utility.yul\":13067:13186   */\n      pop\n        /* \"#utility.yul\":13225:13228   */\n      0xa0\n        /* \"#utility.yul\":13252:13305   */\n      tag_786\n        /* \"#utility.yul\":13297:13304   */\n      dup10\n        /* \"#utility.yul\":13288:13294   */\n      dup3\n        /* \"#utility.yul\":13277:13286   */\n      dup11\n        /* \"#utility.yul\":13273:13295   */\n      add\n        /* \"#utility.yul\":13252:13305   */\n      tag_576\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":13242:13305   */\n      swap2\n      pop\n        /* \"#utility.yul\":13196:13315   */\n      pop\n        /* \"#utility.yul\":12265:13322   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":13328:13480   */\n    tag_601:\n        /* \"#utility.yul\":13404:13413   */\n      0x00\n        /* \"#utility.yul\":13437:13474   */\n      tag_788\n        /* \"#utility.yul\":13468:13473   */\n      dup3\n        /* \"#utility.yul\":13437:13474   */\n      tag_584\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":13424:13474   */\n      swap1\n      pop\n        /* \"#utility.yul\":13328:13480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13486:13669   */\n    tag_602:\n        /* \"#utility.yul\":13599:13662   */\n      tag_790\n        /* \"#utility.yul\":13656:13661   */\n      dup2\n        /* \"#utility.yul\":13599:13662   */\n      tag_601\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":13594:13597   */\n      dup3\n        /* \"#utility.yul\":13587:13663   */\n      mstore\n        /* \"#utility.yul\":13486:13669   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13675:13949   */\n    tag_165:\n        /* \"#utility.yul\":13794:13798   */\n      0x00\n        /* \"#utility.yul\":13832:13834   */\n      0x20\n        /* \"#utility.yul\":13821:13830   */\n      dup3\n        /* \"#utility.yul\":13817:13835   */\n      add\n        /* \"#utility.yul\":13809:13835   */\n      swap1\n      pop\n        /* \"#utility.yul\":13845:13942   */\n      tag_792\n        /* \"#utility.yul\":13939:13940   */\n      0x00\n        /* \"#utility.yul\":13928:13937   */\n      dup4\n        /* \"#utility.yul\":13924:13941   */\n      add\n        /* \"#utility.yul\":13915:13921   */\n      dup5\n        /* \"#utility.yul\":13845:13942   */\n      tag_602\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":13675:13949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13955:14073   */\n    tag_603:\n        /* \"#utility.yul\":14042:14066   */\n      tag_794\n        /* \"#utility.yul\":14060:14065   */\n      dup2\n        /* \"#utility.yul\":14042:14066   */\n      tag_574\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":14037:14040   */\n      dup3\n        /* \"#utility.yul\":14030:14067   */\n      mstore\n        /* \"#utility.yul\":13955:14073   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14079:14521   */\n    tag_191:\n        /* \"#utility.yul\":14228:14232   */\n      0x00\n        /* \"#utility.yul\":14266:14268   */\n      0x60\n        /* \"#utility.yul\":14255:14264   */\n      dup3\n        /* \"#utility.yul\":14251:14269   */\n      add\n        /* \"#utility.yul\":14243:14269   */\n      swap1\n      pop\n        /* \"#utility.yul\":14279:14350   */\n      tag_796\n        /* \"#utility.yul\":14347:14348   */\n      0x00\n        /* \"#utility.yul\":14336:14345   */\n      dup4\n        /* \"#utility.yul\":14332:14349   */\n      add\n        /* \"#utility.yul\":14323:14329   */\n      dup7\n        /* \"#utility.yul\":14279:14350   */\n      tag_603\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":14360:14432   */\n      tag_797\n        /* \"#utility.yul\":14428:14430   */\n      0x20\n        /* \"#utility.yul\":14417:14426   */\n      dup4\n        /* \"#utility.yul\":14413:14431   */\n      add\n        /* \"#utility.yul\":14404:14410   */\n      dup6\n        /* \"#utility.yul\":14360:14432   */\n      tag_603\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":14442:14514   */\n      tag_798\n        /* \"#utility.yul\":14510:14512   */\n      0x40\n        /* \"#utility.yul\":14499:14508   */\n      dup4\n        /* \"#utility.yul\":14495:14513   */\n      add\n        /* \"#utility.yul\":14486:14492   */\n      dup5\n        /* \"#utility.yul\":14442:14514   */\n      tag_577\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":14079:14521   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14527:14859   */\n    tag_199:\n        /* \"#utility.yul\":14648:14652   */\n      0x00\n        /* \"#utility.yul\":14686:14688   */\n      0x40\n        /* \"#utility.yul\":14675:14684   */\n      dup3\n        /* \"#utility.yul\":14671:14689   */\n      add\n        /* \"#utility.yul\":14663:14689   */\n      swap1\n      pop\n        /* \"#utility.yul\":14699:14770   */\n      tag_800\n        /* \"#utility.yul\":14767:14768   */\n      0x00\n        /* \"#utility.yul\":14756:14765   */\n      dup4\n        /* \"#utility.yul\":14752:14769   */\n      add\n        /* \"#utility.yul\":14743:14749   */\n      dup6\n        /* \"#utility.yul\":14699:14770   */\n      tag_603\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":14780:14852   */\n      tag_801\n        /* \"#utility.yul\":14848:14850   */\n      0x20\n        /* \"#utility.yul\":14837:14846   */\n      dup4\n        /* \"#utility.yul\":14833:14851   */\n      add\n        /* \"#utility.yul\":14824:14830   */\n      dup5\n        /* \"#utility.yul\":14780:14852   */\n      tag_577\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":14527:14859   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14865:14981   */\n    tag_604:\n        /* \"#utility.yul\":14935:14956   */\n      tag_803\n        /* \"#utility.yul\":14950:14955   */\n      dup2\n        /* \"#utility.yul\":14935:14956   */\n      tag_568\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":14928:14933   */\n      dup2\n        /* \"#utility.yul\":14925:14957   */\n      eq\n        /* \"#utility.yul\":14915:14975   */\n      tag_804\n      jumpi\n        /* \"#utility.yul\":14971:14972   */\n      0x00\n        /* \"#utility.yul\":14968:14969   */\n      dup1\n        /* \"#utility.yul\":14961:14973   */\n      revert\n        /* \"#utility.yul\":14915:14975   */\n    tag_804:\n        /* \"#utility.yul\":14865:14981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14987:15124   */\n    tag_605:\n        /* \"#utility.yul\":15041:15046   */\n      0x00\n        /* \"#utility.yul\":15072:15078   */\n      dup2\n        /* \"#utility.yul\":15066:15079   */\n      mload\n        /* \"#utility.yul\":15057:15079   */\n      swap1\n      pop\n        /* \"#utility.yul\":15088:15118   */\n      tag_806\n        /* \"#utility.yul\":15112:15117   */\n      dup2\n        /* \"#utility.yul\":15088:15118   */\n      tag_604\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":14987:15124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15130:15475   */\n    tag_203:\n        /* \"#utility.yul\":15197:15203   */\n      0x00\n        /* \"#utility.yul\":15246:15248   */\n      0x20\n        /* \"#utility.yul\":15234:15243   */\n      dup3\n        /* \"#utility.yul\":15225:15232   */\n      dup5\n        /* \"#utility.yul\":15221:15244   */\n      sub\n        /* \"#utility.yul\":15217:15249   */\n      slt\n        /* \"#utility.yul\":15214:15333   */\n      iszero\n      tag_808\n      jumpi\n        /* \"#utility.yul\":15252:15331   */\n      tag_809\n      tag_563\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":15214:15333   */\n    tag_808:\n        /* \"#utility.yul\":15372:15373   */\n      0x00\n        /* \"#utility.yul\":15397:15458   */\n      tag_810\n        /* \"#utility.yul\":15450:15457   */\n      dup5\n        /* \"#utility.yul\":15441:15447   */\n      dup3\n        /* \"#utility.yul\":15430:15439   */\n      dup6\n        /* \"#utility.yul\":15426:15448   */\n      add\n        /* \"#utility.yul\":15397:15458   */\n      tag_605\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":15387:15458   */\n      swap2\n      pop\n        /* \"#utility.yul\":15343:15468   */\n      pop\n        /* \"#utility.yul\":15130:15475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15481:15704   */\n    tag_606:\n        /* \"#utility.yul\":15621:15655   */\n      0x45544820616d6f756e74206d7573742062652067726561746572207468616e20\n        /* \"#utility.yul\":15617:15618   */\n      0x00\n        /* \"#utility.yul\":15609:15615   */\n      dup3\n        /* \"#utility.yul\":15605:15619   */\n      add\n        /* \"#utility.yul\":15598:15656   */\n      mstore\n        /* \"#utility.yul\":15690:15696   */\n      0x7a65726f00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15685:15687   */\n      0x20\n        /* \"#utility.yul\":15677:15683   */\n      dup3\n        /* \"#utility.yul\":15673:15688   */\n      add\n        /* \"#utility.yul\":15666:15697   */\n      mstore\n        /* \"#utility.yul\":15481:15704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15710:16076   */\n    tag_607:\n        /* \"#utility.yul\":15852:15855   */\n      0x00\n        /* \"#utility.yul\":15873:15940   */\n      tag_813\n        /* \"#utility.yul\":15937:15939   */\n      0x24\n        /* \"#utility.yul\":15932:15935   */\n      dup4\n        /* \"#utility.yul\":15873:15940   */\n      tag_598\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":15866:15940   */\n      swap2\n      pop\n        /* \"#utility.yul\":15949:16042   */\n      tag_814\n        /* \"#utility.yul\":16038:16041   */\n      dup3\n        /* \"#utility.yul\":15949:16042   */\n      tag_606\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":16067:16069   */\n      0x40\n        /* \"#utility.yul\":16062:16065   */\n      dup3\n        /* \"#utility.yul\":16058:16070   */\n      add\n        /* \"#utility.yul\":16051:16070   */\n      swap1\n      pop\n        /* \"#utility.yul\":15710:16076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16082:16501   */\n    tag_230:\n        /* \"#utility.yul\":16248:16252   */\n      0x00\n        /* \"#utility.yul\":16286:16288   */\n      0x20\n        /* \"#utility.yul\":16275:16284   */\n      dup3\n        /* \"#utility.yul\":16271:16289   */\n      add\n        /* \"#utility.yul\":16263:16289   */\n      swap1\n      pop\n        /* \"#utility.yul\":16335:16344   */\n      dup2\n        /* \"#utility.yul\":16329:16333   */\n      dup2\n        /* \"#utility.yul\":16325:16345   */\n      sub\n        /* \"#utility.yul\":16321:16322   */\n      0x00\n        /* \"#utility.yul\":16310:16319   */\n      dup4\n        /* \"#utility.yul\":16306:16323   */\n      add\n        /* \"#utility.yul\":16299:16346   */\n      mstore\n        /* \"#utility.yul\":16363:16494   */\n      tag_816\n        /* \"#utility.yul\":16489:16493   */\n      dup2\n        /* \"#utility.yul\":16363:16494   */\n      tag_607\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":16355:16494   */\n      swap1\n      pop\n        /* \"#utility.yul\":16082:16501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16507:16650   */\n    tag_608:\n        /* \"#utility.yul\":16564:16569   */\n      0x00\n        /* \"#utility.yul\":16595:16601   */\n      dup2\n        /* \"#utility.yul\":16589:16602   */\n      mload\n        /* \"#utility.yul\":16580:16602   */\n      swap1\n      pop\n        /* \"#utility.yul\":16611:16644   */\n      tag_818\n        /* \"#utility.yul\":16638:16643   */\n      dup2\n        /* \"#utility.yul\":16611:16644   */\n      tag_575\n      jump\t// in\n    tag_818:\n        /* \"#utility.yul\":16507:16650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16656:17007   */\n    tag_235:\n        /* \"#utility.yul\":16726:16732   */\n      0x00\n        /* \"#utility.yul\":16775:16777   */\n      0x20\n        /* \"#utility.yul\":16763:16772   */\n      dup3\n        /* \"#utility.yul\":16754:16761   */\n      dup5\n        /* \"#utility.yul\":16750:16773   */\n      sub\n        /* \"#utility.yul\":16746:16778   */\n      slt\n        /* \"#utility.yul\":16743:16862   */\n      iszero\n      tag_820\n      jumpi\n        /* \"#utility.yul\":16781:16860   */\n      tag_821\n      tag_563\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":16743:16862   */\n    tag_820:\n        /* \"#utility.yul\":16901:16902   */\n      0x00\n        /* \"#utility.yul\":16926:16990   */\n      tag_822\n        /* \"#utility.yul\":16982:16989   */\n      dup5\n        /* \"#utility.yul\":16973:16979   */\n      dup3\n        /* \"#utility.yul\":16962:16971   */\n      dup6\n        /* \"#utility.yul\":16958:16980   */\n      add\n        /* \"#utility.yul\":16926:16990   */\n      tag_608\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":16916:16990   */\n      swap2\n      pop\n        /* \"#utility.yul\":16872:17000   */\n      pop\n        /* \"#utility.yul\":16656:17007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17013:17188   */\n    tag_609:\n        /* \"#utility.yul\":17153:17180   */\n      0x4e4654206e6f74206f776e656420627920636f6e747261637400000000000000\n        /* \"#utility.yul\":17149:17150   */\n      0x00\n        /* \"#utility.yul\":17141:17147   */\n      dup3\n        /* \"#utility.yul\":17137:17151   */\n      add\n        /* \"#utility.yul\":17130:17181   */\n      mstore\n        /* \"#utility.yul\":17013:17188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17194:17560   */\n    tag_610:\n        /* \"#utility.yul\":17336:17339   */\n      0x00\n        /* \"#utility.yul\":17357:17424   */\n      tag_825\n        /* \"#utility.yul\":17421:17423   */\n      0x19\n        /* \"#utility.yul\":17416:17419   */\n      dup4\n        /* \"#utility.yul\":17357:17424   */\n      tag_598\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":17350:17424   */\n      swap2\n      pop\n        /* \"#utility.yul\":17433:17526   */\n      tag_826\n        /* \"#utility.yul\":17522:17525   */\n      dup3\n        /* \"#utility.yul\":17433:17526   */\n      tag_609\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":17551:17553   */\n      0x20\n        /* \"#utility.yul\":17546:17549   */\n      dup3\n        /* \"#utility.yul\":17542:17554   */\n      add\n        /* \"#utility.yul\":17535:17554   */\n      swap1\n      pop\n        /* \"#utility.yul\":17194:17560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17566:17985   */\n    tag_238:\n        /* \"#utility.yul\":17732:17736   */\n      0x00\n        /* \"#utility.yul\":17770:17772   */\n      0x20\n        /* \"#utility.yul\":17759:17768   */\n      dup3\n        /* \"#utility.yul\":17755:17773   */\n      add\n        /* \"#utility.yul\":17747:17773   */\n      swap1\n      pop\n        /* \"#utility.yul\":17819:17828   */\n      dup2\n        /* \"#utility.yul\":17813:17817   */\n      dup2\n        /* \"#utility.yul\":17809:17829   */\n      sub\n        /* \"#utility.yul\":17805:17806   */\n      0x00\n        /* \"#utility.yul\":17794:17803   */\n      dup4\n        /* \"#utility.yul\":17790:17807   */\n      add\n        /* \"#utility.yul\":17783:17830   */\n      mstore\n        /* \"#utility.yul\":17847:17978   */\n      tag_828\n        /* \"#utility.yul\":17973:17977   */\n      dup2\n        /* \"#utility.yul\":17847:17978   */\n      tag_610\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":17839:17978   */\n      swap1\n      pop\n        /* \"#utility.yul\":17566:17985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17991:18171   */\n    tag_611:\n        /* \"#utility.yul\":18039:18116   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18036:18037   */\n      0x00\n        /* \"#utility.yul\":18029:18117   */\n      mstore\n        /* \"#utility.yul\":18136:18140   */\n      0x11\n        /* \"#utility.yul\":18133:18134   */\n      0x04\n        /* \"#utility.yul\":18126:18141   */\n      mstore\n        /* \"#utility.yul\":18160:18164   */\n      0x24\n        /* \"#utility.yul\":18157:18158   */\n      0x00\n        /* \"#utility.yul\":18150:18165   */\n      revert\n        /* \"#utility.yul\":18177:18371   */\n    tag_241:\n        /* \"#utility.yul\":18217:18221   */\n      0x00\n        /* \"#utility.yul\":18237:18257   */\n      tag_831\n        /* \"#utility.yul\":18255:18256   */\n      dup3\n        /* \"#utility.yul\":18237:18257   */\n      tag_570\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":18232:18257   */\n      swap2\n      pop\n        /* \"#utility.yul\":18271:18291   */\n      tag_832\n        /* \"#utility.yul\":18289:18290   */\n      dup4\n        /* \"#utility.yul\":18271:18291   */\n      tag_570\n      jump\t// in\n    tag_832:\n        /* \"#utility.yul\":18266:18291   */\n      swap3\n      pop\n        /* \"#utility.yul\":18315:18316   */\n      dup3\n        /* \"#utility.yul\":18312:18313   */\n      dup3\n        /* \"#utility.yul\":18308:18317   */\n      sub\n        /* \"#utility.yul\":18300:18317   */\n      swap1\n      pop\n        /* \"#utility.yul\":18339:18340   */\n      dup2\n        /* \"#utility.yul\":18333:18337   */\n      dup2\n        /* \"#utility.yul\":18330:18341   */\n      gt\n        /* \"#utility.yul\":18327:18364   */\n      iszero\n      tag_833\n      jumpi\n        /* \"#utility.yul\":18344:18362   */\n      tag_834\n      tag_611\n      jump\t// in\n    tag_834:\n        /* \"#utility.yul\":18327:18364   */\n    tag_833:\n        /* \"#utility.yul\":18177:18371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18377:18554   */\n    tag_612:\n        /* \"#utility.yul\":18517:18546   */\n      0x536c69707061676520746f6c6572616e63652065786365656465640000000000\n        /* \"#utility.yul\":18513:18514   */\n      0x00\n        /* \"#utility.yul\":18505:18511   */\n      dup3\n        /* \"#utility.yul\":18501:18515   */\n      add\n        /* \"#utility.yul\":18494:18547   */\n      mstore\n        /* \"#utility.yul\":18377:18554   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18560:18926   */\n    tag_613:\n        /* \"#utility.yul\":18702:18705   */\n      0x00\n        /* \"#utility.yul\":18723:18790   */\n      tag_837\n        /* \"#utility.yul\":18787:18789   */\n      0x1b\n        /* \"#utility.yul\":18782:18785   */\n      dup4\n        /* \"#utility.yul\":18723:18790   */\n      tag_598\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":18716:18790   */\n      swap2\n      pop\n        /* \"#utility.yul\":18799:18892   */\n      tag_838\n        /* \"#utility.yul\":18888:18891   */\n      dup3\n        /* \"#utility.yul\":18799:18892   */\n      tag_612\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":18917:18919   */\n      0x20\n        /* \"#utility.yul\":18912:18915   */\n      dup3\n        /* \"#utility.yul\":18908:18920   */\n      add\n        /* \"#utility.yul\":18901:18920   */\n      swap1\n      pop\n        /* \"#utility.yul\":18560:18926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18932:19351   */\n    tag_245:\n        /* \"#utility.yul\":19098:19102   */\n      0x00\n        /* \"#utility.yul\":19136:19138   */\n      0x20\n        /* \"#utility.yul\":19125:19134   */\n      dup3\n        /* \"#utility.yul\":19121:19139   */\n      add\n        /* \"#utility.yul\":19113:19139   */\n      swap1\n      pop\n        /* \"#utility.yul\":19185:19194   */\n      dup2\n        /* \"#utility.yul\":19179:19183   */\n      dup2\n        /* \"#utility.yul\":19175:19195   */\n      sub\n        /* \"#utility.yul\":19171:19172   */\n      0x00\n        /* \"#utility.yul\":19160:19169   */\n      dup4\n        /* \"#utility.yul\":19156:19173   */\n      add\n        /* \"#utility.yul\":19149:19196   */\n      mstore\n        /* \"#utility.yul\":19213:19344   */\n      tag_840\n        /* \"#utility.yul\":19339:19343   */\n      dup2\n        /* \"#utility.yul\":19213:19344   */\n      tag_613\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":19205:19344   */\n      swap1\n      pop\n        /* \"#utility.yul\":18932:19351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19357:19529   */\n    tag_614:\n        /* \"#utility.yul\":19497:19521   */\n      0x496e73756666696369656e74206c697175696469747900000000000000000000\n        /* \"#utility.yul\":19493:19494   */\n      0x00\n        /* \"#utility.yul\":19485:19491   */\n      dup3\n        /* \"#utility.yul\":19481:19495   */\n      add\n        /* \"#utility.yul\":19474:19522   */\n      mstore\n        /* \"#utility.yul\":19357:19529   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19535:19901   */\n    tag_615:\n        /* \"#utility.yul\":19677:19680   */\n      0x00\n        /* \"#utility.yul\":19698:19765   */\n      tag_843\n        /* \"#utility.yul\":19762:19764   */\n      0x16\n        /* \"#utility.yul\":19757:19760   */\n      dup4\n        /* \"#utility.yul\":19698:19765   */\n      tag_598\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":19691:19765   */\n      swap2\n      pop\n        /* \"#utility.yul\":19774:19867   */\n      tag_844\n        /* \"#utility.yul\":19863:19866   */\n      dup3\n        /* \"#utility.yul\":19774:19867   */\n      tag_614\n      jump\t// in\n    tag_844:\n        /* \"#utility.yul\":19892:19894   */\n      0x20\n        /* \"#utility.yul\":19887:19890   */\n      dup3\n        /* \"#utility.yul\":19883:19895   */\n      add\n        /* \"#utility.yul\":19876:19895   */\n      swap1\n      pop\n        /* \"#utility.yul\":19535:19901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19907:20326   */\n    tag_269:\n        /* \"#utility.yul\":20073:20077   */\n      0x00\n        /* \"#utility.yul\":20111:20113   */\n      0x20\n        /* \"#utility.yul\":20100:20109   */\n      dup3\n        /* \"#utility.yul\":20096:20114   */\n      add\n        /* \"#utility.yul\":20088:20114   */\n      swap1\n      pop\n        /* \"#utility.yul\":20160:20169   */\n      dup2\n        /* \"#utility.yul\":20154:20158   */\n      dup2\n        /* \"#utility.yul\":20150:20170   */\n      sub\n        /* \"#utility.yul\":20146:20147   */\n      0x00\n        /* \"#utility.yul\":20135:20144   */\n      dup4\n        /* \"#utility.yul\":20131:20148   */\n      add\n        /* \"#utility.yul\":20124:20171   */\n      mstore\n        /* \"#utility.yul\":20188:20319   */\n      tag_846\n        /* \"#utility.yul\":20314:20318   */\n      dup2\n        /* \"#utility.yul\":20188:20319   */\n      tag_615\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":20180:20319   */\n      swap1\n      pop\n        /* \"#utility.yul\":19907:20326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20332:20523   */\n    tag_274:\n        /* \"#utility.yul\":20372:20375   */\n      0x00\n        /* \"#utility.yul\":20391:20411   */\n      tag_848\n        /* \"#utility.yul\":20409:20410   */\n      dup3\n        /* \"#utility.yul\":20391:20411   */\n      tag_570\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":20386:20411   */\n      swap2\n      pop\n        /* \"#utility.yul\":20425:20445   */\n      tag_849\n        /* \"#utility.yul\":20443:20444   */\n      dup4\n        /* \"#utility.yul\":20425:20445   */\n      tag_570\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":20420:20445   */\n      swap3\n      pop\n        /* \"#utility.yul\":20468:20469   */\n      dup3\n        /* \"#utility.yul\":20465:20466   */\n      dup3\n        /* \"#utility.yul\":20461:20470   */\n      add\n        /* \"#utility.yul\":20454:20470   */\n      swap1\n      pop\n        /* \"#utility.yul\":20489:20492   */\n      dup1\n        /* \"#utility.yul\":20486:20487   */\n      dup3\n        /* \"#utility.yul\":20483:20493   */\n      gt\n        /* \"#utility.yul\":20480:20516   */\n      iszero\n      tag_850\n      jumpi\n        /* \"#utility.yul\":20496:20514   */\n      tag_851\n      tag_611\n      jump\t// in\n    tag_851:\n        /* \"#utility.yul\":20480:20516   */\n    tag_850:\n        /* \"#utility.yul\":20332:20523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20529:20754   */\n    tag_616:\n        /* \"#utility.yul\":20669:20703   */\n      0x546f6b656e20616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":20665:20666   */\n      0x00\n        /* \"#utility.yul\":20657:20663   */\n      dup3\n        /* \"#utility.yul\":20653:20667   */\n      add\n        /* \"#utility.yul\":20646:20704   */\n      mstore\n        /* \"#utility.yul\":20738:20746   */\n      0x6e207a65726f0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20733:20735   */\n      0x20\n        /* \"#utility.yul\":20725:20731   */\n      dup3\n        /* \"#utility.yul\":20721:20736   */\n      add\n        /* \"#utility.yul\":20714:20747   */\n      mstore\n        /* \"#utility.yul\":20529:20754   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20760:21126   */\n    tag_617:\n        /* \"#utility.yul\":20902:20905   */\n      0x00\n        /* \"#utility.yul\":20923:20990   */\n      tag_854\n        /* \"#utility.yul\":20987:20989   */\n      0x26\n        /* \"#utility.yul\":20982:20985   */\n      dup4\n        /* \"#utility.yul\":20923:20990   */\n      tag_598\n      jump\t// in\n    tag_854:\n        /* \"#utility.yul\":20916:20990   */\n      swap2\n      pop\n        /* \"#utility.yul\":20999:21092   */\n      tag_855\n        /* \"#utility.yul\":21088:21091   */\n      dup3\n        /* \"#utility.yul\":20999:21092   */\n      tag_616\n      jump\t// in\n    tag_855:\n        /* \"#utility.yul\":21117:21119   */\n      0x40\n        /* \"#utility.yul\":21112:21115   */\n      dup3\n        /* \"#utility.yul\":21108:21120   */\n      add\n        /* \"#utility.yul\":21101:21120   */\n      swap1\n      pop\n        /* \"#utility.yul\":20760:21126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21132:21551   */\n    tag_290:\n        /* \"#utility.yul\":21298:21302   */\n      0x00\n        /* \"#utility.yul\":21336:21338   */\n      0x20\n        /* \"#utility.yul\":21325:21334   */\n      dup3\n        /* \"#utility.yul\":21321:21339   */\n      add\n        /* \"#utility.yul\":21313:21339   */\n      swap1\n      pop\n        /* \"#utility.yul\":21385:21394   */\n      dup2\n        /* \"#utility.yul\":21379:21383   */\n      dup2\n        /* \"#utility.yul\":21375:21395   */\n      sub\n        /* \"#utility.yul\":21371:21372   */\n      0x00\n        /* \"#utility.yul\":21360:21369   */\n      dup4\n        /* \"#utility.yul\":21356:21373   */\n      add\n        /* \"#utility.yul\":21349:21396   */\n      mstore\n        /* \"#utility.yul\":21413:21544   */\n      tag_857\n        /* \"#utility.yul\":21539:21543   */\n      dup2\n        /* \"#utility.yul\":21413:21544   */\n      tag_617\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":21405:21544   */\n      swap1\n      pop\n        /* \"#utility.yul\":21132:21551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21557:21725   */\n    tag_618:\n        /* \"#utility.yul\":21697:21717   */\n      0x496e76616c696420706f6f6c2073746174650000000000000000000000000000\n        /* \"#utility.yul\":21693:21694   */\n      0x00\n        /* \"#utility.yul\":21685:21691   */\n      dup3\n        /* \"#utility.yul\":21681:21695   */\n      add\n        /* \"#utility.yul\":21674:21718   */\n      mstore\n        /* \"#utility.yul\":21557:21725   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21731:22097   */\n    tag_619:\n        /* \"#utility.yul\":21873:21876   */\n      0x00\n        /* \"#utility.yul\":21894:21961   */\n      tag_860\n        /* \"#utility.yul\":21958:21960   */\n      0x12\n        /* \"#utility.yul\":21953:21956   */\n      dup4\n        /* \"#utility.yul\":21894:21961   */\n      tag_598\n      jump\t// in\n    tag_860:\n        /* \"#utility.yul\":21887:21961   */\n      swap2\n      pop\n        /* \"#utility.yul\":21970:22063   */\n      tag_861\n        /* \"#utility.yul\":22059:22062   */\n      dup3\n        /* \"#utility.yul\":21970:22063   */\n      tag_618\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":22088:22090   */\n      0x20\n        /* \"#utility.yul\":22083:22086   */\n      dup3\n        /* \"#utility.yul\":22079:22091   */\n      add\n        /* \"#utility.yul\":22072:22091   */\n      swap1\n      pop\n        /* \"#utility.yul\":21731:22097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22103:22522   */\n    tag_302:\n        /* \"#utility.yul\":22269:22273   */\n      0x00\n        /* \"#utility.yul\":22307:22309   */\n      0x20\n        /* \"#utility.yul\":22296:22305   */\n      dup3\n        /* \"#utility.yul\":22292:22310   */\n      add\n        /* \"#utility.yul\":22284:22310   */\n      swap1\n      pop\n        /* \"#utility.yul\":22356:22365   */\n      dup2\n        /* \"#utility.yul\":22350:22354   */\n      dup2\n        /* \"#utility.yul\":22346:22366   */\n      sub\n        /* \"#utility.yul\":22342:22343   */\n      0x00\n        /* \"#utility.yul\":22331:22340   */\n      dup4\n        /* \"#utility.yul\":22327:22344   */\n      add\n        /* \"#utility.yul\":22320:22367   */\n      mstore\n        /* \"#utility.yul\":22384:22515   */\n      tag_863\n        /* \"#utility.yul\":22510:22514   */\n      dup2\n        /* \"#utility.yul\":22384:22515   */\n      tag_619\n      jump\t// in\n    tag_863:\n        /* \"#utility.yul\":22376:22515   */\n      swap1\n      pop\n        /* \"#utility.yul\":22103:22522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22528:22938   */\n    tag_304:\n        /* \"#utility.yul\":22568:22575   */\n      0x00\n        /* \"#utility.yul\":22591:22611   */\n      tag_865\n        /* \"#utility.yul\":22609:22610   */\n      dup3\n        /* \"#utility.yul\":22591:22611   */\n      tag_570\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":22586:22611   */\n      swap2\n      pop\n        /* \"#utility.yul\":22625:22645   */\n      tag_866\n        /* \"#utility.yul\":22643:22644   */\n      dup4\n        /* \"#utility.yul\":22625:22645   */\n      tag_570\n      jump\t// in\n    tag_866:\n        /* \"#utility.yul\":22620:22645   */\n      swap3\n      pop\n        /* \"#utility.yul\":22680:22681   */\n      dup3\n        /* \"#utility.yul\":22677:22678   */\n      dup3\n        /* \"#utility.yul\":22673:22682   */\n      mul\n        /* \"#utility.yul\":22702:22732   */\n      tag_867\n        /* \"#utility.yul\":22720:22731   */\n      dup2\n        /* \"#utility.yul\":22702:22732   */\n      tag_570\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":22691:22732   */\n      swap2\n      pop\n        /* \"#utility.yul\":22881:22882   */\n      dup3\n        /* \"#utility.yul\":22872:22879   */\n      dup3\n        /* \"#utility.yul\":22868:22883   */\n      div\n        /* \"#utility.yul\":22865:22866   */\n      dup5\n        /* \"#utility.yul\":22862:22884   */\n      eq\n        /* \"#utility.yul\":22842:22843   */\n      dup4\n        /* \"#utility.yul\":22835:22844   */\n      iszero\n        /* \"#utility.yul\":22815:22898   */\n      or\n        /* \"#utility.yul\":22792:22931   */\n      tag_868\n      jumpi\n        /* \"#utility.yul\":22911:22929   */\n      tag_869\n      tag_611\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":22792:22931   */\n    tag_868:\n        /* \"#utility.yul\":22576:22938   */\n      pop\n        /* \"#utility.yul\":22528:22938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22944:23124   */\n    tag_620:\n        /* \"#utility.yul\":22992:23069   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22989:22990   */\n      0x00\n        /* \"#utility.yul\":22982:23070   */\n      mstore\n        /* \"#utility.yul\":23089:23093   */\n      0x12\n        /* \"#utility.yul\":23086:23087   */\n      0x04\n        /* \"#utility.yul\":23079:23094   */\n      mstore\n        /* \"#utility.yul\":23113:23117   */\n      0x24\n        /* \"#utility.yul\":23110:23111   */\n      0x00\n        /* \"#utility.yul\":23103:23118   */\n      revert\n        /* \"#utility.yul\":23130:23315   */\n    tag_306:\n        /* \"#utility.yul\":23170:23171   */\n      0x00\n        /* \"#utility.yul\":23187:23207   */\n      tag_872\n        /* \"#utility.yul\":23205:23206   */\n      dup3\n        /* \"#utility.yul\":23187:23207   */\n      tag_570\n      jump\t// in\n    tag_872:\n        /* \"#utility.yul\":23182:23207   */\n      swap2\n      pop\n        /* \"#utility.yul\":23221:23241   */\n      tag_873\n        /* \"#utility.yul\":23239:23240   */\n      dup4\n        /* \"#utility.yul\":23221:23241   */\n      tag_570\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":23216:23241   */\n      swap3\n      pop\n        /* \"#utility.yul\":23260:23261   */\n      dup3\n        /* \"#utility.yul\":23250:23285   */\n      tag_874\n      jumpi\n        /* \"#utility.yul\":23265:23283   */\n      tag_875\n      tag_620\n      jump\t// in\n    tag_875:\n        /* \"#utility.yul\":23250:23285   */\n    tag_874:\n        /* \"#utility.yul\":23307:23308   */\n      dup3\n        /* \"#utility.yul\":23304:23305   */\n      dup3\n        /* \"#utility.yul\":23300:23309   */\n      div\n        /* \"#utility.yul\":23295:23309   */\n      swap1\n      pop\n        /* \"#utility.yul\":23130:23315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23321:23494   */\n    tag_621:\n        /* \"#utility.yul\":23461:23486   */\n      0x496e73756666696369656e742045544820616d6f756e74000000000000000000\n        /* \"#utility.yul\":23457:23458   */\n      0x00\n        /* \"#utility.yul\":23449:23455   */\n      dup3\n        /* \"#utility.yul\":23445:23459   */\n      add\n        /* \"#utility.yul\":23438:23487   */\n      mstore\n        /* \"#utility.yul\":23321:23494   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23500:23866   */\n    tag_622:\n        /* \"#utility.yul\":23642:23645   */\n      0x00\n        /* \"#utility.yul\":23663:23730   */\n      tag_878\n        /* \"#utility.yul\":23727:23729   */\n      0x17\n        /* \"#utility.yul\":23722:23725   */\n      dup4\n        /* \"#utility.yul\":23663:23730   */\n      tag_598\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":23656:23730   */\n      swap2\n      pop\n        /* \"#utility.yul\":23739:23832   */\n      tag_879\n        /* \"#utility.yul\":23828:23831   */\n      dup3\n        /* \"#utility.yul\":23739:23832   */\n      tag_621\n      jump\t// in\n    tag_879:\n        /* \"#utility.yul\":23857:23859   */\n      0x20\n        /* \"#utility.yul\":23852:23855   */\n      dup3\n        /* \"#utility.yul\":23848:23860   */\n      add\n        /* \"#utility.yul\":23841:23860   */\n      swap1\n      pop\n        /* \"#utility.yul\":23500:23866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23872:24291   */\n    tag_309:\n        /* \"#utility.yul\":24038:24042   */\n      0x00\n        /* \"#utility.yul\":24076:24078   */\n      0x20\n        /* \"#utility.yul\":24065:24074   */\n      dup3\n        /* \"#utility.yul\":24061:24079   */\n      add\n        /* \"#utility.yul\":24053:24079   */\n      swap1\n      pop\n        /* \"#utility.yul\":24125:24134   */\n      dup2\n        /* \"#utility.yul\":24119:24123   */\n      dup2\n        /* \"#utility.yul\":24115:24135   */\n      sub\n        /* \"#utility.yul\":24111:24112   */\n      0x00\n        /* \"#utility.yul\":24100:24109   */\n      dup4\n        /* \"#utility.yul\":24096:24113   */\n      add\n        /* \"#utility.yul\":24089:24136   */\n      mstore\n        /* \"#utility.yul\":24153:24284   */\n      tag_881\n        /* \"#utility.yul\":24279:24283   */\n      dup2\n        /* \"#utility.yul\":24153:24284   */\n      tag_622\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":24145:24284   */\n      swap1\n      pop\n        /* \"#utility.yul\":23872:24291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24297:24382   */\n    tag_623:\n        /* \"#utility.yul\":24342:24349   */\n      0x00\n        /* \"#utility.yul\":24371:24376   */\n      dup2\n        /* \"#utility.yul\":24360:24376   */\n      swap1\n      pop\n        /* \"#utility.yul\":24297:24382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24388:24489   */\n    tag_624:\n        /* \"#utility.yul\":24424:24431   */\n      0x00\n        /* \"#utility.yul\":24464:24482   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24457:24462   */\n      dup3\n        /* \"#utility.yul\":24453:24483   */\n      and\n        /* \"#utility.yul\":24442:24483   */\n      swap1\n      pop\n        /* \"#utility.yul\":24388:24489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24495:24651   */\n    tag_625:\n        /* \"#utility.yul\":24552:24561   */\n      0x00\n        /* \"#utility.yul\":24585:24645   */\n      tag_885\n        /* \"#utility.yul\":24602:24644   */\n      tag_886\n        /* \"#utility.yul\":24611:24643   */\n      tag_887\n        /* \"#utility.yul\":24637:24642   */\n      dup5\n        /* \"#utility.yul\":24611:24643   */\n      tag_623\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":24602:24644   */\n      tag_582\n      jump\t// in\n    tag_886:\n        /* \"#utility.yul\":24585:24645   */\n      tag_624\n      jump\t// in\n    tag_885:\n        /* \"#utility.yul\":24572:24645   */\n      swap1\n      pop\n        /* \"#utility.yul\":24495:24651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24657:24802   */\n    tag_626:\n        /* \"#utility.yul\":24751:24795   */\n      tag_889\n        /* \"#utility.yul\":24789:24794   */\n      dup2\n        /* \"#utility.yul\":24751:24795   */\n      tag_625\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":24746:24749   */\n      dup3\n        /* \"#utility.yul\":24739:24796   */\n      mstore\n        /* \"#utility.yul\":24657:24802   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24808:25044   */\n    tag_371:\n        /* \"#utility.yul\":24908:24912   */\n      0x00\n        /* \"#utility.yul\":24946:24948   */\n      0x20\n        /* \"#utility.yul\":24935:24944   */\n      dup3\n        /* \"#utility.yul\":24931:24949   */\n      add\n        /* \"#utility.yul\":24923:24949   */\n      swap1\n      pop\n        /* \"#utility.yul\":24959:25037   */\n      tag_891\n        /* \"#utility.yul\":25034:25035   */\n      0x00\n        /* \"#utility.yul\":25023:25032   */\n      dup4\n        /* \"#utility.yul\":25019:25036   */\n      add\n        /* \"#utility.yul\":25010:25016   */\n      dup5\n        /* \"#utility.yul\":24959:25037   */\n      tag_626\n      jump\t// in\n    tag_891:\n        /* \"#utility.yul\":24808:25044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25050:25216   */\n    tag_627:\n        /* \"#utility.yul\":25190:25208   */\n      0x4e6f74206f776e6572206f66204e465400000000000000000000000000000000\n        /* \"#utility.yul\":25186:25187   */\n      0x00\n        /* \"#utility.yul\":25178:25184   */\n      dup3\n        /* \"#utility.yul\":25174:25188   */\n      add\n        /* \"#utility.yul\":25167:25209   */\n      mstore\n        /* \"#utility.yul\":25050:25216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25222:25588   */\n    tag_628:\n        /* \"#utility.yul\":25364:25367   */\n      0x00\n        /* \"#utility.yul\":25385:25452   */\n      tag_894\n        /* \"#utility.yul\":25449:25451   */\n      0x10\n        /* \"#utility.yul\":25444:25447   */\n      dup4\n        /* \"#utility.yul\":25385:25452   */\n      tag_598\n      jump\t// in\n    tag_894:\n        /* \"#utility.yul\":25378:25452   */\n      swap2\n      pop\n        /* \"#utility.yul\":25461:25554   */\n      tag_895\n        /* \"#utility.yul\":25550:25553   */\n      dup3\n        /* \"#utility.yul\":25461:25554   */\n      tag_627\n      jump\t// in\n    tag_895:\n        /* \"#utility.yul\":25579:25581   */\n      0x20\n        /* \"#utility.yul\":25574:25577   */\n      dup3\n        /* \"#utility.yul\":25570:25582   */\n      add\n        /* \"#utility.yul\":25563:25582   */\n      swap1\n      pop\n        /* \"#utility.yul\":25222:25588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25594:26013   */\n    tag_386:\n        /* \"#utility.yul\":25760:25764   */\n      0x00\n        /* \"#utility.yul\":25798:25800   */\n      0x20\n        /* \"#utility.yul\":25787:25796   */\n      dup3\n        /* \"#utility.yul\":25783:25801   */\n      add\n        /* \"#utility.yul\":25775:25801   */\n      swap1\n      pop\n        /* \"#utility.yul\":25847:25856   */\n      dup2\n        /* \"#utility.yul\":25841:25845   */\n      dup2\n        /* \"#utility.yul\":25837:25857   */\n      sub\n        /* \"#utility.yul\":25833:25834   */\n      0x00\n        /* \"#utility.yul\":25822:25831   */\n      dup4\n        /* \"#utility.yul\":25818:25835   */\n      add\n        /* \"#utility.yul\":25811:25858   */\n      mstore\n        /* \"#utility.yul\":25875:26006   */\n      tag_897\n        /* \"#utility.yul\":26001:26005   */\n      dup2\n        /* \"#utility.yul\":25875:26006   */\n      tag_628\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":25867:26006   */\n      swap1\n      pop\n        /* \"#utility.yul\":25594:26013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26019:26189   */\n    tag_629:\n        /* \"#utility.yul\":26159:26181   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":26155:26156   */\n      0x00\n        /* \"#utility.yul\":26147:26153   */\n      dup3\n        /* \"#utility.yul\":26143:26157   */\n      add\n        /* \"#utility.yul\":26136:26182   */\n      mstore\n        /* \"#utility.yul\":26019:26189   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26195:26561   */\n    tag_630:\n        /* \"#utility.yul\":26337:26340   */\n      0x00\n        /* \"#utility.yul\":26358:26425   */\n      tag_900\n        /* \"#utility.yul\":26422:26424   */\n      0x14\n        /* \"#utility.yul\":26417:26420   */\n      dup4\n        /* \"#utility.yul\":26358:26425   */\n      tag_598\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":26351:26425   */\n      swap2\n      pop\n        /* \"#utility.yul\":26434:26527   */\n      tag_901\n        /* \"#utility.yul\":26523:26526   */\n      dup3\n        /* \"#utility.yul\":26434:26527   */\n      tag_629\n      jump\t// in\n    tag_901:\n        /* \"#utility.yul\":26552:26554   */\n      0x20\n        /* \"#utility.yul\":26547:26550   */\n      dup3\n        /* \"#utility.yul\":26543:26555   */\n      add\n        /* \"#utility.yul\":26536:26555   */\n      swap1\n      pop\n        /* \"#utility.yul\":26195:26561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26567:26986   */\n    tag_422:\n        /* \"#utility.yul\":26733:26737   */\n      0x00\n        /* \"#utility.yul\":26771:26773   */\n      0x20\n        /* \"#utility.yul\":26760:26769   */\n      dup3\n        /* \"#utility.yul\":26756:26774   */\n      add\n        /* \"#utility.yul\":26748:26774   */\n      swap1\n      pop\n        /* \"#utility.yul\":26820:26829   */\n      dup2\n        /* \"#utility.yul\":26814:26818   */\n      dup2\n        /* \"#utility.yul\":26810:26830   */\n      sub\n        /* \"#utility.yul\":26806:26807   */\n      0x00\n        /* \"#utility.yul\":26795:26804   */\n      dup4\n        /* \"#utility.yul\":26791:26808   */\n      add\n        /* \"#utility.yul\":26784:26831   */\n      mstore\n        /* \"#utility.yul\":26848:26979   */\n      tag_903\n        /* \"#utility.yul\":26974:26978   */\n      dup2\n        /* \"#utility.yul\":26848:26979   */\n      tag_630\n      jump\t// in\n    tag_903:\n        /* \"#utility.yul\":26840:26979   */\n      swap1\n      pop\n        /* \"#utility.yul\":26567:26986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26992:27214   */\n    tag_451:\n        /* \"#utility.yul\":27085:27089   */\n      0x00\n        /* \"#utility.yul\":27123:27125   */\n      0x20\n        /* \"#utility.yul\":27112:27121   */\n      dup3\n        /* \"#utility.yul\":27108:27126   */\n      add\n        /* \"#utility.yul\":27100:27126   */\n      swap1\n      pop\n        /* \"#utility.yul\":27136:27207   */\n      tag_905\n        /* \"#utility.yul\":27204:27205   */\n      0x00\n        /* \"#utility.yul\":27193:27202   */\n      dup4\n        /* \"#utility.yul\":27189:27206   */\n      add\n        /* \"#utility.yul\":27180:27186   */\n      dup5\n        /* \"#utility.yul\":27136:27207   */\n      tag_603\n      jump\t// in\n    tag_905:\n        /* \"#utility.yul\":26992:27214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27220:27363   */\n    tag_631:\n        /* \"#utility.yul\":27277:27282   */\n      0x00\n        /* \"#utility.yul\":27308:27314   */\n      dup2\n        /* \"#utility.yul\":27302:27315   */\n      mload\n        /* \"#utility.yul\":27293:27315   */\n      swap1\n      pop\n        /* \"#utility.yul\":27324:27357   */\n      tag_907\n        /* \"#utility.yul\":27351:27356   */\n      dup2\n        /* \"#utility.yul\":27324:27357   */\n      tag_580\n      jump\t// in\n    tag_907:\n        /* \"#utility.yul\":27220:27363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27369:27720   */\n    tag_473:\n        /* \"#utility.yul\":27439:27445   */\n      0x00\n        /* \"#utility.yul\":27488:27490   */\n      0x20\n        /* \"#utility.yul\":27476:27485   */\n      dup3\n        /* \"#utility.yul\":27467:27474   */\n      dup5\n        /* \"#utility.yul\":27463:27486   */\n      sub\n        /* \"#utility.yul\":27459:27491   */\n      slt\n        /* \"#utility.yul\":27456:27575   */\n      iszero\n      tag_909\n      jumpi\n        /* \"#utility.yul\":27494:27573   */\n      tag_910\n      tag_563\n      jump\t// in\n    tag_910:\n        /* \"#utility.yul\":27456:27575   */\n    tag_909:\n        /* \"#utility.yul\":27614:27615   */\n      0x00\n        /* \"#utility.yul\":27639:27703   */\n      tag_911\n        /* \"#utility.yul\":27695:27702   */\n      dup5\n        /* \"#utility.yul\":27686:27692   */\n      dup3\n        /* \"#utility.yul\":27675:27684   */\n      dup6\n        /* \"#utility.yul\":27671:27693   */\n      add\n        /* \"#utility.yul\":27639:27703   */\n      tag_631\n      jump\t// in\n    tag_911:\n        /* \"#utility.yul\":27629:27703   */\n      swap2\n      pop\n        /* \"#utility.yul\":27585:27713   */\n      pop\n        /* \"#utility.yul\":27369:27720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27726:28058   */\n    tag_510:\n        /* \"#utility.yul\":27847:27851   */\n      0x00\n        /* \"#utility.yul\":27885:27887   */\n      0x40\n        /* \"#utility.yul\":27874:27883   */\n      dup3\n        /* \"#utility.yul\":27870:27888   */\n      add\n        /* \"#utility.yul\":27862:27888   */\n      swap1\n      pop\n        /* \"#utility.yul\":27898:27969   */\n      tag_913\n        /* \"#utility.yul\":27966:27967   */\n      0x00\n        /* \"#utility.yul\":27955:27964   */\n      dup4\n        /* \"#utility.yul\":27951:27968   */\n      add\n        /* \"#utility.yul\":27942:27948   */\n      dup6\n        /* \"#utility.yul\":27898:27969   */\n      tag_603\n      jump\t// in\n    tag_913:\n        /* \"#utility.yul\":27979:28051   */\n      tag_914\n        /* \"#utility.yul\":28047:28049   */\n      0x20\n        /* \"#utility.yul\":28036:28045   */\n      dup4\n        /* \"#utility.yul\":28032:28050   */\n      add\n        /* \"#utility.yul\":28023:28029   */\n      dup5\n        /* \"#utility.yul\":27979:28051   */\n      tag_579\n      jump\t// in\n    tag_914:\n        /* \"#utility.yul\":27726:28058   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28064:28162   */\n    tag_632:\n        /* \"#utility.yul\":28115:28121   */\n      0x00\n        /* \"#utility.yul\":28149:28154   */\n      dup2\n        /* \"#utility.yul\":28143:28155   */\n      mload\n        /* \"#utility.yul\":28133:28155   */\n      swap1\n      pop\n        /* \"#utility.yul\":28064:28162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28168:28315   */\n    tag_633:\n        /* \"#utility.yul\":28269:28280   */\n      0x00\n        /* \"#utility.yul\":28306:28309   */\n      dup2\n        /* \"#utility.yul\":28291:28309   */\n      swap1\n      pop\n        /* \"#utility.yul\":28168:28315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28321:28707   */\n    tag_634:\n        /* \"#utility.yul\":28425:28428   */\n      0x00\n        /* \"#utility.yul\":28453:28491   */\n      tag_918\n        /* \"#utility.yul\":28485:28490   */\n      dup3\n        /* \"#utility.yul\":28453:28491   */\n      tag_632\n      jump\t// in\n    tag_918:\n        /* \"#utility.yul\":28507:28595   */\n      tag_919\n        /* \"#utility.yul\":28588:28594   */\n      dup2\n        /* \"#utility.yul\":28583:28586   */\n      dup6\n        /* \"#utility.yul\":28507:28595   */\n      tag_633\n      jump\t// in\n    tag_919:\n        /* \"#utility.yul\":28500:28595   */\n      swap4\n      pop\n        /* \"#utility.yul\":28604:28669   */\n      tag_920\n        /* \"#utility.yul\":28662:28668   */\n      dup2\n        /* \"#utility.yul\":28657:28660   */\n      dup6\n        /* \"#utility.yul\":28650:28654   */\n      0x20\n        /* \"#utility.yul\":28643:28648   */\n      dup7\n        /* \"#utility.yul\":28639:28655   */\n      add\n        /* \"#utility.yul\":28604:28669   */\n      tag_599\n      jump\t// in\n    tag_920:\n        /* \"#utility.yul\":28694:28700   */\n      dup1\n        /* \"#utility.yul\":28689:28692   */\n      dup5\n        /* \"#utility.yul\":28685:28701   */\n      add\n        /* \"#utility.yul\":28678:28701   */\n      swap2\n      pop\n        /* \"#utility.yul\":28429:28707   */\n      pop\n        /* \"#utility.yul\":28321:28707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28713:28984   */\n    tag_541:\n        /* \"#utility.yul\":28843:28846   */\n      0x00\n        /* \"#utility.yul\":28865:28958   */\n      tag_922\n        /* \"#utility.yul\":28954:28957   */\n      dup3\n        /* \"#utility.yul\":28945:28951   */\n      dup5\n        /* \"#utility.yul\":28865:28958   */\n      tag_634\n      jump\t// in\n    tag_922:\n        /* \"#utility.yul\":28858:28958   */\n      swap2\n      pop\n        /* \"#utility.yul\":28975:28978   */\n      dup2\n        /* \"#utility.yul\":28968:28978   */\n      swap1\n      pop\n        /* \"#utility.yul\":28713:28984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205bf6c2efaa4270f923e1d8981c52665ef8b357d3f4539e2838981c619ad515a964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2156": {
									"entryPoint": null,
									"id": 2156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_584": {
									"entryPoint": 86,
									"id": 584,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_615": {
									"entryPoint": 340,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:456:17",
										"nodeType": "YulBlock",
										"src": "0:456:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:17",
													"nodeType": "YulBlock",
													"src": "51:57:17",
													"statements": [
														{
															"nativeSrc": "61:41:17",
															"nodeType": "YulAssignment",
															"src": "61:41:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:17",
																		"nodeType": "YulLiteral",
																		"src": "83:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:17"
																},
																"nativeSrc": "72:30:17",
																"nodeType": "YulFunctionCall",
																"src": "72:30:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:17",
														"nodeType": "YulTypedName",
														"src": "33:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:17",
														"nodeType": "YulTypedName",
														"src": "43:7:17",
														"type": ""
													}
												],
												"src": "7:101:17"
											},
											{
												"body": {
													"nativeSrc": "177:52:17",
													"nodeType": "YulBlock",
													"src": "177:52:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:17",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:17"
																		},
																		"nativeSrc": "199:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nativeSrc": "187:36:17",
																"nodeType": "YulFunctionCall",
																"src": "187:36:17"
															},
															"nativeSrc": "187:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:17"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:17",
														"nodeType": "YulTypedName",
														"src": "165:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:17",
														"nodeType": "YulTypedName",
														"src": "172:3:17",
														"type": ""
													}
												],
												"src": "114:115:17"
											},
											{
												"body": {
													"nativeSrc": "331:122:17",
													"nodeType": "YulBlock",
													"src": "331:122:17",
													"statements": [
														{
															"nativeSrc": "341:26:17",
															"nodeType": "YulAssignment",
															"src": "341:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:17",
																		"nodeType": "YulLiteral",
																		"src": "364:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:17"
																},
																"nativeSrc": "349:18:17",
																"nodeType": "YulFunctionCall",
																"src": "349:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:17",
																				"nodeType": "YulLiteral",
																				"src": "443:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:17"
																		},
																		"nativeSrc": "428:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:17",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:17"
																},
																"nativeSrc": "377:69:17",
																"nodeType": "YulFunctionCall",
																"src": "377:69:17"
															},
															"nativeSrc": "377:69:17",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:17",
														"nodeType": "YulTypedName",
														"src": "303:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:17",
														"nodeType": "YulTypedName",
														"src": "315:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:17",
														"nodeType": "YulTypedName",
														"src": "326:4:17",
														"type": ""
													}
												],
												"src": "235:218:17"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015610042575f80fd5b5061005161005660201b60201c565b6101b6565b5f61006561015460201b60201c565b9050805f0160089054906101000a900460ff16156100af576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101515767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051610148919061019d565b60405180910390a15b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f67ffffffffffffffff82169050919050565b6101978161017b565b82525050565b5f6020820190506101b05f83018461018e565b92915050565b608051613aec6101dc5f395f8181612470015281816124c501526126a20152613aec5ff3fe6080604052600436106101d7575f3560e01c80635668870011610101578063cc2a9a5b11610094578063e15cc8da11610063578063e15cc8da1461064a578063e63ab1e914610672578063f14210a61461069c578063f72c0d8b146106c4576101d7565b8063cc2a9a5b146105a8578063d547741f146105d0578063d9a37ad2146105f8578063da06968314610620576101d7565b8063a201ccf6116100d0578063a201ccf6146104ef578063a217fddf1461052c578063ad3cb1cc14610556578063c708831314610580576101d7565b806356688700146104435780635c975abb146104735780638456cb591461049d57806391d14854146104b3576101d7565b80632f2ff15d1161017957806349f0346e1161014857806349f0346e146103c55780634f1ef286146103e157806351422e97146103fd57806352d1902d14610419576101d7565b80632f2ff15d1461033557806334aab0641461035d57806336568abe146103875780633f4ba83a146103af576101d7565b80630b0fd47e116101b55780630b0fd47e14610267578063242f0551146102a5578063248a9ca3146102cf5780632d11c58a1461030b576101d7565b806301ffc9a7146101db578063023245d71461021757806306b091f91461023f575b5f80fd5b3480156101e6575f80fd5b5061020160048036038101906101fc9190612cb3565b6106ee565b60405161020e9190612cf8565b60405180910390f35b348015610222575f80fd5b5061023d60048036038101906102389190612d44565b610767565b005b34801561024a575f80fd5b5061026560048036038101906102609190612dc9565b610802565b005b348015610272575f80fd5b5061028d60048036038101906102889190612e07565b61088f565b60405161029c93929190612e41565b60405180910390f35b3480156102b0575f80fd5b506102b96108b5565b6040516102c69190612e8e565b60405180910390f35b3480156102da575f80fd5b506102f560048036038101906102f09190612ed1565b6108d9565b6040516103029190612e8e565b60405180910390f35b348015610316575f80fd5b5061031f610903565b60405161032c9190612efc565b60405180910390f35b348015610340575f80fd5b5061035b60048036038101906103569190612f15565b610908565b005b348015610368575f80fd5b5061037161092a565b60405161037e9190612fae565b60405180910390f35b348015610392575f80fd5b506103ad60048036038101906103a89190612f15565b61094d565b005b3480156103ba575f80fd5b506103c36109c8565b005b6103df60048036038101906103da9190612fc7565b6109fd565b005b6103fb60048036038101906103f69190613141565b610d05565b005b61041760048036038101906104129190612dc9565b610d24565b005b348015610424575f80fd5b5061042d610f76565b60405161043a9190612e8e565b60405180910390f35b61045d60048036038101906104589190612dc9565b610fa7565b60405161046a9190612efc565b60405180910390f35b34801561047e575f80fd5b50610487611307565b6040516104949190612cf8565b60405180910390f35b3480156104a8575f80fd5b506104b1611329565b005b3480156104be575f80fd5b506104d960048036038101906104d49190612f15565b61135e565b6040516104e69190612cf8565b60405180910390f35b3480156104fa575f80fd5b5061051560048036038101906105109190612dc9565b6113cf565b60405161052392919061319b565b60405180910390f35b348015610537575f80fd5b506105406116af565b60405161054d9190612e8e565b60405180910390f35b348015610561575f80fd5b5061056a6116b5565b6040516105779190613222565b60405180910390f35b34801561058b575f80fd5b506105a660048036038101906105a19190613242565b6116ee565b005b3480156105b3575f80fd5b506105ce60048036038101906105c99190613292565b6117a7565b005b3480156105db575f80fd5b506105f660048036038101906105f19190612f15565b611a49565b005b348015610603575f80fd5b5061061e60048036038101906106199190612fc7565b611a6b565b005b34801561062b575f80fd5b50610634611d26565b604051610641919061333b565b60405180910390f35b348015610655575f80fd5b50610670600480360381019061066b9190613242565b611d4b565b005b34801561067d575f80fd5b50610686611fe4565b6040516106939190612e8e565b60405180910390f35b3480156106a7575f80fd5b506106c260048036038101906106bd9190612d44565b612008565b005b3480156106cf575f80fd5b506106d861209f565b6040516106e59190612e8e565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610760575061075f826120c3565b5b9050919050565b5f801b6107738161212c565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033856040518463ffffffff1660e01b81526004016107d193929190613363565b5f604051808303815f87803b1580156107e8575f80fd5b505af11580156107fa573d5f803e3d5ffd5b505050505050565b5f801b61080e8161212c565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610849929190613398565b6020604051808303815f875af1158015610865573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061088991906133e9565b50505050565b6002602052805f5260405f205f91509050805f0154908060010154908060020154905083565b7f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f81565b5f806108e3612140565b9050805f015f8481526020019081526020015f2060010154915050919050565b600381565b610911826108d9565b61091a8161212c565b6109248383612167565b50505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61095561225f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109b9576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109c38282612266565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109f28161212c565b6109fa61235e565b50565b610a056123cc565b5f3411610a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3e90613484565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610ab89190612efc565b602060405180830381865afa158015610ad3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af791906134b6565b73ffffffffffffffffffffffffffffffffffffffff1614610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b449061352b565b60405180910390fd5b5f610b65343447610b5e9190613576565b600161240d565b905081811015610baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba1906135f3565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610bed573d5f803e3d5ffd5b5060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033866040518463ffffffff1660e01b8152600401610c4c93929190613363565b5f604051808303815f87803b158015610c63575f80fd5b505af1158015610c75573d5f803e3d5ffd5b505050508260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e6584604051610cf89190612efc565b60405180910390a4505050565b610d0d61246e565b610d1682612554565b610d208282612582565b5050565b610d2c6123cc565b5f3411610d6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6590613484565b60405180910390fd5b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8160010154118015610dc357505f815f0154115b610e02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df99061365b565b60405180910390fd5b5f610e15348360010154845f015461240d565b905082811015610e5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e51906135f3565b60405180910390fd5b34826001015f828254610e6d9190613679565b9250508190555080825f015f828254610e869190613576565b925050819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ec8929190613398565b6020604051808303815f875af1158015610ee4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f0891906133e9565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d668334604051610f6892919061319b565b60405180910390a350505050565b5f610f7f6126a0565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f610fb06123cc565b5f8211610ff2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe99061371c565b60405180910390fd5b5f3411611034576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102b90613484565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161107193929190613363565b6020604051808303815f875af115801561108d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110b191906133e9565b505f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f808260020154036111175783825f0181905550348260010181905550839050611224565b5f826001015411801561112c57505f825f0154115b61116b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116290613784565b60405180910390fd5b5f825f015485846001015461118091906137a2565b61118a9190613810565b9050803410156111cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c69061388a565b60405180910390fd5b84835f015f8282546111e19190613679565b9250508190555034836001015f8282546111fb9190613679565b92505081905550825f015485846002015461121691906137a2565b6112209190613810565b9150505b80826002015f8282546112379190613679565b9250508190555080826003015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461128c9190613679565b925050819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f78634856040516112f493929190612e41565b60405180910390a3809250505092915050565b5f80611311612727565b9050805f015f9054906101000a900460ff1691505090565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6113538161212c565b61135b61274e565b50565b5f80611368612140565b9050805f015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1691505092915050565b5f806113d96123cc565b5f60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905083816003015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561149b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114929061365b565b60405180910390fd5b806002015484825f01546114af91906137a2565b6114b99190613810565b925080600201548482600101546114d091906137a2565b6114da9190613810565b915082815f015f8282546114ee9190613576565b9250508190555081816001015f8282546115089190613576565b9250508190555083816002015f8282546115229190613576565b9250508190555083816003015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546115779190613576565b925050819055508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016115b9929190613398565b6020604051808303815f875af11580156115d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115f991906133e9565b503373ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f1935050505015801561163d573d5f803e3d5ffd5b508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbc7d19d505c7ec4db83f3b51f19fb98c4c8a99922e7839d1ee608dfbee29501b85858860405161169f93929190612e41565b60405180910390a3509250929050565b5f801b81565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b7f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f6117188161212c565b8260025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055508160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018190555050505050565b5f6117b06127bd565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156117f85750825b90505f60018367ffffffffffffffff1614801561182b57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611839575080155b15611870576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156118bd576001855f0160086101000a81548160ff0219169083151502179055505b6118c56127e4565b6118cd6127f6565b6118d5612800565b6118e15f801b8c612167565b5061190c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b612167565b506119377f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38a612167565b506119627f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f89612167565b50865f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315611a3c575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051611a3391906138f4565b60405180910390a15b5050505050505050505050565b611a52826108d9565b611a5b8161212c565b611a658383612266565b50505050565b611a736123cc565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401611ae49190612efc565b602060405180830381865afa158015611aff573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b2391906134b6565b73ffffffffffffffffffffffffffffffffffffffff1614611b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7090613957565b60405180910390fd5b5f611b866001804761240d565b905081811015611bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc2906135f3565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330866040518463ffffffff1660e01b8152600401611c2993929190613363565b5f604051808303815f87803b158015611c40575f80fd5b505af1158015611c52573d5f803e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611c99573d5f803e3d5ffd5b508260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e6584604051611d199190612efc565b60405180910390a4505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611d536123cc565b5f8211611d95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8c9061371c565b60405180910390fd5b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8160010154118015611dea57505f815f0154115b611e29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e209061365b565b60405180910390fd5b5f611e3c84835f0154846001015461240d565b905082811015611e81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e78906135f3565b60405180910390fd5b83825f015f828254611e939190613679565b9250508190555080826001015f828254611ead9190613576565b925050819055508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401611ef193929190613363565b6020604051808303815f875af1158015611f0d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f3191906133e9565b503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611f75573d5f803e3d5ffd5b508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d668684604051611fd592919061319b565b60405180910390a35050505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f801b6120148161212c565b81471015612057576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204e906139bf565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f1935050505015801561209a573d5f803e3d5ffd5b505050565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61213d8161213861225f565b61280a565b50565b5f7f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b5f80612171612140565b905061217d848461135e565b612254576001815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506121f061225f565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050612259565b5f9150505b92915050565b5f33905090565b5f80612270612140565b905061227c848461135e565b15612353575f815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506122ef61225f565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001915050612358565b5f9150505b92915050565b61236661285b565b5f61236f612727565b90505f815f015f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6123b461225f565b6040516123c191906139dd565b60405180910390a150565b6123d4611307565b1561240b576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f8060036103e861241e9190613576565b8561242991906137a2565b90505f838261243891906137a2565b90505f826103e88761244a91906137a2565b6124549190613679565b905080826124629190613810565b93505050509392505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061251b57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661250261289b565b73ffffffffffffffffffffffffffffffffffffffff1614155b15612552576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e361257e8161212c565b5050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156125ea57506040513d601f19601f820116820180604052508101906125e79190613a0a565b60015b61262b57816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161262291906139dd565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461269157806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016126889190612e8e565b60405180910390fd5b61269b83836128ee565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614612725576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b6127566123cc565b5f61275f612727565b90506001815f015f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586127a561225f565b6040516127b291906139dd565b60405180910390a150565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6127ec612960565b6127f46129a0565b565b6127fe612960565b565b612808612960565b565b612814828261135e565b6128575780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161284e929190613a35565b60405180910390fd5b5050565b612863611307565b612899576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6128c77f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6129d0565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6128f7826129d9565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156129535761294d8282612aa2565b5061295c565b61295b612b22565b5b5050565b612968612b5e565b61299e576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6129a8612960565b5f6129b1612727565b90505f815f015f6101000a81548160ff02191690831515021790555050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b03612a3457806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612a2b91906139dd565b60405180910390fd5b80612a607f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6129d0565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff1684604051612acb9190613aa0565b5f60405180830381855af49150503d805f8114612b03576040519150601f19603f3d011682016040523d82523d5f602084013e612b08565b606091505b5091509150612b18858383612b7c565b9250505092915050565b5f341115612b5c576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f612b676127bd565b5f0160089054906101000a900460ff16905090565b606082612b9157612b8c82612c09565b612c01565b5f8251148015612bb757505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15612bf957836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401612bf091906139dd565b60405180910390fd5b819050612c02565b5b9392505050565b5f81511115612c1b5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612c9281612c5e565b8114612c9c575f80fd5b50565b5f81359050612cad81612c89565b92915050565b5f60208284031215612cc857612cc7612c56565b5b5f612cd584828501612c9f565b91505092915050565b5f8115159050919050565b612cf281612cde565b82525050565b5f602082019050612d0b5f830184612ce9565b92915050565b5f819050919050565b612d2381612d11565b8114612d2d575f80fd5b50565b5f81359050612d3e81612d1a565b92915050565b5f60208284031215612d5957612d58612c56565b5b5f612d6684828501612d30565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612d9882612d6f565b9050919050565b612da881612d8e565b8114612db2575f80fd5b50565b5f81359050612dc381612d9f565b92915050565b5f8060408385031215612ddf57612dde612c56565b5b5f612dec85828601612db5565b9250506020612dfd85828601612d30565b9150509250929050565b5f60208284031215612e1c57612e1b612c56565b5b5f612e2984828501612db5565b91505092915050565b612e3b81612d11565b82525050565b5f606082019050612e545f830186612e32565b612e616020830185612e32565b612e6e6040830184612e32565b949350505050565b5f819050919050565b612e8881612e76565b82525050565b5f602082019050612ea15f830184612e7f565b92915050565b612eb081612e76565b8114612eba575f80fd5b50565b5f81359050612ecb81612ea7565b92915050565b5f60208284031215612ee657612ee5612c56565b5b5f612ef384828501612ebd565b91505092915050565b5f602082019050612f0f5f830184612e32565b92915050565b5f8060408385031215612f2b57612f2a612c56565b5b5f612f3885828601612ebd565b9250506020612f4985828601612db5565b9150509250929050565b5f819050919050565b5f612f76612f71612f6c84612d6f565b612f53565b612d6f565b9050919050565b5f612f8782612f5c565b9050919050565b5f612f9882612f7d565b9050919050565b612fa881612f8e565b82525050565b5f602082019050612fc15f830184612f9f565b92915050565b5f8060408385031215612fdd57612fdc612c56565b5b5f612fea85828601612d30565b9250506020612ffb85828601612d30565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6130538261300d565b810181811067ffffffffffffffff821117156130725761307161301d565b5b80604052505050565b5f613084612c4d565b9050613090828261304a565b919050565b5f67ffffffffffffffff8211156130af576130ae61301d565b5b6130b88261300d565b9050602081019050919050565b828183375f83830152505050565b5f6130e56130e084613095565b61307b565b90508281526020810184848401111561310157613100613009565b5b61310c8482856130c5565b509392505050565b5f82601f83011261312857613127613005565b5b81356131388482602086016130d3565b91505092915050565b5f806040838503121561315757613156612c56565b5b5f61316485828601612db5565b925050602083013567ffffffffffffffff81111561318557613184612c5a565b5b61319185828601613114565b9150509250929050565b5f6040820190506131ae5f830185612e32565b6131bb6020830184612e32565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6131f4826131c2565b6131fe81856131cc565b935061320e8185602086016131dc565b6132178161300d565b840191505092915050565b5f6020820190508181035f83015261323a81846131ea565b905092915050565b5f805f6060848603121561325957613258612c56565b5b5f61326686828701612db5565b935050602061327786828701612d30565b925050604061328886828701612d30565b9150509250925092565b5f805f805f8060c087890312156132ac576132ab612c56565b5b5f6132b989828a01612db5565b96505060206132ca89828a01612db5565b95505060406132db89828a01612db5565b94505060606132ec89828a01612db5565b93505060806132fd89828a01612db5565b92505060a061330e89828a01612db5565b9150509295509295509295565b5f61332582612f7d565b9050919050565b6133358161331b565b82525050565b5f60208201905061334e5f83018461332c565b92915050565b61335d81612d8e565b82525050565b5f6060820190506133765f830186613354565b6133836020830185613354565b6133906040830184612e32565b949350505050565b5f6040820190506133ab5f830185613354565b6133b86020830184612e32565b9392505050565b6133c881612cde565b81146133d2575f80fd5b50565b5f815190506133e3816133bf565b92915050565b5f602082840312156133fe576133fd612c56565b5b5f61340b848285016133d5565b91505092915050565b7f45544820616d6f756e74206d7573742062652067726561746572207468616e205f8201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b5f61346e6024836131cc565b915061347982613414565b604082019050919050565b5f6020820190508181035f83015261349b81613462565b9050919050565b5f815190506134b081612d9f565b92915050565b5f602082840312156134cb576134ca612c56565b5b5f6134d8848285016134a2565b91505092915050565b7f4e4654206e6f74206f776e656420627920636f6e7472616374000000000000005f82015250565b5f6135156019836131cc565b9150613520826134e1565b602082019050919050565b5f6020820190508181035f83015261354281613509565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61358082612d11565b915061358b83612d11565b92508282039050818111156135a3576135a2613549565b5b92915050565b7f536c69707061676520746f6c6572616e636520657863656564656400000000005f82015250565b5f6135dd601b836131cc565b91506135e8826135a9565b602082019050919050565b5f6020820190508181035f83015261360a816135d1565b9050919050565b7f496e73756666696369656e74206c6971756964697479000000000000000000005f82015250565b5f6136456016836131cc565b915061365082613611565b602082019050919050565b5f6020820190508181035f83015261367281613639565b9050919050565b5f61368382612d11565b915061368e83612d11565b92508282019050808211156136a6576136a5613549565b5b92915050565b7f546f6b656e20616d6f756e74206d7573742062652067726561746572207468615f8201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b5f6137066026836131cc565b9150613711826136ac565b604082019050919050565b5f6020820190508181035f830152613733816136fa565b9050919050565b7f496e76616c696420706f6f6c20737461746500000000000000000000000000005f82015250565b5f61376e6012836131cc565b91506137798261373a565b602082019050919050565b5f6020820190508181035f83015261379b81613762565b9050919050565b5f6137ac82612d11565b91506137b783612d11565b92508282026137c581612d11565b915082820484148315176137dc576137db613549565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61381a82612d11565b915061382583612d11565b925082613835576138346137e3565b5b828204905092915050565b7f496e73756666696369656e742045544820616d6f756e740000000000000000005f82015250565b5f6138746017836131cc565b915061387f82613840565b602082019050919050565b5f6020820190508181035f8301526138a181613868565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f6138de6138d96138d4846138a8565b612f53565b6138b1565b9050919050565b6138ee816138c4565b82525050565b5f6020820190506139075f8301846138e5565b92915050565b7f4e6f74206f776e6572206f66204e4654000000000000000000000000000000005f82015250565b5f6139416010836131cc565b915061394c8261390d565b602082019050919050565b5f6020820190508181035f83015261396e81613935565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6139a96014836131cc565b91506139b482613975565b602082019050919050565b5f6020820190508181035f8301526139d68161399d565b9050919050565b5f6020820190506139f05f830184613354565b92915050565b5f81519050613a0481612ea7565b92915050565b5f60208284031215613a1f57613a1e612c56565b5b5f613a2c848285016139f6565b91505092915050565b5f604082019050613a485f830185613354565b613a556020830184612e7f565b9392505050565b5f81519050919050565b5f81905092915050565b5f613a7a82613a5c565b613a848185613a66565b9350613a948185602086016131dc565b80840191505092915050565b5f613aab8284613a70565b91508190509291505056fea26469706673582212205bf6c2efaa4270f923e1d8981c52665ef8b357d3f4539e2838981c619ad515a964736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51 PUSH2 0x56 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST PUSH0 PUSH2 0x65 PUSH2 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x151 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x17B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3AEC PUSH2 0x1DC PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x2470 ADD MSTORE DUP2 DUP2 PUSH2 0x24C5 ADD MSTORE PUSH2 0x26A2 ADD MSTORE PUSH2 0x3AEC PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56688700 GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xCC2A9A5B GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xE15CC8DA GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE15CC8DA EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x6C4 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xD9A37AD2 EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0xDA069683 EQ PUSH2 0x620 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0xA201CCF6 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xA201CCF6 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xC7088313 EQ PUSH2 0x580 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x56688700 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4B3 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x179 JUMPI DUP1 PUSH4 0x49F0346E GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x49F0346E EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x51422E97 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x419 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x34AAB064 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3AF JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0xB0FD47E GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xB0FD47E EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x242F0551 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x2D11C58A EQ PUSH2 0x30B JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x23245D7 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6B091F9 EQ PUSH2 0x23F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x2CB3 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x2D44 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2E07 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x2F15 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x2FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x2F15 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x9C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x2FC7 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH2 0xD24 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x487 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH2 0x1329 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2F15 JUMP JUMPDEST PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x523 SWAP3 SWAP2 SWAP1 PUSH2 0x319B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x56A PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x3242 JUMP JUMPDEST PUSH2 0x16EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x3292 JUMP JUMPDEST PUSH2 0x17A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2F15 JUMP JUMPDEST PUSH2 0x1A49 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x603 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x2FC7 JUMP JUMPDEST PUSH2 0x1A6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x634 PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x333B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x670 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x3242 JUMP JUMPDEST PUSH2 0x1D4B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x686 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x2D44 JUMP JUMPDEST PUSH2 0x2008 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D8 PUSH2 0x209F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E5 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x760 JUMPI POP PUSH2 0x75F DUP3 PUSH2 0x20C3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x773 DUP2 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3363 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x80E DUP2 PUSH2 0x212C JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x849 SWAP3 SWAP2 SWAP1 PUSH2 0x3398 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x33E9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8E3 PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x911 DUP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x91A DUP2 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x924 DUP4 DUP4 PUSH2 0x2167 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x955 PUSH2 0x225F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C3 DUP3 DUP3 PUSH2 0x2266 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x9F2 DUP2 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x9FA PUSH2 0x235E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA05 PUSH2 0x23CC JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP1 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF7 SWAP2 SWAP1 PUSH2 0x34B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB44 SWAP1 PUSH2 0x352B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB65 CALLVALUE CALLVALUE SELFBALANCE PUSH2 0xB5E SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x240D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA1 SWAP1 PUSH2 0x35F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3363 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xD0D PUSH2 0x246E JUMP JUMPDEST PUSH2 0xD16 DUP3 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xD20 DUP3 DUP3 PUSH2 0x2582 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD2C PUSH2 0x23CC JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD65 SWAP1 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0xDC3 JUMPI POP PUSH0 DUP2 PUSH0 ADD SLOAD GT JUMPDEST PUSH2 0xE02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF9 SWAP1 PUSH2 0x365B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE15 CALLVALUE DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x240D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE51 SWAP1 PUSH2 0x35F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC8 SWAP3 SWAP2 SWAP1 PUSH2 0x3398 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF08 SWAP2 SWAP1 PUSH2 0x33E9 JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66 DUP4 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xF68 SWAP3 SWAP2 SWAP1 PUSH2 0x319B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7F PUSH2 0x26A0 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xFB0 PUSH2 0x23CC JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE9 SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102B SWAP1 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1071 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3363 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x108D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x33E9 JUMP JUMPDEST POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP1 DUP3 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x1117 JUMPI DUP4 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP CALLVALUE DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 SWAP1 POP PUSH2 0x1224 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x112C JUMPI POP PUSH0 DUP3 PUSH0 ADD SLOAD GT JUMPDEST PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1162 SWAP1 PUSH2 0x3784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH0 ADD SLOAD DUP6 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x11CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C6 SWAP1 PUSH2 0x388A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP4 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11E1 SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE DUP4 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11FB SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH0 ADD SLOAD DUP6 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH2 0x1220 SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1237 SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x3 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A1A2A6176E9646D9E3157F7C2AB3C499F18337C0B0828CFB28E0A61DE4A11F7 DUP7 CALLVALUE DUP6 PUSH1 0x40 MLOAD PUSH2 0x12F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1311 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1353 DUP2 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x135B PUSH2 0x274E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1368 PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13D9 PUSH2 0x23CC JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x3 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x149B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1492 SWAP1 PUSH2 0x365B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP5 DUP3 PUSH0 ADD SLOAD PUSH2 0x14AF SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH2 0x14B9 SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x2 ADD SLOAD DUP5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH2 0x14DA SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP2 POP DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14EE SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1508 SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1522 SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1577 SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B9 SWAP3 SWAP2 SWAP1 PUSH2 0x3398 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15F9 SWAP2 SWAP1 PUSH2 0x33E9 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x163D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7D19D505C7EC4DB83F3B51F19FB98C4C8A99922E7839D1EE608DFBEE29501B DUP6 DUP6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x169F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F PUSH2 0x1718 DUP2 PUSH2 0x212C JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B0 PUSH2 0x27BD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x17F8 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x182B JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1839 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x18BD JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x18C5 PUSH2 0x27E4 JUMP JUMPDEST PUSH2 0x18CD PUSH2 0x27F6 JUMP JUMPDEST PUSH2 0x18D5 PUSH2 0x2800 JUMP JUMPDEST PUSH2 0x18E1 PUSH0 DUP1 SHL DUP13 PUSH2 0x2167 JUMP JUMPDEST POP PUSH2 0x190C PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP12 PUSH2 0x2167 JUMP JUMPDEST POP PUSH2 0x1937 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP11 PUSH2 0x2167 JUMP JUMPDEST POP PUSH2 0x1962 PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F DUP10 PUSH2 0x2167 JUMP JUMPDEST POP DUP7 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1A3C JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x38F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A52 DUP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x1A5B DUP2 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x1A65 DUP4 DUP4 PUSH2 0x2266 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1A73 PUSH2 0x23CC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE4 SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AFF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B23 SWAP2 SWAP1 PUSH2 0x34B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B70 SWAP1 PUSH2 0x3957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1B86 PUSH1 0x1 DUP1 SELFBALANCE PUSH2 0x240D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC2 SWAP1 PUSH2 0x35F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3363 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C40 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C52 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C99 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D19 SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D53 PUSH2 0x23CC JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x1D95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8C SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x1DEA JUMPI POP PUSH0 DUP2 PUSH0 ADD SLOAD GT JUMPDEST PUSH2 0x1E29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E20 SWAP1 PUSH2 0x365B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1E3C DUP5 DUP4 PUSH0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x240D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1E81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E78 SWAP1 PUSH2 0x35F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E93 SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1EAD SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3363 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F0D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F31 SWAP2 SWAP1 PUSH2 0x33E9 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1F75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1FD5 SWAP3 SWAP2 SWAP1 PUSH2 0x319B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x2014 DUP2 PUSH2 0x212C JUMP JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x2057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204E SWAP1 PUSH2 0x39BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x209A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213D DUP2 PUSH2 0x2138 PUSH2 0x225F JUMP JUMPDEST PUSH2 0x280A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2171 PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP PUSH2 0x217D DUP5 DUP5 PUSH2 0x135E JUMP JUMPDEST PUSH2 0x2254 JUMPI PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x21F0 PUSH2 0x225F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x2259 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2270 PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP PUSH2 0x227C DUP5 DUP5 PUSH2 0x135E JUMP JUMPDEST ISZERO PUSH2 0x2353 JUMPI PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x22EF PUSH2 0x225F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x2358 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2366 PUSH2 0x285B JUMP JUMPDEST PUSH0 PUSH2 0x236F PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x23B4 PUSH2 0x225F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C1 SWAP2 SWAP1 PUSH2 0x39DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x23D4 PUSH2 0x1307 JUMP JUMPDEST ISZERO PUSH2 0x240B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH2 0x3E8 PUSH2 0x241E SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST DUP6 PUSH2 0x2429 SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x2438 SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 DUP8 PUSH2 0x244A SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH2 0x2454 SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x2462 SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x251B JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2502 PUSH2 0x289B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2552 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x257E DUP2 PUSH2 0x212C JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x25EA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25E7 SWAP2 SWAP1 PUSH2 0x3A0A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x262B JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2622 SWAP2 SWAP1 PUSH2 0x39DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x2691 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2688 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x269B DUP4 DUP4 PUSH2 0x28EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2725 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2756 PUSH2 0x23CC JUMP JUMPDEST PUSH0 PUSH2 0x275F PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x27A5 PUSH2 0x225F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B2 SWAP2 SWAP1 PUSH2 0x39DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x27EC PUSH2 0x2960 JUMP JUMPDEST PUSH2 0x27F4 PUSH2 0x29A0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x27FE PUSH2 0x2960 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2808 PUSH2 0x2960 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2814 DUP3 DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH2 0x2857 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284E SWAP3 SWAP2 SWAP1 PUSH2 0x3A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2863 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x2899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x28C7 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x29D0 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x28F7 DUP3 PUSH2 0x29D9 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2953 JUMPI PUSH2 0x294D DUP3 DUP3 PUSH2 0x2AA2 JUMP JUMPDEST POP PUSH2 0x295C JUMP JUMPDEST PUSH2 0x295B PUSH2 0x2B22 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2968 PUSH2 0x2B5E JUMP JUMPDEST PUSH2 0x299E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x29A8 PUSH2 0x2960 JUMP JUMPDEST PUSH0 PUSH2 0x29B1 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2A34 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A2B SWAP2 SWAP1 PUSH2 0x39DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2A60 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x29D0 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2ACB SWAP2 SWAP1 PUSH2 0x3AA0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2B03 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B08 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2B18 DUP6 DUP4 DUP4 PUSH2 0x2B7C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x2B5C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2B67 PUSH2 0x27BD JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2B91 JUMPI PUSH2 0x2B8C DUP3 PUSH2 0x2C09 JUMP JUMPDEST PUSH2 0x2C01 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2BB7 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2BF9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BF0 SWAP2 SWAP1 PUSH2 0x39DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2C02 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2C1B JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C92 DUP2 PUSH2 0x2C5E JUMP JUMPDEST DUP2 EQ PUSH2 0x2C9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CAD DUP2 PUSH2 0x2C89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC8 JUMPI PUSH2 0x2CC7 PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2CD5 DUP5 DUP3 DUP6 ADD PUSH2 0x2C9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF2 DUP2 PUSH2 0x2CDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D0B PUSH0 DUP4 ADD DUP5 PUSH2 0x2CE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D23 DUP2 PUSH2 0x2D11 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D3E DUP2 PUSH2 0x2D1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D59 JUMPI PUSH2 0x2D58 PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D66 DUP5 DUP3 DUP6 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D98 DUP3 PUSH2 0x2D6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DA8 DUP2 PUSH2 0x2D8E JUMP JUMPDEST DUP2 EQ PUSH2 0x2DB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2DC3 DUP2 PUSH2 0x2D9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DDF JUMPI PUSH2 0x2DDE PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DEC DUP6 DUP3 DUP7 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DFD DUP6 DUP3 DUP7 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E1C JUMPI PUSH2 0x2E1B PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E29 DUP5 DUP3 DUP6 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E3B DUP2 PUSH2 0x2D11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E54 PUSH0 DUP4 ADD DUP7 PUSH2 0x2E32 JUMP JUMPDEST PUSH2 0x2E61 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2E32 JUMP JUMPDEST PUSH2 0x2E6E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E32 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E88 DUP2 PUSH2 0x2E76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EA1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EB0 DUP2 PUSH2 0x2E76 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2ECB DUP2 PUSH2 0x2EA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EE6 JUMPI PUSH2 0x2EE5 PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EF3 DUP5 DUP3 DUP6 ADD PUSH2 0x2EBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F0F PUSH0 DUP4 ADD DUP5 PUSH2 0x2E32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F2B JUMPI PUSH2 0x2F2A PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F38 DUP6 DUP3 DUP7 ADD PUSH2 0x2EBD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F49 DUP6 DUP3 DUP7 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F76 PUSH2 0x2F71 PUSH2 0x2F6C DUP5 PUSH2 0x2D6F JUMP JUMPDEST PUSH2 0x2F53 JUMP JUMPDEST PUSH2 0x2D6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F87 DUP3 PUSH2 0x2F5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F98 DUP3 PUSH2 0x2F7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FA8 DUP2 PUSH2 0x2F8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FC1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2F9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FDD JUMPI PUSH2 0x2FDC PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FEA DUP6 DUP3 DUP7 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FFB DUP6 DUP3 DUP7 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x3053 DUP3 PUSH2 0x300D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3072 JUMPI PUSH2 0x3071 PUSH2 0x301D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3084 PUSH2 0x2C4D JUMP JUMPDEST SWAP1 POP PUSH2 0x3090 DUP3 DUP3 PUSH2 0x304A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x30AF JUMPI PUSH2 0x30AE PUSH2 0x301D JUMP JUMPDEST JUMPDEST PUSH2 0x30B8 DUP3 PUSH2 0x300D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30E5 PUSH2 0x30E0 DUP5 PUSH2 0x3095 JUMP JUMPDEST PUSH2 0x307B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3101 JUMPI PUSH2 0x3100 PUSH2 0x3009 JUMP JUMPDEST JUMPDEST PUSH2 0x310C DUP5 DUP3 DUP6 PUSH2 0x30C5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3128 JUMPI PUSH2 0x3127 PUSH2 0x3005 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3138 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x30D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3157 JUMPI PUSH2 0x3156 PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3164 DUP6 DUP3 DUP7 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3185 JUMPI PUSH2 0x3184 PUSH2 0x2C5A JUMP JUMPDEST JUMPDEST PUSH2 0x3191 DUP6 DUP3 DUP7 ADD PUSH2 0x3114 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31AE PUSH0 DUP4 ADD DUP6 PUSH2 0x2E32 JUMP JUMPDEST PUSH2 0x31BB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E32 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31F4 DUP3 PUSH2 0x31C2 JUMP JUMPDEST PUSH2 0x31FE DUP2 DUP6 PUSH2 0x31CC JUMP JUMPDEST SWAP4 POP PUSH2 0x320E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x31DC JUMP JUMPDEST PUSH2 0x3217 DUP2 PUSH2 0x300D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x323A DUP2 DUP5 PUSH2 0x31EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3259 JUMPI PUSH2 0x3258 PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3266 DUP7 DUP3 DUP8 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3277 DUP7 DUP3 DUP8 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3288 DUP7 DUP3 DUP8 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x32AC JUMPI PUSH2 0x32AB PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x32B9 DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x32CA DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x32DB DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x32EC DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x32FD DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x330E DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH2 0x3325 DUP3 PUSH2 0x2F7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3335 DUP2 PUSH2 0x331B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x334E PUSH0 DUP4 ADD DUP5 PUSH2 0x332C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x335D DUP2 PUSH2 0x2D8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3376 PUSH0 DUP4 ADD DUP7 PUSH2 0x3354 JUMP JUMPDEST PUSH2 0x3383 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3354 JUMP JUMPDEST PUSH2 0x3390 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E32 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33AB PUSH0 DUP4 ADD DUP6 PUSH2 0x3354 JUMP JUMPDEST PUSH2 0x33B8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E32 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x33C8 DUP2 PUSH2 0x2CDE JUMP JUMPDEST DUP2 EQ PUSH2 0x33D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x33E3 DUP2 PUSH2 0x33BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33FE JUMPI PUSH2 0x33FD PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x340B DUP5 DUP3 DUP6 ADD PUSH2 0x33D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E74206D7573742062652067726561746572207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7A65726F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x346E PUSH1 0x24 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3479 DUP3 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x349B DUP2 PUSH2 0x3462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x34B0 DUP2 PUSH2 0x2D9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34CB JUMPI PUSH2 0x34CA PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x34D8 DUP5 DUP3 DUP6 ADD PUSH2 0x34A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E4654206E6F74206F776E656420627920636F6E747261637400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3515 PUSH1 0x19 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3520 DUP3 PUSH2 0x34E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3542 DUP2 PUSH2 0x3509 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3580 DUP3 PUSH2 0x2D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x358B DUP4 PUSH2 0x2D11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x35A3 JUMPI PUSH2 0x35A2 PUSH2 0x3549 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536C69707061676520746F6C6572616E63652065786365656465640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x35DD PUSH1 0x1B DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x35E8 DUP3 PUSH2 0x35A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x360A DUP2 PUSH2 0x35D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3645 PUSH1 0x16 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3650 DUP3 PUSH2 0x3611 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3672 DUP2 PUSH2 0x3639 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3683 DUP3 PUSH2 0x2D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x368E DUP4 PUSH2 0x2D11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x36A6 JUMPI PUSH2 0x36A5 PUSH2 0x3549 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3706 PUSH1 0x26 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3711 DUP3 PUSH2 0x36AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3733 DUP2 PUSH2 0x36FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420706F6F6C2073746174650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x376E PUSH1 0x12 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3779 DUP3 PUSH2 0x373A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x379B DUP2 PUSH2 0x3762 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x37AC DUP3 PUSH2 0x2D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x37B7 DUP4 PUSH2 0x2D11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x37C5 DUP2 PUSH2 0x2D11 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x37DC JUMPI PUSH2 0x37DB PUSH2 0x3549 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x381A DUP3 PUSH2 0x2D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x3825 DUP4 PUSH2 0x2D11 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3835 JUMPI PUSH2 0x3834 PUSH2 0x37E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742045544820616D6F756E74000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3874 PUSH1 0x17 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x387F DUP3 PUSH2 0x3840 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x38A1 DUP2 PUSH2 0x3868 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x38DE PUSH2 0x38D9 PUSH2 0x38D4 DUP5 PUSH2 0x38A8 JUMP JUMPDEST PUSH2 0x2F53 JUMP JUMPDEST PUSH2 0x38B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38EE DUP2 PUSH2 0x38C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3907 PUSH0 DUP4 ADD DUP5 PUSH2 0x38E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E6572206F66204E465400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3941 PUSH1 0x10 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x394C DUP3 PUSH2 0x390D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x396E DUP2 PUSH2 0x3935 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x39A9 PUSH1 0x14 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x39B4 DUP3 PUSH2 0x3975 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x39D6 DUP2 PUSH2 0x399D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x3354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A04 DUP2 PUSH2 0x2EA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A1F JUMPI PUSH2 0x3A1E PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3A2C DUP5 DUP3 DUP6 ADD PUSH2 0x39F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A48 PUSH0 DUP4 ADD DUP6 PUSH2 0x3354 JUMP JUMPDEST PUSH2 0x3A55 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A7A DUP3 PUSH2 0x3A5C JUMP JUMPDEST PUSH2 0x3A84 DUP2 DUP6 PUSH2 0x3A66 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x31DC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3AAB DUP3 DUP5 PUSH2 0x3A70 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xF6 0xC2 0xEF 0xAA TIMESTAMP PUSH17 0xF923E1D8981C52665EF8B357D3F4539E28 CODESIZE SWAP9 SHR PUSH2 0x9AD5 ISZERO 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "638:8141:16:-:0;;;1171:4:2;1128:48;;;;;;;;;1901:53:16;;;;;;;;;;1925:22;:20;;;:22;;:::i;:::-;638:8141;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:17:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;638:8141:16:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_28": {
									"entryPoint": 5807,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FEE_RATE_2082": {
									"entryPoint": 2307,
									"id": 2082,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LIQUIDITY_MANAGER_ROLE_2079": {
									"entryPoint": 2229,
									"id": 2079,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_2069": {
									"entryPoint": 8164,
									"id": 2069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADER_ROLE_2074": {
									"entryPoint": 8351,
									"id": 2074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_640": {
									"entryPoint": 5813,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_63": {
									"entryPoint": 10230,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_1090": {
									"entryPoint": 10212,
									"id": 1090,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_1108": {
									"entryPoint": 10656,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_670": {
									"entryPoint": 10240,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2893": {
									"entryPoint": 9556,
									"id": 2893,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_538": {
									"entryPoint": 10592,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1661": {
									"entryPoint": 11042,
									"id": 1661,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_746": {
									"entryPoint": 9888,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_730": {
									"entryPoint": 9326,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_129": {
									"entryPoint": 8492,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_150": {
									"entryPoint": 10250,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": 8512,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_615": {
									"entryPoint": 10173,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_1064": {
									"entryPoint": 10023,
									"id": 1064,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 8551,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isInitializing_606": {
									"entryPoint": 11102,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1020": {
									"entryPoint": 8799,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1189": {
									"entryPoint": 10062,
									"id": 1189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1152": {
									"entryPoint": 9164,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1165": {
									"entryPoint": 10331,
									"id": 1165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1924": {
									"entryPoint": 11273,
									"id": 1924,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_361": {
									"entryPoint": 8806,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_1447": {
									"entryPoint": 10713,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_1213": {
									"entryPoint": 9054,
									"id": 1213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_797": {
									"entryPoint": 9602,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addLiquidity_2392": {
									"entryPoint": 4007,
									"id": 2392,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@cqtNFT_2088": {
									"entryPoint": 7462,
									"id": 2088,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cqtToken_2085": {
									"entryPoint": 2346,
									"id": 2085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1844": {
									"entryPoint": 10914,
									"id": 1844,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1957": {
									"entryPoint": 10704,
									"id": 1957,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1420": {
									"entryPoint": 10395,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOutputAmount_2883": {
									"entryPoint": 9229,
									"id": 2883,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getRoleAdmin_171": {
									"entryPoint": 2265,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_190": {
									"entryPoint": 2312,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_116": {
									"entryPoint": 4958,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2215": {
									"entryPoint": 6055,
									"id": 2215,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@liquidityPools_2104": {
									"entryPoint": 2191,
									"id": 2104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pause_2225": {
									"entryPoint": 4905,
									"id": 2225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1140": {
									"entryPoint": 4871,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_688": {
									"entryPoint": 3958,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_2500": {
									"entryPoint": 5071,
									"id": 2500,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@renounceRole_232": {
									"entryPoint": 2381,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_209": {
									"entryPoint": 6729,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1253": {
									"entryPoint": 8387,
									"id": 1253,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_91": {
									"entryPoint": 1774,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapETHForNFT_2771": {
									"entryPoint": 2557,
									"id": 2771,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapETHForTokens_2587": {
									"entryPoint": 3364,
									"id": 2587,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapNFTForETH_2843": {
									"entryPoint": 6763,
									"id": 2843,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapTokensForETH_2685": {
									"entryPoint": 7499,
									"id": 2685,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@unpause_2235": {
									"entryPoint": 2504,
									"id": 2235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateLiquidityPool_2920": {
									"entryPoint": 5870,
									"id": 2920,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1481": {
									"entryPoint": 10478,
									"id": 1481,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_708": {
									"entryPoint": 3333,
									"id": 708,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1884": {
									"entryPoint": 11132,
									"id": 1884,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawETH_2949": {
									"entryPoint": 8200,
									"id": 2949,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawNFT_2990": {
									"entryPoint": 1895,
									"id": 2990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawTokens_2969": {
									"entryPoint": 2050,
									"id": 2969,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 12499,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 11701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 13474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 13269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 11965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 14838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 11423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 12564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 11568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 13494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address": {
									"entryPoint": 12946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 12609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 11721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 12866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 13289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 11985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 14858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 12053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 11443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 11588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 12231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 13140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 11497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 11903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20Upgradeable_$876_to_t_address_fromStack": {
									"entryPoint": 12191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721Upgradeable_$992_to_t_address_fromStack": {
									"entryPoint": 13100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 14565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 11826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 15008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 14813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13155,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 14901,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13208,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 11512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 11918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Upgradeable_$876__to_t_address__fromStack_reversed": {
									"entryPoint": 12206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721Upgradeable_$992__to_t_address__fromStack_reversed": {
									"entryPoint": 13115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 14580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 12028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 12699,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11841,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 12411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 11341,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 12437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 14940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 12738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 12748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 13945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 14352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 14242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 13686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 11662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 11486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 11894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 11358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 14504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 11631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 11537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 14513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20Upgradeable_$876_to_t_address": {
									"entryPoint": 12174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721Upgradeable_$992_to_t_address": {
									"entryPoint": 13083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 14532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 12157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 12124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 12485,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 12764,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 12362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 12115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 13641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 14307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 12317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 12293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 12297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 11354,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 11350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 12301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f": {
									"entryPoint": 13996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9": {
									"entryPoint": 14138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10": {
									"entryPoint": 13737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad": {
									"entryPoint": 13841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 14709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a": {
									"entryPoint": 13537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b": {
									"entryPoint": 13332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721": {
									"entryPoint": 14605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91": {
									"entryPoint": 14400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 11679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 13247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 11943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 11401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 11546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28987:17",
										"nodeType": "YulBlock",
										"src": "0:28987:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:17",
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nativeSrc": "57:19:17",
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:17",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nativeSrc": "67:9:17",
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:17",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nativeSrc": "177:28:17",
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:17",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:17",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nativeSrc": "187:12:17",
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nativeSrc": "187:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nativeSrc": "300:28:17",
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:17",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:17",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nativeSrc": "310:12:17",
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nativeSrc": "310:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nativeSrc": "378:105:17",
													"nodeType": "YulBlock",
													"src": "378:105:17",
													"statements": [
														{
															"nativeSrc": "388:89:17",
															"nodeType": "YulAssignment",
															"src": "388:89:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:17",
																		"nodeType": "YulLiteral",
																		"src": "410:66:17",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:17"
																},
																"nativeSrc": "399:78:17",
																"nodeType": "YulFunctionCall",
																"src": "399:78:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:17",
														"nodeType": "YulTypedName",
														"src": "360:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:17",
														"nodeType": "YulTypedName",
														"src": "370:7:17",
														"type": ""
													}
												],
												"src": "334:149:17"
											},
											{
												"body": {
													"nativeSrc": "531:78:17",
													"nodeType": "YulBlock",
													"src": "531:78:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:17",
																"nodeType": "YulBlock",
																"src": "587:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:17",
																					"nodeType": "YulLiteral",
																					"src": "596:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:17",
																					"nodeType": "YulLiteral",
																					"src": "599:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:17"
																			},
																			"nativeSrc": "589:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:17"
																		},
																		"nativeSrc": "589:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:17",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:17"
																				},
																				"nativeSrc": "561:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:17"
																		},
																		"nativeSrc": "551:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:17"
																},
																"nativeSrc": "544:42:17",
																"nodeType": "YulFunctionCall",
																"src": "544:42:17"
															},
															"nativeSrc": "541:62:17",
															"nodeType": "YulIf",
															"src": "541:62:17"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:17",
														"nodeType": "YulTypedName",
														"src": "524:5:17",
														"type": ""
													}
												],
												"src": "489:120:17"
											},
											{
												"body": {
													"nativeSrc": "666:86:17",
													"nodeType": "YulBlock",
													"src": "666:86:17",
													"statements": [
														{
															"nativeSrc": "676:29:17",
															"nodeType": "YulAssignment",
															"src": "676:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:17"
																},
																"nativeSrc": "685:20:17",
																"nodeType": "YulFunctionCall",
																"src": "685:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:17"
																},
																"nativeSrc": "714:32:17",
																"nodeType": "YulFunctionCall",
																"src": "714:32:17"
															},
															"nativeSrc": "714:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:17",
														"nodeType": "YulTypedName",
														"src": "644:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:17",
														"nodeType": "YulTypedName",
														"src": "652:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:17",
														"nodeType": "YulTypedName",
														"src": "660:5:17",
														"type": ""
													}
												],
												"src": "615:137:17"
											},
											{
												"body": {
													"nativeSrc": "823:262:17",
													"nodeType": "YulBlock",
													"src": "823:262:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:17",
																"nodeType": "YulBlock",
																"src": "869:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:17"
																			},
																			"nativeSrc": "871:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:17"
																		},
																		"nativeSrc": "871:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:17"
																		},
																		"nativeSrc": "840:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:17",
																		"nodeType": "YulLiteral",
																		"src": "865:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:17"
																},
																"nativeSrc": "836:32:17",
																"nodeType": "YulFunctionCall",
																"src": "836:32:17"
															},
															"nativeSrc": "833:119:17",
															"nodeType": "YulIf",
															"src": "833:119:17"
														},
														{
															"nativeSrc": "962:116:17",
															"nodeType": "YulBlock",
															"src": "962:116:17",
															"statements": [
																{
																	"nativeSrc": "977:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:17",
																		"nodeType": "YulLiteral",
																		"src": "991:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:17",
																			"nodeType": "YulTypedName",
																			"src": "981:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:17",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:17"
																				},
																				"nativeSrc": "1036:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:17",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:17"
																		},
																		"nativeSrc": "1016:52:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:17",
														"nodeType": "YulTypedName",
														"src": "793:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:17",
														"nodeType": "YulTypedName",
														"src": "804:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:17",
														"nodeType": "YulTypedName",
														"src": "816:6:17",
														"type": ""
													}
												],
												"src": "758:327:17"
											},
											{
												"body": {
													"nativeSrc": "1133:48:17",
													"nodeType": "YulBlock",
													"src": "1133:48:17",
													"statements": [
														{
															"nativeSrc": "1143:32:17",
															"nodeType": "YulAssignment",
															"src": "1143:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:17"
																		},
																		"nativeSrc": "1161:13:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:17"
																},
																"nativeSrc": "1154:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:17",
														"nodeType": "YulTypedName",
														"src": "1115:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:17",
														"nodeType": "YulTypedName",
														"src": "1125:7:17",
														"type": ""
													}
												],
												"src": "1091:90:17"
											},
											{
												"body": {
													"nativeSrc": "1246:50:17",
													"nodeType": "YulBlock",
													"src": "1246:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:17",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:17"
																		},
																		"nativeSrc": "1268:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:17"
																},
																"nativeSrc": "1256:34:17",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:17"
															},
															"nativeSrc": "1256:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:17",
														"nodeType": "YulTypedName",
														"src": "1234:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:17",
														"nodeType": "YulTypedName",
														"src": "1241:3:17",
														"type": ""
													}
												],
												"src": "1187:109:17"
											},
											{
												"body": {
													"nativeSrc": "1394:118:17",
													"nodeType": "YulBlock",
													"src": "1394:118:17",
													"statements": [
														{
															"nativeSrc": "1404:26:17",
															"nodeType": "YulAssignment",
															"src": "1404:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:17"
																},
																"nativeSrc": "1412:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:17"
																		},
																		"nativeSrc": "1487:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:17"
																},
																"nativeSrc": "1440:65:17",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:17"
															},
															"nativeSrc": "1440:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:17",
														"nodeType": "YulTypedName",
														"src": "1366:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:17",
														"nodeType": "YulTypedName",
														"src": "1378:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:17",
														"nodeType": "YulTypedName",
														"src": "1389:4:17",
														"type": ""
													}
												],
												"src": "1302:210:17"
											},
											{
												"body": {
													"nativeSrc": "1563:32:17",
													"nodeType": "YulBlock",
													"src": "1563:32:17",
													"statements": [
														{
															"nativeSrc": "1573:16:17",
															"nodeType": "YulAssignment",
															"src": "1573:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:17",
																"nodeType": "YulIdentifier",
																"src": "1584:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1518:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:17",
														"nodeType": "YulTypedName",
														"src": "1545:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:17",
														"nodeType": "YulTypedName",
														"src": "1555:7:17",
														"type": ""
													}
												],
												"src": "1518:77:17"
											},
											{
												"body": {
													"nativeSrc": "1644:79:17",
													"nodeType": "YulBlock",
													"src": "1644:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:17",
																"nodeType": "YulBlock",
																"src": "1701:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:17"
																			},
																			"nativeSrc": "1703:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:17"
																		},
																		"nativeSrc": "1703:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1674:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:17"
																				},
																				"nativeSrc": "1674:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:17"
																		},
																		"nativeSrc": "1664:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:17"
																},
																"nativeSrc": "1657:43:17",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:17"
															},
															"nativeSrc": "1654:63:17",
															"nodeType": "YulIf",
															"src": "1654:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1601:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:17",
														"nodeType": "YulTypedName",
														"src": "1637:5:17",
														"type": ""
													}
												],
												"src": "1601:122:17"
											},
											{
												"body": {
													"nativeSrc": "1781:87:17",
													"nodeType": "YulBlock",
													"src": "1781:87:17",
													"statements": [
														{
															"nativeSrc": "1791:29:17",
															"nodeType": "YulAssignment",
															"src": "1791:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:17"
																},
																"nativeSrc": "1800:20:17",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1829:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:17"
																},
																"nativeSrc": "1829:33:17",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:17"
															},
															"nativeSrc": "1829:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1729:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:17",
														"nodeType": "YulTypedName",
														"src": "1759:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:17",
														"nodeType": "YulTypedName",
														"src": "1767:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:17",
														"nodeType": "YulTypedName",
														"src": "1775:5:17",
														"type": ""
													}
												],
												"src": "1729:139:17"
											},
											{
												"body": {
													"nativeSrc": "1940:263:17",
													"nodeType": "YulBlock",
													"src": "1940:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:17",
																"nodeType": "YulBlock",
																"src": "1986:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:17"
																			},
																			"nativeSrc": "1988:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:17"
																		},
																		"nativeSrc": "1988:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:17"
																		},
																		"nativeSrc": "1957:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:17"
																},
																"nativeSrc": "1953:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:17"
															},
															"nativeSrc": "1950:119:17",
															"nodeType": "YulIf",
															"src": "1950:119:17"
														},
														{
															"nativeSrc": "2079:117:17",
															"nodeType": "YulBlock",
															"src": "2079:117:17",
															"statements": [
																{
																	"nativeSrc": "2094:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:17",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:17",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:17"
																				},
																				"nativeSrc": "2154:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2133:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:17"
																		},
																		"nativeSrc": "2133:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1874:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:17",
														"nodeType": "YulTypedName",
														"src": "1910:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:17",
														"nodeType": "YulTypedName",
														"src": "1921:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:17",
														"nodeType": "YulTypedName",
														"src": "1933:6:17",
														"type": ""
													}
												],
												"src": "1874:329:17"
											},
											{
												"body": {
													"nativeSrc": "2254:81:17",
													"nodeType": "YulBlock",
													"src": "2254:81:17",
													"statements": [
														{
															"nativeSrc": "2264:65:17",
															"nodeType": "YulAssignment",
															"src": "2264:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2279:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2279:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2286:42:17",
																		"nodeType": "YulLiteral",
																		"src": "2286:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2275:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2275:3:17"
																},
																"nativeSrc": "2275:54:17",
																"nodeType": "YulFunctionCall",
																"src": "2275:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2264:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "2264:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2209:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2236:5:17",
														"nodeType": "YulTypedName",
														"src": "2236:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2246:7:17",
														"nodeType": "YulTypedName",
														"src": "2246:7:17",
														"type": ""
													}
												],
												"src": "2209:126:17"
											},
											{
												"body": {
													"nativeSrc": "2386:51:17",
													"nodeType": "YulBlock",
													"src": "2386:51:17",
													"statements": [
														{
															"nativeSrc": "2396:35:17",
															"nodeType": "YulAssignment",
															"src": "2396:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2425:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2425:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2407:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "2407:17:17"
																},
																"nativeSrc": "2407:24:17",
																"nodeType": "YulFunctionCall",
																"src": "2407:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2396:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "2396:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2341:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2368:5:17",
														"nodeType": "YulTypedName",
														"src": "2368:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2378:7:17",
														"nodeType": "YulTypedName",
														"src": "2378:7:17",
														"type": ""
													}
												],
												"src": "2341:96:17"
											},
											{
												"body": {
													"nativeSrc": "2486:79:17",
													"nodeType": "YulBlock",
													"src": "2486:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2543:16:17",
																"nodeType": "YulBlock",
																"src": "2543:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2552:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2552:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2555:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2555:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2545:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2545:6:17"
																			},
																			"nativeSrc": "2545:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2545:12:17"
																		},
																		"nativeSrc": "2545:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2545:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2509:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2509:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2534:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2534:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2516:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "2516:17:17"
																				},
																				"nativeSrc": "2516:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2516:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2506:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2506:2:17"
																		},
																		"nativeSrc": "2506:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2506:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2499:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:17"
																},
																"nativeSrc": "2499:43:17",
																"nodeType": "YulFunctionCall",
																"src": "2499:43:17"
															},
															"nativeSrc": "2496:63:17",
															"nodeType": "YulIf",
															"src": "2496:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2443:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2479:5:17",
														"nodeType": "YulTypedName",
														"src": "2479:5:17",
														"type": ""
													}
												],
												"src": "2443:122:17"
											},
											{
												"body": {
													"nativeSrc": "2623:87:17",
													"nodeType": "YulBlock",
													"src": "2623:87:17",
													"statements": [
														{
															"nativeSrc": "2633:29:17",
															"nodeType": "YulAssignment",
															"src": "2633:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2655:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2642:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2642:12:17"
																},
																"nativeSrc": "2642:20:17",
																"nodeType": "YulFunctionCall",
																"src": "2642:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2633:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2633:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2698:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2698:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2671:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "2671:26:17"
																},
																"nativeSrc": "2671:33:17",
																"nodeType": "YulFunctionCall",
																"src": "2671:33:17"
															},
															"nativeSrc": "2671:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "2671:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2571:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2601:6:17",
														"nodeType": "YulTypedName",
														"src": "2601:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2609:3:17",
														"nodeType": "YulTypedName",
														"src": "2609:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2617:5:17",
														"nodeType": "YulTypedName",
														"src": "2617:5:17",
														"type": ""
													}
												],
												"src": "2571:139:17"
											},
											{
												"body": {
													"nativeSrc": "2799:391:17",
													"nodeType": "YulBlock",
													"src": "2799:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2845:83:17",
																"nodeType": "YulBlock",
																"src": "2845:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2847:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "2847:77:17"
																			},
																			"nativeSrc": "2847:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2847:79:17"
																		},
																		"nativeSrc": "2847:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2847:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2820:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2820:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2829:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2829:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2816:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2816:3:17"
																		},
																		"nativeSrc": "2816:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2816:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2841:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2841:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2812:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2812:3:17"
																},
																"nativeSrc": "2812:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2812:32:17"
															},
															"nativeSrc": "2809:119:17",
															"nodeType": "YulIf",
															"src": "2809:119:17"
														},
														{
															"nativeSrc": "2938:117:17",
															"nodeType": "YulBlock",
															"src": "2938:117:17",
															"statements": [
																{
																	"nativeSrc": "2953:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2953:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2967:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2967:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2957:6:17",
																			"nodeType": "YulTypedName",
																			"src": "2957:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2982:63:17",
																	"nodeType": "YulAssignment",
																	"src": "2982:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3017:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3028:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3028:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3013:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:17"
																				},
																				"nativeSrc": "3013:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3013:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3037:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3037:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2992:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "2992:20:17"
																		},
																		"nativeSrc": "2992:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2992:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2982:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3065:118:17",
															"nodeType": "YulBlock",
															"src": "3065:118:17",
															"statements": [
																{
																	"nativeSrc": "3080:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3080:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3094:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3094:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3084:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3084:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3110:63:17",
																	"nodeType": "YulAssignment",
																	"src": "3110:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3145:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3145:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3156:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3156:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3141:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3141:3:17"
																				},
																				"nativeSrc": "3141:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3141:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3165:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3165:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3120:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "3120:20:17"
																		},
																		"nativeSrc": "3120:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3120:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3110:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3110:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2716:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2761:9:17",
														"nodeType": "YulTypedName",
														"src": "2761:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2772:7:17",
														"nodeType": "YulTypedName",
														"src": "2772:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2784:6:17",
														"nodeType": "YulTypedName",
														"src": "2784:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2792:6:17",
														"nodeType": "YulTypedName",
														"src": "2792:6:17",
														"type": ""
													}
												],
												"src": "2716:474:17"
											},
											{
												"body": {
													"nativeSrc": "3262:263:17",
													"nodeType": "YulBlock",
													"src": "3262:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3308:83:17",
																"nodeType": "YulBlock",
																"src": "3308:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3310:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "3310:77:17"
																			},
																			"nativeSrc": "3310:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3310:79:17"
																		},
																		"nativeSrc": "3310:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3310:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3283:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3283:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3292:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3292:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3279:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3279:3:17"
																		},
																		"nativeSrc": "3279:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3279:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3304:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3304:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3275:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3275:3:17"
																},
																"nativeSrc": "3275:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3275:32:17"
															},
															"nativeSrc": "3272:119:17",
															"nodeType": "YulIf",
															"src": "3272:119:17"
														},
														{
															"nativeSrc": "3401:117:17",
															"nodeType": "YulBlock",
															"src": "3401:117:17",
															"statements": [
																{
																	"nativeSrc": "3416:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3416:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3430:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3430:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3420:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3420:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3445:63:17",
																	"nodeType": "YulAssignment",
																	"src": "3445:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3480:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3480:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3491:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3491:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3476:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3476:3:17"
																				},
																				"nativeSrc": "3476:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3476:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3500:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3500:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3455:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "3455:20:17"
																		},
																		"nativeSrc": "3455:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3455:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3445:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3445:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3196:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3232:9:17",
														"nodeType": "YulTypedName",
														"src": "3232:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3243:7:17",
														"nodeType": "YulTypedName",
														"src": "3243:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3255:6:17",
														"nodeType": "YulTypedName",
														"src": "3255:6:17",
														"type": ""
													}
												],
												"src": "3196:329:17"
											},
											{
												"body": {
													"nativeSrc": "3596:53:17",
													"nodeType": "YulBlock",
													"src": "3596:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3613:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3613:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3636:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3636:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3618:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "3618:17:17"
																		},
																		"nativeSrc": "3618:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3618:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3606:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:17"
																},
																"nativeSrc": "3606:37:17",
																"nodeType": "YulFunctionCall",
																"src": "3606:37:17"
															},
															"nativeSrc": "3606:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "3606:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3531:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3584:5:17",
														"nodeType": "YulTypedName",
														"src": "3584:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3591:3:17",
														"nodeType": "YulTypedName",
														"src": "3591:3:17",
														"type": ""
													}
												],
												"src": "3531:118:17"
											},
											{
												"body": {
													"nativeSrc": "3809:288:17",
													"nodeType": "YulBlock",
													"src": "3809:288:17",
													"statements": [
														{
															"nativeSrc": "3819:26:17",
															"nodeType": "YulAssignment",
															"src": "3819:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3831:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3831:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3842:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3842:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3827:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:17"
																},
																"nativeSrc": "3827:18:17",
																"nodeType": "YulFunctionCall",
																"src": "3827:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3819:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3819:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3899:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3899:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3912:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3912:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3923:1:17",
																				"nodeType": "YulLiteral",
																				"src": "3923:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3908:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3908:3:17"
																		},
																		"nativeSrc": "3908:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3908:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3855:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "3855:43:17"
																},
																"nativeSrc": "3855:71:17",
																"nodeType": "YulFunctionCall",
																"src": "3855:71:17"
															},
															"nativeSrc": "3855:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "3855:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3980:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3980:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3993:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3993:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4004:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4004:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3989:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3989:3:17"
																		},
																		"nativeSrc": "3989:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3989:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3936:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "3936:43:17"
																},
																"nativeSrc": "3936:72:17",
																"nodeType": "YulFunctionCall",
																"src": "3936:72:17"
															},
															"nativeSrc": "3936:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "3936:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4062:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4062:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4075:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4075:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4086:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4086:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4071:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4071:3:17"
																		},
																		"nativeSrc": "4071:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4071:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4018:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "4018:43:17"
																},
																"nativeSrc": "4018:72:17",
																"nodeType": "YulFunctionCall",
																"src": "4018:72:17"
															},
															"nativeSrc": "4018:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "4018:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3655:442:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3765:9:17",
														"nodeType": "YulTypedName",
														"src": "3765:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3777:6:17",
														"nodeType": "YulTypedName",
														"src": "3777:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3785:6:17",
														"nodeType": "YulTypedName",
														"src": "3785:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3793:6:17",
														"nodeType": "YulTypedName",
														"src": "3793:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3804:4:17",
														"nodeType": "YulTypedName",
														"src": "3804:4:17",
														"type": ""
													}
												],
												"src": "3655:442:17"
											},
											{
												"body": {
													"nativeSrc": "4148:32:17",
													"nodeType": "YulBlock",
													"src": "4148:32:17",
													"statements": [
														{
															"nativeSrc": "4158:16:17",
															"nodeType": "YulAssignment",
															"src": "4158:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "4169:5:17",
																"nodeType": "YulIdentifier",
																"src": "4169:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4158:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "4158:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4103:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4130:5:17",
														"nodeType": "YulTypedName",
														"src": "4130:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4140:7:17",
														"nodeType": "YulTypedName",
														"src": "4140:7:17",
														"type": ""
													}
												],
												"src": "4103:77:17"
											},
											{
												"body": {
													"nativeSrc": "4251:53:17",
													"nodeType": "YulBlock",
													"src": "4251:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4268:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4268:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4291:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4291:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4273:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "4273:17:17"
																		},
																		"nativeSrc": "4273:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4273:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4261:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:17"
																},
																"nativeSrc": "4261:37:17",
																"nodeType": "YulFunctionCall",
																"src": "4261:37:17"
															},
															"nativeSrc": "4261:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "4261:37:17"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4186:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4239:5:17",
														"nodeType": "YulTypedName",
														"src": "4239:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4246:3:17",
														"nodeType": "YulTypedName",
														"src": "4246:3:17",
														"type": ""
													}
												],
												"src": "4186:118:17"
											},
											{
												"body": {
													"nativeSrc": "4408:124:17",
													"nodeType": "YulBlock",
													"src": "4408:124:17",
													"statements": [
														{
															"nativeSrc": "4418:26:17",
															"nodeType": "YulAssignment",
															"src": "4418:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4430:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4430:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4441:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4441:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4426:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:17"
																},
																"nativeSrc": "4426:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4426:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4418:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4418:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4498:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4498:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4511:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4511:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4522:1:17",
																				"nodeType": "YulLiteral",
																				"src": "4522:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4507:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:17"
																		},
																		"nativeSrc": "4507:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4507:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4454:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "4454:43:17"
																},
																"nativeSrc": "4454:71:17",
																"nodeType": "YulFunctionCall",
																"src": "4454:71:17"
															},
															"nativeSrc": "4454:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "4454:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4310:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4380:9:17",
														"nodeType": "YulTypedName",
														"src": "4380:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4392:6:17",
														"nodeType": "YulTypedName",
														"src": "4392:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4403:4:17",
														"nodeType": "YulTypedName",
														"src": "4403:4:17",
														"type": ""
													}
												],
												"src": "4310:222:17"
											},
											{
												"body": {
													"nativeSrc": "4581:79:17",
													"nodeType": "YulBlock",
													"src": "4581:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4638:16:17",
																"nodeType": "YulBlock",
																"src": "4638:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4647:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4647:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4650:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4650:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4640:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4640:6:17"
																			},
																			"nativeSrc": "4640:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4640:12:17"
																		},
																		"nativeSrc": "4640:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4640:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4604:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4604:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4629:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4629:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "4611:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "4611:17:17"
																				},
																				"nativeSrc": "4611:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4611:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4601:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4601:2:17"
																		},
																		"nativeSrc": "4601:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4601:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4594:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4594:6:17"
																},
																"nativeSrc": "4594:43:17",
																"nodeType": "YulFunctionCall",
																"src": "4594:43:17"
															},
															"nativeSrc": "4591:63:17",
															"nodeType": "YulIf",
															"src": "4591:63:17"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "4538:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4574:5:17",
														"nodeType": "YulTypedName",
														"src": "4574:5:17",
														"type": ""
													}
												],
												"src": "4538:122:17"
											},
											{
												"body": {
													"nativeSrc": "4718:87:17",
													"nodeType": "YulBlock",
													"src": "4718:87:17",
													"statements": [
														{
															"nativeSrc": "4728:29:17",
															"nodeType": "YulAssignment",
															"src": "4728:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4750:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4750:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4737:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4737:12:17"
																},
																"nativeSrc": "4737:20:17",
																"nodeType": "YulFunctionCall",
																"src": "4737:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4728:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "4728:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4793:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "4793:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "4766:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "4766:26:17"
																},
																"nativeSrc": "4766:33:17",
																"nodeType": "YulFunctionCall",
																"src": "4766:33:17"
															},
															"nativeSrc": "4766:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "4766:33:17"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "4666:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4696:6:17",
														"nodeType": "YulTypedName",
														"src": "4696:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4704:3:17",
														"nodeType": "YulTypedName",
														"src": "4704:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4712:5:17",
														"nodeType": "YulTypedName",
														"src": "4712:5:17",
														"type": ""
													}
												],
												"src": "4666:139:17"
											},
											{
												"body": {
													"nativeSrc": "4877:263:17",
													"nodeType": "YulBlock",
													"src": "4877:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4923:83:17",
																"nodeType": "YulBlock",
																"src": "4923:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4925:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "4925:77:17"
																			},
																			"nativeSrc": "4925:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4925:79:17"
																		},
																		"nativeSrc": "4925:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4925:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4898:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4898:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4907:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4907:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4894:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:17"
																		},
																		"nativeSrc": "4894:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4919:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4890:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4890:3:17"
																},
																"nativeSrc": "4890:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4890:32:17"
															},
															"nativeSrc": "4887:119:17",
															"nodeType": "YulIf",
															"src": "4887:119:17"
														},
														{
															"nativeSrc": "5016:117:17",
															"nodeType": "YulBlock",
															"src": "5016:117:17",
															"statements": [
																{
																	"nativeSrc": "5031:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5031:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5045:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5045:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5035:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5035:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5060:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5060:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5095:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5095:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5106:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5106:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5091:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5091:3:17"
																				},
																				"nativeSrc": "5091:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5091:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5115:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5115:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5070:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5070:20:17"
																		},
																		"nativeSrc": "5070:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5070:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5060:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5060:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "4811:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4847:9:17",
														"nodeType": "YulTypedName",
														"src": "4847:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4858:7:17",
														"nodeType": "YulTypedName",
														"src": "4858:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4870:6:17",
														"nodeType": "YulTypedName",
														"src": "4870:6:17",
														"type": ""
													}
												],
												"src": "4811:329:17"
											},
											{
												"body": {
													"nativeSrc": "5244:124:17",
													"nodeType": "YulBlock",
													"src": "5244:124:17",
													"statements": [
														{
															"nativeSrc": "5254:26:17",
															"nodeType": "YulAssignment",
															"src": "5254:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5266:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5266:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5277:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5277:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5262:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5262:3:17"
																},
																"nativeSrc": "5262:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5262:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5254:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5254:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5334:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5334:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5347:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5347:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5358:1:17",
																				"nodeType": "YulLiteral",
																				"src": "5358:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5343:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5343:3:17"
																		},
																		"nativeSrc": "5343:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5343:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5290:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "5290:43:17"
																},
																"nativeSrc": "5290:71:17",
																"nodeType": "YulFunctionCall",
																"src": "5290:71:17"
															},
															"nativeSrc": "5290:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "5290:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5146:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5216:9:17",
														"nodeType": "YulTypedName",
														"src": "5216:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5228:6:17",
														"nodeType": "YulTypedName",
														"src": "5228:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5239:4:17",
														"nodeType": "YulTypedName",
														"src": "5239:4:17",
														"type": ""
													}
												],
												"src": "5146:222:17"
											},
											{
												"body": {
													"nativeSrc": "5457:391:17",
													"nodeType": "YulBlock",
													"src": "5457:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5503:83:17",
																"nodeType": "YulBlock",
																"src": "5503:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5505:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "5505:77:17"
																			},
																			"nativeSrc": "5505:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5505:79:17"
																		},
																		"nativeSrc": "5505:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5505:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5478:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5478:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5487:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5487:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5474:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5474:3:17"
																		},
																		"nativeSrc": "5474:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5474:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5499:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5499:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5470:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5470:3:17"
																},
																"nativeSrc": "5470:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5470:32:17"
															},
															"nativeSrc": "5467:119:17",
															"nodeType": "YulIf",
															"src": "5467:119:17"
														},
														{
															"nativeSrc": "5596:117:17",
															"nodeType": "YulBlock",
															"src": "5596:117:17",
															"statements": [
																{
																	"nativeSrc": "5611:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5625:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5625:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5615:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5615:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5640:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5640:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5675:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5675:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5686:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5686:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5671:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:17"
																				},
																				"nativeSrc": "5671:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5695:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5695:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5650:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5650:20:17"
																		},
																		"nativeSrc": "5650:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5650:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5640:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5640:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5723:118:17",
															"nodeType": "YulBlock",
															"src": "5723:118:17",
															"statements": [
																{
																	"nativeSrc": "5738:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5738:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5752:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5752:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5742:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5742:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5768:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5768:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5803:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5803:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5814:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5814:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5799:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5799:3:17"
																				},
																				"nativeSrc": "5799:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5799:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5823:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5823:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5778:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5778:20:17"
																		},
																		"nativeSrc": "5778:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5778:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5768:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5768:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "5374:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5419:9:17",
														"nodeType": "YulTypedName",
														"src": "5419:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5430:7:17",
														"nodeType": "YulTypedName",
														"src": "5430:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5442:6:17",
														"nodeType": "YulTypedName",
														"src": "5442:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5450:6:17",
														"nodeType": "YulTypedName",
														"src": "5450:6:17",
														"type": ""
													}
												],
												"src": "5374:474:17"
											},
											{
												"body": {
													"nativeSrc": "5886:28:17",
													"nodeType": "YulBlock",
													"src": "5886:28:17",
													"statements": [
														{
															"nativeSrc": "5896:12:17",
															"nodeType": "YulAssignment",
															"src": "5896:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "5903:5:17",
																"nodeType": "YulIdentifier",
																"src": "5903:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5896:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5854:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5872:5:17",
														"nodeType": "YulTypedName",
														"src": "5872:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5882:3:17",
														"nodeType": "YulTypedName",
														"src": "5882:3:17",
														"type": ""
													}
												],
												"src": "5854:60:17"
											},
											{
												"body": {
													"nativeSrc": "5980:82:17",
													"nodeType": "YulBlock",
													"src": "5980:82:17",
													"statements": [
														{
															"nativeSrc": "5990:66:17",
															"nodeType": "YulAssignment",
															"src": "5990:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6048:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "6048:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6030:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "6030:17:17"
																				},
																				"nativeSrc": "6030:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6030:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6021:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "6021:8:17"
																		},
																		"nativeSrc": "6021:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6021:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6003:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "6003:17:17"
																},
																"nativeSrc": "6003:53:17",
																"nodeType": "YulFunctionCall",
																"src": "6003:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5990:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "5990:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5920:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5960:5:17",
														"nodeType": "YulTypedName",
														"src": "5960:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5970:9:17",
														"nodeType": "YulTypedName",
														"src": "5970:9:17",
														"type": ""
													}
												],
												"src": "5920:142:17"
											},
											{
												"body": {
													"nativeSrc": "6128:66:17",
													"nodeType": "YulBlock",
													"src": "6128:66:17",
													"statements": [
														{
															"nativeSrc": "6138:50:17",
															"nodeType": "YulAssignment",
															"src": "6138:50:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6182:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "6182:5:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6151:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "6151:30:17"
																},
																"nativeSrc": "6151:37:17",
																"nodeType": "YulFunctionCall",
																"src": "6151:37:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6138:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "6138:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6068:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6108:5:17",
														"nodeType": "YulTypedName",
														"src": "6108:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6118:9:17",
														"nodeType": "YulTypedName",
														"src": "6118:9:17",
														"type": ""
													}
												],
												"src": "6068:126:17"
											},
											{
												"body": {
													"nativeSrc": "6285:66:17",
													"nodeType": "YulBlock",
													"src": "6285:66:17",
													"statements": [
														{
															"nativeSrc": "6295:50:17",
															"nodeType": "YulAssignment",
															"src": "6295:50:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6339:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "6339:5:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6308:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "6308:30:17"
																},
																"nativeSrc": "6308:37:17",
																"nodeType": "YulFunctionCall",
																"src": "6308:37:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6295:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "6295:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20Upgradeable_$876_to_t_address",
												"nativeSrc": "6200:151:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6265:5:17",
														"nodeType": "YulTypedName",
														"src": "6265:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6275:9:17",
														"nodeType": "YulTypedName",
														"src": "6275:9:17",
														"type": ""
													}
												],
												"src": "6200:151:17"
											},
											{
												"body": {
													"nativeSrc": "6447:91:17",
													"nodeType": "YulBlock",
													"src": "6447:91:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6464:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6464:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6525:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6525:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20Upgradeable_$876_to_t_address",
																			"nativeSrc": "6469:55:17",
																			"nodeType": "YulIdentifier",
																			"src": "6469:55:17"
																		},
																		"nativeSrc": "6469:62:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6469:62:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6457:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6457:6:17"
																},
																"nativeSrc": "6457:75:17",
																"nodeType": "YulFunctionCall",
																"src": "6457:75:17"
															},
															"nativeSrc": "6457:75:17",
															"nodeType": "YulExpressionStatement",
															"src": "6457:75:17"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20Upgradeable_$876_to_t_address_fromStack",
												"nativeSrc": "6357:181:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6435:5:17",
														"nodeType": "YulTypedName",
														"src": "6435:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6442:3:17",
														"nodeType": "YulTypedName",
														"src": "6442:3:17",
														"type": ""
													}
												],
												"src": "6357:181:17"
											},
											{
												"body": {
													"nativeSrc": "6667:149:17",
													"nodeType": "YulBlock",
													"src": "6667:149:17",
													"statements": [
														{
															"nativeSrc": "6677:26:17",
															"nodeType": "YulAssignment",
															"src": "6677:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6689:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6689:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6700:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6700:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6685:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6685:3:17"
																},
																"nativeSrc": "6685:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6685:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6677:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6677:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6782:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6782:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6795:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6795:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6806:1:17",
																				"nodeType": "YulLiteral",
																				"src": "6806:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6791:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6791:3:17"
																		},
																		"nativeSrc": "6791:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6791:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20Upgradeable_$876_to_t_address_fromStack",
																	"nativeSrc": "6713:68:17",
																	"nodeType": "YulIdentifier",
																	"src": "6713:68:17"
																},
																"nativeSrc": "6713:96:17",
																"nodeType": "YulFunctionCall",
																"src": "6713:96:17"
															},
															"nativeSrc": "6713:96:17",
															"nodeType": "YulExpressionStatement",
															"src": "6713:96:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$876__to_t_address__fromStack_reversed",
												"nativeSrc": "6544:272:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6639:9:17",
														"nodeType": "YulTypedName",
														"src": "6639:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6651:6:17",
														"nodeType": "YulTypedName",
														"src": "6651:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6662:4:17",
														"nodeType": "YulTypedName",
														"src": "6662:4:17",
														"type": ""
													}
												],
												"src": "6544:272:17"
											},
											{
												"body": {
													"nativeSrc": "6905:391:17",
													"nodeType": "YulBlock",
													"src": "6905:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6951:83:17",
																"nodeType": "YulBlock",
																"src": "6951:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6953:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "6953:77:17"
																			},
																			"nativeSrc": "6953:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6953:79:17"
																		},
																		"nativeSrc": "6953:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6953:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6926:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "6926:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6935:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6935:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6922:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6922:3:17"
																		},
																		"nativeSrc": "6922:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6922:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6947:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6918:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:17"
																},
																"nativeSrc": "6918:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6918:32:17"
															},
															"nativeSrc": "6915:119:17",
															"nodeType": "YulIf",
															"src": "6915:119:17"
														},
														{
															"nativeSrc": "7044:117:17",
															"nodeType": "YulBlock",
															"src": "7044:117:17",
															"statements": [
																{
																	"nativeSrc": "7059:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7059:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7073:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7073:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7063:6:17",
																			"nodeType": "YulTypedName",
																			"src": "7063:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7088:63:17",
																	"nodeType": "YulAssignment",
																	"src": "7088:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7123:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "7123:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7134:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "7134:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7119:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7119:3:17"
																				},
																				"nativeSrc": "7119:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7119:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7143:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7143:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7098:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "7098:20:17"
																		},
																		"nativeSrc": "7098:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7098:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7088:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "7088:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7171:118:17",
															"nodeType": "YulBlock",
															"src": "7171:118:17",
															"statements": [
																{
																	"nativeSrc": "7186:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7186:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7200:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7200:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7190:6:17",
																			"nodeType": "YulTypedName",
																			"src": "7190:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7216:63:17",
																	"nodeType": "YulAssignment",
																	"src": "7216:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7251:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "7251:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7262:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "7262:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7247:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7247:3:17"
																				},
																				"nativeSrc": "7247:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7247:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7271:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7271:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7226:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "7226:20:17"
																		},
																		"nativeSrc": "7226:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7226:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7216:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "7216:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6822:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6867:9:17",
														"nodeType": "YulTypedName",
														"src": "6867:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6878:7:17",
														"nodeType": "YulTypedName",
														"src": "6878:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6890:6:17",
														"nodeType": "YulTypedName",
														"src": "6890:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6898:6:17",
														"nodeType": "YulTypedName",
														"src": "6898:6:17",
														"type": ""
													}
												],
												"src": "6822:474:17"
											},
											{
												"body": {
													"nativeSrc": "7391:28:17",
													"nodeType": "YulBlock",
													"src": "7391:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7408:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7408:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7411:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7411:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7401:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7401:6:17"
																},
																"nativeSrc": "7401:12:17",
																"nodeType": "YulFunctionCall",
																"src": "7401:12:17"
															},
															"nativeSrc": "7401:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "7401:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7302:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "7302:117:17"
											},
											{
												"body": {
													"nativeSrc": "7514:28:17",
													"nodeType": "YulBlock",
													"src": "7514:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7531:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7531:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7534:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7534:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7524:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7524:6:17"
																},
																"nativeSrc": "7524:12:17",
																"nodeType": "YulFunctionCall",
																"src": "7524:12:17"
															},
															"nativeSrc": "7524:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "7524:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7425:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "7425:117:17"
											},
											{
												"body": {
													"nativeSrc": "7596:54:17",
													"nodeType": "YulBlock",
													"src": "7596:54:17",
													"statements": [
														{
															"nativeSrc": "7606:38:17",
															"nodeType": "YulAssignment",
															"src": "7606:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7624:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "7624:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7631:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7631:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7620:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7620:3:17"
																		},
																		"nativeSrc": "7620:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7620:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7640:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7640:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "7636:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7636:3:17"
																		},
																		"nativeSrc": "7636:7:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7636:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7616:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7616:3:17"
																},
																"nativeSrc": "7616:28:17",
																"nodeType": "YulFunctionCall",
																"src": "7616:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7606:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7606:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "7548:102:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7579:5:17",
														"nodeType": "YulTypedName",
														"src": "7579:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7589:6:17",
														"nodeType": "YulTypedName",
														"src": "7589:6:17",
														"type": ""
													}
												],
												"src": "7548:102:17"
											},
											{
												"body": {
													"nativeSrc": "7684:152:17",
													"nodeType": "YulBlock",
													"src": "7684:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7701:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7701:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7704:77:17",
																		"nodeType": "YulLiteral",
																		"src": "7704:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7694:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7694:6:17"
																},
																"nativeSrc": "7694:88:17",
																"nodeType": "YulFunctionCall",
																"src": "7694:88:17"
															},
															"nativeSrc": "7694:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "7694:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7798:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7798:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7801:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7801:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7791:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7791:6:17"
																},
																"nativeSrc": "7791:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7791:15:17"
															},
															"nativeSrc": "7791:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "7791:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7822:1:17",
																		"nodeType": "YulLiteral",
																		"src": "7822:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7825:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7825:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7815:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7815:6:17"
																},
																"nativeSrc": "7815:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7815:15:17"
															},
															"nativeSrc": "7815:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "7815:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7656:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "7656:180:17"
											},
											{
												"body": {
													"nativeSrc": "7885:238:17",
													"nodeType": "YulBlock",
													"src": "7885:238:17",
													"statements": [
														{
															"nativeSrc": "7895:58:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7895:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7917:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7947:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "7947:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7925:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "7925:21:17"
																		},
																		"nativeSrc": "7925:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7925:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7913:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7913:3:17"
																},
																"nativeSrc": "7913:40:17",
																"nodeType": "YulFunctionCall",
																"src": "7913:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7899:10:17",
																	"nodeType": "YulTypedName",
																	"src": "7899:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8064:22:17",
																"nodeType": "YulBlock",
																"src": "8064:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8066:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "8066:16:17"
																			},
																			"nativeSrc": "8066:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8066:18:17"
																		},
																		"nativeSrc": "8066:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8066:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8007:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "8007:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8019:18:17",
																				"nodeType": "YulLiteral",
																				"src": "8019:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8004:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "8004:2:17"
																		},
																		"nativeSrc": "8004:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8004:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8043:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "8043:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8055:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8055:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8040:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "8040:2:17"
																		},
																		"nativeSrc": "8040:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8040:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8001:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8001:2:17"
																},
																"nativeSrc": "8001:62:17",
																"nodeType": "YulFunctionCall",
																"src": "8001:62:17"
															},
															"nativeSrc": "7998:88:17",
															"nodeType": "YulIf",
															"src": "7998:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8102:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8102:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8106:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "8106:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8095:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8095:6:17"
																},
																"nativeSrc": "8095:22:17",
																"nodeType": "YulFunctionCall",
																"src": "8095:22:17"
															},
															"nativeSrc": "8095:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "8095:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7842:281:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7871:6:17",
														"nodeType": "YulTypedName",
														"src": "7871:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7879:4:17",
														"nodeType": "YulTypedName",
														"src": "7879:4:17",
														"type": ""
													}
												],
												"src": "7842:281:17"
											},
											{
												"body": {
													"nativeSrc": "8170:88:17",
													"nodeType": "YulBlock",
													"src": "8170:88:17",
													"statements": [
														{
															"nativeSrc": "8180:30:17",
															"nodeType": "YulAssignment",
															"src": "8180:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8190:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "8190:18:17"
																},
																"nativeSrc": "8190:20:17",
																"nodeType": "YulFunctionCall",
																"src": "8190:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8180:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8180:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8239:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8239:6:17"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8247:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "8247:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8219:19:17",
																	"nodeType": "YulIdentifier",
																	"src": "8219:19:17"
																},
																"nativeSrc": "8219:33:17",
																"nodeType": "YulFunctionCall",
																"src": "8219:33:17"
															},
															"nativeSrc": "8219:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "8219:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8129:129:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8154:4:17",
														"nodeType": "YulTypedName",
														"src": "8154:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8163:6:17",
														"nodeType": "YulTypedName",
														"src": "8163:6:17",
														"type": ""
													}
												],
												"src": "8129:129:17"
											},
											{
												"body": {
													"nativeSrc": "8330:241:17",
													"nodeType": "YulBlock",
													"src": "8330:241:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8435:22:17",
																"nodeType": "YulBlock",
																"src": "8435:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8437:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "8437:16:17"
																			},
																			"nativeSrc": "8437:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8437:18:17"
																		},
																		"nativeSrc": "8437:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8437:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8407:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8407:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8415:18:17",
																		"nodeType": "YulLiteral",
																		"src": "8415:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8404:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8404:2:17"
																},
																"nativeSrc": "8404:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8404:30:17"
															},
															"nativeSrc": "8401:56:17",
															"nodeType": "YulIf",
															"src": "8401:56:17"
														},
														{
															"nativeSrc": "8467:37:17",
															"nodeType": "YulAssignment",
															"src": "8467:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8497:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8497:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8475:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "8475:21:17"
																},
																"nativeSrc": "8475:29:17",
																"nodeType": "YulFunctionCall",
																"src": "8475:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8467:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8467:4:17"
																}
															]
														},
														{
															"nativeSrc": "8541:23:17",
															"nodeType": "YulAssignment",
															"src": "8541:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8553:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "8553:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8559:4:17",
																		"nodeType": "YulLiteral",
																		"src": "8559:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8549:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8549:3:17"
																},
																"nativeSrc": "8549:15:17",
																"nodeType": "YulFunctionCall",
																"src": "8549:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8541:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8541:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8264:307:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8314:6:17",
														"nodeType": "YulTypedName",
														"src": "8314:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8325:4:17",
														"nodeType": "YulTypedName",
														"src": "8325:4:17",
														"type": ""
													}
												],
												"src": "8264:307:17"
											},
											{
												"body": {
													"nativeSrc": "8641:84:17",
													"nodeType": "YulBlock",
													"src": "8641:84:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8665:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8665:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8670:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8670:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8675:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8675:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8652:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "8652:12:17"
																},
																"nativeSrc": "8652:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8652:30:17"
															},
															"nativeSrc": "8652:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "8652:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8702:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "8702:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8707:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8707:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8698:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:17"
																		},
																		"nativeSrc": "8698:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8716:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8716:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8691:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:17"
																},
																"nativeSrc": "8691:27:17",
																"nodeType": "YulFunctionCall",
																"src": "8691:27:17"
															},
															"nativeSrc": "8691:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "8691:27:17"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8577:148:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8623:3:17",
														"nodeType": "YulTypedName",
														"src": "8623:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8628:3:17",
														"nodeType": "YulTypedName",
														"src": "8628:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8633:6:17",
														"nodeType": "YulTypedName",
														"src": "8633:6:17",
														"type": ""
													}
												],
												"src": "8577:148:17"
											},
											{
												"body": {
													"nativeSrc": "8814:340:17",
													"nodeType": "YulBlock",
													"src": "8814:340:17",
													"statements": [
														{
															"nativeSrc": "8824:74:17",
															"nodeType": "YulAssignment",
															"src": "8824:74:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8890:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8890:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8849:40:17",
																			"nodeType": "YulIdentifier",
																			"src": "8849:40:17"
																		},
																		"nativeSrc": "8849:48:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8849:48:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8833:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "8833:15:17"
																},
																"nativeSrc": "8833:65:17",
																"nodeType": "YulFunctionCall",
																"src": "8833:65:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8824:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "8824:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8914:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "8914:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8921:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8921:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8907:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8907:6:17"
																},
																"nativeSrc": "8907:21:17",
																"nodeType": "YulFunctionCall",
																"src": "8907:21:17"
															},
															"nativeSrc": "8907:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "8907:21:17"
														},
														{
															"nativeSrc": "8937:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8937:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8952:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "8952:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8959:4:17",
																		"nodeType": "YulLiteral",
																		"src": "8959:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8948:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8948:3:17"
																},
																"nativeSrc": "8948:16:17",
																"nodeType": "YulFunctionCall",
																"src": "8948:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8941:3:17",
																	"nodeType": "YulTypedName",
																	"src": "8941:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9002:83:17",
																"nodeType": "YulBlock",
																"src": "9002:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9004:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9004:77:17"
																			},
																			"nativeSrc": "9004:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9004:79:17"
																		},
																		"nativeSrc": "9004:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9004:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8983:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "8983:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8988:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8988:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8979:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8979:3:17"
																		},
																		"nativeSrc": "8979:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8979:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8997:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "8997:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8976:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8976:2:17"
																},
																"nativeSrc": "8976:25:17",
																"nodeType": "YulFunctionCall",
																"src": "8976:25:17"
															},
															"nativeSrc": "8973:112:17",
															"nodeType": "YulIf",
															"src": "8973:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9131:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "9131:3:17"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9136:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "9136:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9141:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9141:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9094:36:17",
																	"nodeType": "YulIdentifier",
																	"src": "9094:36:17"
																},
																"nativeSrc": "9094:54:17",
																"nodeType": "YulFunctionCall",
																"src": "9094:54:17"
															},
															"nativeSrc": "9094:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "9094:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8731:423:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8787:3:17",
														"nodeType": "YulTypedName",
														"src": "8787:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8792:6:17",
														"nodeType": "YulTypedName",
														"src": "8792:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8800:3:17",
														"nodeType": "YulTypedName",
														"src": "8800:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8808:5:17",
														"nodeType": "YulTypedName",
														"src": "8808:5:17",
														"type": ""
													}
												],
												"src": "8731:423:17"
											},
											{
												"body": {
													"nativeSrc": "9234:277:17",
													"nodeType": "YulBlock",
													"src": "9234:277:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9283:83:17",
																"nodeType": "YulBlock",
																"src": "9283:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9285:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9285:77:17"
																			},
																			"nativeSrc": "9285:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9285:79:17"
																		},
																		"nativeSrc": "9285:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9285:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9262:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9262:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9270:4:17",
																						"nodeType": "YulLiteral",
																						"src": "9270:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9258:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9258:3:17"
																				},
																				"nativeSrc": "9258:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9258:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9277:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "9277:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9254:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9254:3:17"
																		},
																		"nativeSrc": "9254:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9254:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9247:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9247:6:17"
																},
																"nativeSrc": "9247:35:17",
																"nodeType": "YulFunctionCall",
																"src": "9247:35:17"
															},
															"nativeSrc": "9244:122:17",
															"nodeType": "YulIf",
															"src": "9244:122:17"
														},
														{
															"nativeSrc": "9375:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "9375:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9402:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9402:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9389:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "9389:12:17"
																},
																"nativeSrc": "9389:20:17",
																"nodeType": "YulFunctionCall",
																"src": "9389:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9379:6:17",
																	"nodeType": "YulTypedName",
																	"src": "9379:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9418:87:17",
															"nodeType": "YulAssignment",
															"src": "9418:87:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9478:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9478:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9486:4:17",
																				"nodeType": "YulLiteral",
																				"src": "9486:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9474:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9474:3:17"
																		},
																		"nativeSrc": "9474:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9474:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9493:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9493:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9501:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "9501:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9427:46:17",
																	"nodeType": "YulIdentifier",
																	"src": "9427:46:17"
																},
																"nativeSrc": "9427:78:17",
																"nodeType": "YulFunctionCall",
																"src": "9427:78:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9418:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "9418:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9173:338:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9212:6:17",
														"nodeType": "YulTypedName",
														"src": "9212:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9220:3:17",
														"nodeType": "YulTypedName",
														"src": "9220:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9228:5:17",
														"nodeType": "YulTypedName",
														"src": "9228:5:17",
														"type": ""
													}
												],
												"src": "9173:338:17"
											},
											{
												"body": {
													"nativeSrc": "9609:560:17",
													"nodeType": "YulBlock",
													"src": "9609:560:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9655:83:17",
																"nodeType": "YulBlock",
																"src": "9655:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9657:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9657:77:17"
																			},
																			"nativeSrc": "9657:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9657:79:17"
																		},
																		"nativeSrc": "9657:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9657:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9630:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9630:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9639:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9639:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9626:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9626:3:17"
																		},
																		"nativeSrc": "9626:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9626:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9651:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9651:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9622:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9622:3:17"
																},
																"nativeSrc": "9622:32:17",
																"nodeType": "YulFunctionCall",
																"src": "9622:32:17"
															},
															"nativeSrc": "9619:119:17",
															"nodeType": "YulIf",
															"src": "9619:119:17"
														},
														{
															"nativeSrc": "9748:117:17",
															"nodeType": "YulBlock",
															"src": "9748:117:17",
															"statements": [
																{
																	"nativeSrc": "9763:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9763:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9777:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9777:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9767:6:17",
																			"nodeType": "YulTypedName",
																			"src": "9767:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9792:63:17",
																	"nodeType": "YulAssignment",
																	"src": "9792:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9827:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9827:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9838:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9838:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9823:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9823:3:17"
																				},
																				"nativeSrc": "9823:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9823:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9847:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9847:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9802:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "9802:20:17"
																		},
																		"nativeSrc": "9802:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9802:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9792:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "9792:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9875:287:17",
															"nodeType": "YulBlock",
															"src": "9875:287:17",
															"statements": [
																{
																	"nativeSrc": "9890:46:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9890:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9921:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9921:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9932:2:17",
																						"nodeType": "YulLiteral",
																						"src": "9932:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9917:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9917:3:17"
																				},
																				"nativeSrc": "9917:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9917:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9904:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "9904:12:17"
																		},
																		"nativeSrc": "9904:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9904:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9894:6:17",
																			"nodeType": "YulTypedName",
																			"src": "9894:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9983:83:17",
																		"nodeType": "YulBlock",
																		"src": "9983:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9985:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "9985:77:17"
																					},
																					"nativeSrc": "9985:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "9985:79:17"
																				},
																				"nativeSrc": "9985:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "9985:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9955:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9955:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9963:18:17",
																				"nodeType": "YulLiteral",
																				"src": "9963:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9952:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "9952:2:17"
																		},
																		"nativeSrc": "9952:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9952:30:17"
																	},
																	"nativeSrc": "9949:117:17",
																	"nodeType": "YulIf",
																	"src": "9949:117:17"
																},
																{
																	"nativeSrc": "10080:72:17",
																	"nodeType": "YulAssignment",
																	"src": "10080:72:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10124:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "10124:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10135:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10135:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10120:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10120:3:17"
																				},
																				"nativeSrc": "10120:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10120:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10144:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "10144:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10090:29:17",
																			"nodeType": "YulIdentifier",
																			"src": "10090:29:17"
																		},
																		"nativeSrc": "10090:62:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10090:62:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10080:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "10080:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "9517:652:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9571:9:17",
														"nodeType": "YulTypedName",
														"src": "9571:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9582:7:17",
														"nodeType": "YulTypedName",
														"src": "9582:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9594:6:17",
														"nodeType": "YulTypedName",
														"src": "9594:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9602:6:17",
														"nodeType": "YulTypedName",
														"src": "9602:6:17",
														"type": ""
													}
												],
												"src": "9517:652:17"
											},
											{
												"body": {
													"nativeSrc": "10301:206:17",
													"nodeType": "YulBlock",
													"src": "10301:206:17",
													"statements": [
														{
															"nativeSrc": "10311:26:17",
															"nodeType": "YulAssignment",
															"src": "10311:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10323:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10323:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10334:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10334:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10319:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10319:3:17"
																},
																"nativeSrc": "10319:18:17",
																"nodeType": "YulFunctionCall",
																"src": "10319:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10311:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10311:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10391:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10391:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10404:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10404:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10415:1:17",
																				"nodeType": "YulLiteral",
																				"src": "10415:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10400:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10400:3:17"
																		},
																		"nativeSrc": "10400:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10400:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10347:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "10347:43:17"
																},
																"nativeSrc": "10347:71:17",
																"nodeType": "YulFunctionCall",
																"src": "10347:71:17"
															},
															"nativeSrc": "10347:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "10347:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10472:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10472:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10485:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10485:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10496:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10496:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10481:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10481:3:17"
																		},
																		"nativeSrc": "10481:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10481:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10428:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "10428:43:17"
																},
																"nativeSrc": "10428:72:17",
																"nodeType": "YulFunctionCall",
																"src": "10428:72:17"
															},
															"nativeSrc": "10428:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "10428:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10175:332:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10265:9:17",
														"nodeType": "YulTypedName",
														"src": "10265:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10277:6:17",
														"nodeType": "YulTypedName",
														"src": "10277:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10285:6:17",
														"nodeType": "YulTypedName",
														"src": "10285:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10296:4:17",
														"nodeType": "YulTypedName",
														"src": "10296:4:17",
														"type": ""
													}
												],
												"src": "10175:332:17"
											},
											{
												"body": {
													"nativeSrc": "10572:40:17",
													"nodeType": "YulBlock",
													"src": "10572:40:17",
													"statements": [
														{
															"nativeSrc": "10583:22:17",
															"nodeType": "YulAssignment",
															"src": "10583:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10599:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "10599:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10593:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "10593:5:17"
																},
																"nativeSrc": "10593:12:17",
																"nodeType": "YulFunctionCall",
																"src": "10593:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10583:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10583:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "10513:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10555:5:17",
														"nodeType": "YulTypedName",
														"src": "10555:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10565:6:17",
														"nodeType": "YulTypedName",
														"src": "10565:6:17",
														"type": ""
													}
												],
												"src": "10513:99:17"
											},
											{
												"body": {
													"nativeSrc": "10714:73:17",
													"nodeType": "YulBlock",
													"src": "10714:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10731:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10731:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10736:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10736:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10724:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10724:6:17"
																},
																"nativeSrc": "10724:19:17",
																"nodeType": "YulFunctionCall",
																"src": "10724:19:17"
															},
															"nativeSrc": "10724:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "10724:19:17"
														},
														{
															"nativeSrc": "10752:29:17",
															"nodeType": "YulAssignment",
															"src": "10752:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10771:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10771:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10776:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10776:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10767:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10767:3:17"
																},
																"nativeSrc": "10767:14:17",
																"nodeType": "YulFunctionCall",
																"src": "10767:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10752:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "10752:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10618:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10686:3:17",
														"nodeType": "YulTypedName",
														"src": "10686:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10691:6:17",
														"nodeType": "YulTypedName",
														"src": "10691:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10702:11:17",
														"nodeType": "YulTypedName",
														"src": "10702:11:17",
														"type": ""
													}
												],
												"src": "10618:169:17"
											},
											{
												"body": {
													"nativeSrc": "10855:77:17",
													"nodeType": "YulBlock",
													"src": "10855:77:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10872:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10872:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10877:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10877:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10882:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10882:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "10866:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "10866:5:17"
																},
																"nativeSrc": "10866:23:17",
																"nodeType": "YulFunctionCall",
																"src": "10866:23:17"
															},
															"nativeSrc": "10866:23:17",
															"nodeType": "YulExpressionStatement",
															"src": "10866:23:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10909:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "10909:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10914:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10914:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10905:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10905:3:17"
																		},
																		"nativeSrc": "10905:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10905:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10923:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10923:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10898:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10898:6:17"
																},
																"nativeSrc": "10898:27:17",
																"nodeType": "YulFunctionCall",
																"src": "10898:27:17"
															},
															"nativeSrc": "10898:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "10898:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10793:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10837:3:17",
														"nodeType": "YulTypedName",
														"src": "10837:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10842:3:17",
														"nodeType": "YulTypedName",
														"src": "10842:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10847:6:17",
														"nodeType": "YulTypedName",
														"src": "10847:6:17",
														"type": ""
													}
												],
												"src": "10793:139:17"
											},
											{
												"body": {
													"nativeSrc": "11030:285:17",
													"nodeType": "YulBlock",
													"src": "11030:285:17",
													"statements": [
														{
															"nativeSrc": "11040:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11040:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11087:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "11087:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "11054:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "11054:32:17"
																},
																"nativeSrc": "11054:39:17",
																"nodeType": "YulFunctionCall",
																"src": "11054:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11044:6:17",
																	"nodeType": "YulTypedName",
																	"src": "11044:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11102:78:17",
															"nodeType": "YulAssignment",
															"src": "11102:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11168:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11168:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11173:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11173:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11109:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "11109:58:17"
																},
																"nativeSrc": "11109:71:17",
																"nodeType": "YulFunctionCall",
																"src": "11109:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11102:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11102:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11228:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "11228:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11235:4:17",
																				"nodeType": "YulLiteral",
																				"src": "11235:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11224:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11224:3:17"
																		},
																		"nativeSrc": "11224:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11224:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11242:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11242:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11247:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11247:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11189:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "11189:34:17"
																},
																"nativeSrc": "11189:65:17",
																"nodeType": "YulFunctionCall",
																"src": "11189:65:17"
															},
															"nativeSrc": "11189:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "11189:65:17"
														},
														{
															"nativeSrc": "11263:46:17",
															"nodeType": "YulAssignment",
															"src": "11263:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11274:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11274:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11301:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11301:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "11279:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "11279:21:17"
																		},
																		"nativeSrc": "11279:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11279:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11270:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11270:3:17"
																},
																"nativeSrc": "11270:39:17",
																"nodeType": "YulFunctionCall",
																"src": "11270:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11263:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11263:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10938:377:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11011:5:17",
														"nodeType": "YulTypedName",
														"src": "11011:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11018:3:17",
														"nodeType": "YulTypedName",
														"src": "11018:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11026:3:17",
														"nodeType": "YulTypedName",
														"src": "11026:3:17",
														"type": ""
													}
												],
												"src": "10938:377:17"
											},
											{
												"body": {
													"nativeSrc": "11439:195:17",
													"nodeType": "YulBlock",
													"src": "11439:195:17",
													"statements": [
														{
															"nativeSrc": "11449:26:17",
															"nodeType": "YulAssignment",
															"src": "11449:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11461:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11461:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11472:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11472:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11457:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11457:3:17"
																},
																"nativeSrc": "11457:18:17",
																"nodeType": "YulFunctionCall",
																"src": "11457:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11449:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11449:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11496:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11496:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11507:1:17",
																				"nodeType": "YulLiteral",
																				"src": "11507:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11492:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11492:3:17"
																		},
																		"nativeSrc": "11492:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11492:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11515:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "11515:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11521:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11521:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11511:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11511:3:17"
																		},
																		"nativeSrc": "11511:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11511:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11485:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11485:6:17"
																},
																"nativeSrc": "11485:47:17",
																"nodeType": "YulFunctionCall",
																"src": "11485:47:17"
															},
															"nativeSrc": "11485:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "11485:47:17"
														},
														{
															"nativeSrc": "11541:86:17",
															"nodeType": "YulAssignment",
															"src": "11541:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11613:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11613:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11622:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "11622:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11549:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "11549:63:17"
																},
																"nativeSrc": "11549:78:17",
																"nodeType": "YulFunctionCall",
																"src": "11549:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11541:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11541:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11321:313:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11411:9:17",
														"nodeType": "YulTypedName",
														"src": "11411:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11423:6:17",
														"nodeType": "YulTypedName",
														"src": "11423:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11434:4:17",
														"nodeType": "YulTypedName",
														"src": "11434:4:17",
														"type": ""
													}
												],
												"src": "11321:313:17"
											},
											{
												"body": {
													"nativeSrc": "11740:519:17",
													"nodeType": "YulBlock",
													"src": "11740:519:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "11786:83:17",
																"nodeType": "YulBlock",
																"src": "11786:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11788:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "11788:77:17"
																			},
																			"nativeSrc": "11788:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11788:79:17"
																		},
																		"nativeSrc": "11788:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11788:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11761:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11761:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11770:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11770:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11757:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11757:3:17"
																		},
																		"nativeSrc": "11757:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11757:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11782:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11782:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11753:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11753:3:17"
																},
																"nativeSrc": "11753:32:17",
																"nodeType": "YulFunctionCall",
																"src": "11753:32:17"
															},
															"nativeSrc": "11750:119:17",
															"nodeType": "YulIf",
															"src": "11750:119:17"
														},
														{
															"nativeSrc": "11879:117:17",
															"nodeType": "YulBlock",
															"src": "11879:117:17",
															"statements": [
																{
																	"nativeSrc": "11894:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11894:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11908:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11908:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11898:6:17",
																			"nodeType": "YulTypedName",
																			"src": "11898:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11923:63:17",
																	"nodeType": "YulAssignment",
																	"src": "11923:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11958:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11958:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11969:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11969:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11954:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11954:3:17"
																				},
																				"nativeSrc": "11954:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11954:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11978:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11978:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11933:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "11933:20:17"
																		},
																		"nativeSrc": "11933:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11933:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11923:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11923:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12006:118:17",
															"nodeType": "YulBlock",
															"src": "12006:118:17",
															"statements": [
																{
																	"nativeSrc": "12021:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12021:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12035:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12035:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12025:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12025:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12051:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12051:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12086:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12086:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12097:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12097:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12082:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12082:3:17"
																				},
																				"nativeSrc": "12082:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12082:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12106:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12106:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12061:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12061:20:17"
																		},
																		"nativeSrc": "12061:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12061:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12051:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12051:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12134:118:17",
															"nodeType": "YulBlock",
															"src": "12134:118:17",
															"statements": [
																{
																	"nativeSrc": "12149:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12149:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12163:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12163:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12153:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12153:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12179:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12179:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12214:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12214:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12225:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12225:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12210:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12210:3:17"
																				},
																				"nativeSrc": "12210:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12210:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12234:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12234:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12189:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12189:20:17"
																		},
																		"nativeSrc": "12189:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12189:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12179:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12179:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "11640:619:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11694:9:17",
														"nodeType": "YulTypedName",
														"src": "11694:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11705:7:17",
														"nodeType": "YulTypedName",
														"src": "11705:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11717:6:17",
														"nodeType": "YulTypedName",
														"src": "11717:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11725:6:17",
														"nodeType": "YulTypedName",
														"src": "11725:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11733:6:17",
														"nodeType": "YulTypedName",
														"src": "11733:6:17",
														"type": ""
													}
												],
												"src": "11640:619:17"
											},
											{
												"body": {
													"nativeSrc": "12416:906:17",
													"nodeType": "YulBlock",
													"src": "12416:906:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "12463:83:17",
																"nodeType": "YulBlock",
																"src": "12463:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12465:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "12465:77:17"
																			},
																			"nativeSrc": "12465:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12465:79:17"
																		},
																		"nativeSrc": "12465:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12465:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12437:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12437:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12446:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12446:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12433:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12433:3:17"
																		},
																		"nativeSrc": "12433:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12433:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12458:3:17",
																		"nodeType": "YulLiteral",
																		"src": "12458:3:17",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12429:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12429:3:17"
																},
																"nativeSrc": "12429:33:17",
																"nodeType": "YulFunctionCall",
																"src": "12429:33:17"
															},
															"nativeSrc": "12426:120:17",
															"nodeType": "YulIf",
															"src": "12426:120:17"
														},
														{
															"nativeSrc": "12556:117:17",
															"nodeType": "YulBlock",
															"src": "12556:117:17",
															"statements": [
																{
																	"nativeSrc": "12571:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12571:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12585:1:17",
																		"nodeType": "YulLiteral",
																		"src": "12585:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12575:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12575:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12600:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12600:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12635:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12635:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12646:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12646:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12631:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12631:3:17"
																				},
																				"nativeSrc": "12631:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12631:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12655:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12655:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12610:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12610:20:17"
																		},
																		"nativeSrc": "12610:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12610:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12600:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12600:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12683:118:17",
															"nodeType": "YulBlock",
															"src": "12683:118:17",
															"statements": [
																{
																	"nativeSrc": "12698:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12698:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12712:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12712:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12702:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12702:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12728:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12728:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12763:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12763:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12774:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12774:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12759:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12759:3:17"
																				},
																				"nativeSrc": "12759:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12759:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12783:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12783:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12738:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12738:20:17"
																		},
																		"nativeSrc": "12738:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12738:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12728:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12728:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12811:118:17",
															"nodeType": "YulBlock",
															"src": "12811:118:17",
															"statements": [
																{
																	"nativeSrc": "12826:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12826:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12840:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12840:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12830:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12830:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12856:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12856:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12891:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12891:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12902:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12902:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12887:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12887:3:17"
																				},
																				"nativeSrc": "12887:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12887:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12911:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12911:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12866:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12866:20:17"
																		},
																		"nativeSrc": "12866:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12866:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12856:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12856:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12939:118:17",
															"nodeType": "YulBlock",
															"src": "12939:118:17",
															"statements": [
																{
																	"nativeSrc": "12954:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12954:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12968:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12968:2:17",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12958:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12958:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12984:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12984:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13019:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "13019:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13030:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "13030:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13015:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13015:3:17"
																				},
																				"nativeSrc": "13015:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13015:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13039:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "13039:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12994:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12994:20:17"
																		},
																		"nativeSrc": "12994:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12994:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12984:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12984:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13067:119:17",
															"nodeType": "YulBlock",
															"src": "13067:119:17",
															"statements": [
																{
																	"nativeSrc": "13082:17:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13082:17:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13096:3:17",
																		"nodeType": "YulLiteral",
																		"src": "13096:3:17",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13086:6:17",
																			"nodeType": "YulTypedName",
																			"src": "13086:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13113:63:17",
																	"nodeType": "YulAssignment",
																	"src": "13113:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13148:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "13148:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13159:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "13159:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13144:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13144:3:17"
																				},
																				"nativeSrc": "13144:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13144:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13168:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "13168:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13123:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "13123:20:17"
																		},
																		"nativeSrc": "13123:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13123:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "13113:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "13113:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13196:119:17",
															"nodeType": "YulBlock",
															"src": "13196:119:17",
															"statements": [
																{
																	"nativeSrc": "13211:17:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13211:17:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13225:3:17",
																		"nodeType": "YulLiteral",
																		"src": "13225:3:17",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13215:6:17",
																			"nodeType": "YulTypedName",
																			"src": "13215:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13242:63:17",
																	"nodeType": "YulAssignment",
																	"src": "13242:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13277:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "13277:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13288:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "13288:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13273:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13273:3:17"
																				},
																				"nativeSrc": "13273:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13273:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13297:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "13297:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13252:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "13252:20:17"
																		},
																		"nativeSrc": "13252:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13252:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "13242:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "13242:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address",
												"nativeSrc": "12265:1057:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12346:9:17",
														"nodeType": "YulTypedName",
														"src": "12346:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12357:7:17",
														"nodeType": "YulTypedName",
														"src": "12357:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12369:6:17",
														"nodeType": "YulTypedName",
														"src": "12369:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12377:6:17",
														"nodeType": "YulTypedName",
														"src": "12377:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12385:6:17",
														"nodeType": "YulTypedName",
														"src": "12385:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12393:6:17",
														"nodeType": "YulTypedName",
														"src": "12393:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12401:6:17",
														"nodeType": "YulTypedName",
														"src": "12401:6:17",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12409:6:17",
														"nodeType": "YulTypedName",
														"src": "12409:6:17",
														"type": ""
													}
												],
												"src": "12265:1057:17"
											},
											{
												"body": {
													"nativeSrc": "13414:66:17",
													"nodeType": "YulBlock",
													"src": "13414:66:17",
													"statements": [
														{
															"nativeSrc": "13424:50:17",
															"nodeType": "YulAssignment",
															"src": "13424:50:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13468:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "13468:5:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "13437:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "13437:30:17"
																},
																"nativeSrc": "13437:37:17",
																"nodeType": "YulFunctionCall",
																"src": "13437:37:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13424:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "13424:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721Upgradeable_$992_to_t_address",
												"nativeSrc": "13328:152:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13394:5:17",
														"nodeType": "YulTypedName",
														"src": "13394:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13404:9:17",
														"nodeType": "YulTypedName",
														"src": "13404:9:17",
														"type": ""
													}
												],
												"src": "13328:152:17"
											},
											{
												"body": {
													"nativeSrc": "13577:92:17",
													"nodeType": "YulBlock",
													"src": "13577:92:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13594:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13594:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13656:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "13656:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721Upgradeable_$992_to_t_address",
																			"nativeSrc": "13599:56:17",
																			"nodeType": "YulIdentifier",
																			"src": "13599:56:17"
																		},
																		"nativeSrc": "13599:63:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13599:63:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13587:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13587:6:17"
																},
																"nativeSrc": "13587:76:17",
																"nodeType": "YulFunctionCall",
																"src": "13587:76:17"
															},
															"nativeSrc": "13587:76:17",
															"nodeType": "YulExpressionStatement",
															"src": "13587:76:17"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721Upgradeable_$992_to_t_address_fromStack",
												"nativeSrc": "13486:183:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13565:5:17",
														"nodeType": "YulTypedName",
														"src": "13565:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13572:3:17",
														"nodeType": "YulTypedName",
														"src": "13572:3:17",
														"type": ""
													}
												],
												"src": "13486:183:17"
											},
											{
												"body": {
													"nativeSrc": "13799:150:17",
													"nodeType": "YulBlock",
													"src": "13799:150:17",
													"statements": [
														{
															"nativeSrc": "13809:26:17",
															"nodeType": "YulAssignment",
															"src": "13809:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13821:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "13821:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13832:2:17",
																		"nodeType": "YulLiteral",
																		"src": "13832:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13817:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13817:3:17"
																},
																"nativeSrc": "13817:18:17",
																"nodeType": "YulFunctionCall",
																"src": "13817:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13809:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13809:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13915:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13915:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13928:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13928:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13939:1:17",
																				"nodeType": "YulLiteral",
																				"src": "13939:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13924:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13924:3:17"
																		},
																		"nativeSrc": "13924:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13924:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721Upgradeable_$992_to_t_address_fromStack",
																	"nativeSrc": "13845:69:17",
																	"nodeType": "YulIdentifier",
																	"src": "13845:69:17"
																},
																"nativeSrc": "13845:97:17",
																"nodeType": "YulFunctionCall",
																"src": "13845:97:17"
															},
															"nativeSrc": "13845:97:17",
															"nodeType": "YulExpressionStatement",
															"src": "13845:97:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721Upgradeable_$992__to_t_address__fromStack_reversed",
												"nativeSrc": "13675:274:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13771:9:17",
														"nodeType": "YulTypedName",
														"src": "13771:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13783:6:17",
														"nodeType": "YulTypedName",
														"src": "13783:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13794:4:17",
														"nodeType": "YulTypedName",
														"src": "13794:4:17",
														"type": ""
													}
												],
												"src": "13675:274:17"
											},
											{
												"body": {
													"nativeSrc": "14020:53:17",
													"nodeType": "YulBlock",
													"src": "14020:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14037:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14037:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14060:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "14060:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "14042:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "14042:17:17"
																		},
																		"nativeSrc": "14042:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14042:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14030:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14030:6:17"
																},
																"nativeSrc": "14030:37:17",
																"nodeType": "YulFunctionCall",
																"src": "14030:37:17"
															},
															"nativeSrc": "14030:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "14030:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "13955:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14008:5:17",
														"nodeType": "YulTypedName",
														"src": "14008:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14015:3:17",
														"nodeType": "YulTypedName",
														"src": "14015:3:17",
														"type": ""
													}
												],
												"src": "13955:118:17"
											},
											{
												"body": {
													"nativeSrc": "14233:288:17",
													"nodeType": "YulBlock",
													"src": "14233:288:17",
													"statements": [
														{
															"nativeSrc": "14243:26:17",
															"nodeType": "YulAssignment",
															"src": "14243:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14255:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "14255:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14266:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14266:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14251:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14251:3:17"
																},
																"nativeSrc": "14251:18:17",
																"nodeType": "YulFunctionCall",
																"src": "14251:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14243:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "14243:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14323:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14323:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14336:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14336:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14347:1:17",
																				"nodeType": "YulLiteral",
																				"src": "14347:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14332:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14332:3:17"
																		},
																		"nativeSrc": "14332:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14332:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14279:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "14279:43:17"
																},
																"nativeSrc": "14279:71:17",
																"nodeType": "YulFunctionCall",
																"src": "14279:71:17"
															},
															"nativeSrc": "14279:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "14279:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14404:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14404:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14417:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14417:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14428:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14428:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14413:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14413:3:17"
																		},
																		"nativeSrc": "14413:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14413:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14360:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "14360:43:17"
																},
																"nativeSrc": "14360:72:17",
																"nodeType": "YulFunctionCall",
																"src": "14360:72:17"
															},
															"nativeSrc": "14360:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "14360:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14486:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14486:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14499:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14499:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14510:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14510:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14495:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14495:3:17"
																		},
																		"nativeSrc": "14495:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14495:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14442:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "14442:43:17"
																},
																"nativeSrc": "14442:72:17",
																"nodeType": "YulFunctionCall",
																"src": "14442:72:17"
															},
															"nativeSrc": "14442:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "14442:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14079:442:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14189:9:17",
														"nodeType": "YulTypedName",
														"src": "14189:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14201:6:17",
														"nodeType": "YulTypedName",
														"src": "14201:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14209:6:17",
														"nodeType": "YulTypedName",
														"src": "14209:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14217:6:17",
														"nodeType": "YulTypedName",
														"src": "14217:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14228:4:17",
														"nodeType": "YulTypedName",
														"src": "14228:4:17",
														"type": ""
													}
												],
												"src": "14079:442:17"
											},
											{
												"body": {
													"nativeSrc": "14653:206:17",
													"nodeType": "YulBlock",
													"src": "14653:206:17",
													"statements": [
														{
															"nativeSrc": "14663:26:17",
															"nodeType": "YulAssignment",
															"src": "14663:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14675:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "14675:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14686:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14686:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14671:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14671:3:17"
																},
																"nativeSrc": "14671:18:17",
																"nodeType": "YulFunctionCall",
																"src": "14671:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14663:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "14663:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14743:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14743:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14756:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14756:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14767:1:17",
																				"nodeType": "YulLiteral",
																				"src": "14767:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14752:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14752:3:17"
																		},
																		"nativeSrc": "14752:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14752:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14699:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "14699:43:17"
																},
																"nativeSrc": "14699:71:17",
																"nodeType": "YulFunctionCall",
																"src": "14699:71:17"
															},
															"nativeSrc": "14699:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "14699:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14824:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14824:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14837:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14837:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14848:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14848:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14833:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14833:3:17"
																		},
																		"nativeSrc": "14833:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14833:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14780:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "14780:43:17"
																},
																"nativeSrc": "14780:72:17",
																"nodeType": "YulFunctionCall",
																"src": "14780:72:17"
															},
															"nativeSrc": "14780:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "14780:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14527:332:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14617:9:17",
														"nodeType": "YulTypedName",
														"src": "14617:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14629:6:17",
														"nodeType": "YulTypedName",
														"src": "14629:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14637:6:17",
														"nodeType": "YulTypedName",
														"src": "14637:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14648:4:17",
														"nodeType": "YulTypedName",
														"src": "14648:4:17",
														"type": ""
													}
												],
												"src": "14527:332:17"
											},
											{
												"body": {
													"nativeSrc": "14905:76:17",
													"nodeType": "YulBlock",
													"src": "14905:76:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "14959:16:17",
																"nodeType": "YulBlock",
																"src": "14959:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14968:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14968:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14971:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14971:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14961:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14961:6:17"
																			},
																			"nativeSrc": "14961:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14961:12:17"
																		},
																		"nativeSrc": "14961:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14961:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14928:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "14928:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14950:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "14950:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14935:14:17",
																					"nodeType": "YulIdentifier",
																					"src": "14935:14:17"
																				},
																				"nativeSrc": "14935:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14935:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14925:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "14925:2:17"
																		},
																		"nativeSrc": "14925:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14925:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14918:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14918:6:17"
																},
																"nativeSrc": "14918:40:17",
																"nodeType": "YulFunctionCall",
																"src": "14918:40:17"
															},
															"nativeSrc": "14915:60:17",
															"nodeType": "YulIf",
															"src": "14915:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14865:116:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14898:5:17",
														"nodeType": "YulTypedName",
														"src": "14898:5:17",
														"type": ""
													}
												],
												"src": "14865:116:17"
											},
											{
												"body": {
													"nativeSrc": "15047:77:17",
													"nodeType": "YulBlock",
													"src": "15047:77:17",
													"statements": [
														{
															"nativeSrc": "15057:22:17",
															"nodeType": "YulAssignment",
															"src": "15057:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15072:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "15072:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15066:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "15066:5:17"
																},
																"nativeSrc": "15066:13:17",
																"nodeType": "YulFunctionCall",
																"src": "15066:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15057:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "15057:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15112:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "15112:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "15088:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "15088:23:17"
																},
																"nativeSrc": "15088:30:17",
																"nodeType": "YulFunctionCall",
																"src": "15088:30:17"
															},
															"nativeSrc": "15088:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "15088:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14987:137:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15025:6:17",
														"nodeType": "YulTypedName",
														"src": "15025:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15033:3:17",
														"nodeType": "YulTypedName",
														"src": "15033:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15041:5:17",
														"nodeType": "YulTypedName",
														"src": "15041:5:17",
														"type": ""
													}
												],
												"src": "14987:137:17"
											},
											{
												"body": {
													"nativeSrc": "15204:271:17",
													"nodeType": "YulBlock",
													"src": "15204:271:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "15250:83:17",
																"nodeType": "YulBlock",
																"src": "15250:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15252:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "15252:77:17"
																			},
																			"nativeSrc": "15252:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15252:79:17"
																		},
																		"nativeSrc": "15252:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "15252:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15225:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "15225:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15234:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15234:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15221:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15221:3:17"
																		},
																		"nativeSrc": "15221:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15221:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15246:2:17",
																		"nodeType": "YulLiteral",
																		"src": "15246:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15217:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15217:3:17"
																},
																"nativeSrc": "15217:32:17",
																"nodeType": "YulFunctionCall",
																"src": "15217:32:17"
															},
															"nativeSrc": "15214:119:17",
															"nodeType": "YulIf",
															"src": "15214:119:17"
														},
														{
															"nativeSrc": "15343:125:17",
															"nodeType": "YulBlock",
															"src": "15343:125:17",
															"statements": [
																{
																	"nativeSrc": "15358:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15358:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15372:1:17",
																		"nodeType": "YulLiteral",
																		"src": "15372:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15362:6:17",
																			"nodeType": "YulTypedName",
																			"src": "15362:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15387:71:17",
																	"nodeType": "YulAssignment",
																	"src": "15387:71:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15430:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "15430:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15441:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "15441:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15426:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15426:3:17"
																				},
																				"nativeSrc": "15426:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15426:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15450:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "15450:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "15397:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "15397:28:17"
																		},
																		"nativeSrc": "15397:61:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15397:61:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15387:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "15387:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "15130:345:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15174:9:17",
														"nodeType": "YulTypedName",
														"src": "15174:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15185:7:17",
														"nodeType": "YulTypedName",
														"src": "15185:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15197:6:17",
														"nodeType": "YulTypedName",
														"src": "15197:6:17",
														"type": ""
													}
												],
												"src": "15130:345:17"
											},
											{
												"body": {
													"nativeSrc": "15587:117:17",
													"nodeType": "YulBlock",
													"src": "15587:117:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15609:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15609:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15617:1:17",
																				"nodeType": "YulLiteral",
																				"src": "15617:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15605:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15605:3:17"
																		},
																		"nativeSrc": "15605:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15605:14:17"
																	},
																	{
																		"hexValue": "45544820616d6f756e74206d7573742062652067726561746572207468616e20",
																		"kind": "string",
																		"nativeSrc": "15621:34:17",
																		"nodeType": "YulLiteral",
																		"src": "15621:34:17",
																		"type": "",
																		"value": "ETH amount must be greater than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15598:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15598:6:17"
																},
																"nativeSrc": "15598:58:17",
																"nodeType": "YulFunctionCall",
																"src": "15598:58:17"
															},
															"nativeSrc": "15598:58:17",
															"nodeType": "YulExpressionStatement",
															"src": "15598:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15677:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15677:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15685:2:17",
																				"nodeType": "YulLiteral",
																				"src": "15685:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15673:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15673:3:17"
																		},
																		"nativeSrc": "15673:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15673:15:17"
																	},
																	{
																		"hexValue": "7a65726f",
																		"kind": "string",
																		"nativeSrc": "15690:6:17",
																		"nodeType": "YulLiteral",
																		"src": "15690:6:17",
																		"type": "",
																		"value": "zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15666:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15666:6:17"
																},
																"nativeSrc": "15666:31:17",
																"nodeType": "YulFunctionCall",
																"src": "15666:31:17"
															},
															"nativeSrc": "15666:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "15666:31:17"
														}
													]
												},
												"name": "store_literal_in_memory_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
												"nativeSrc": "15481:223:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15579:6:17",
														"nodeType": "YulTypedName",
														"src": "15579:6:17",
														"type": ""
													}
												],
												"src": "15481:223:17"
											},
											{
												"body": {
													"nativeSrc": "15856:220:17",
													"nodeType": "YulBlock",
													"src": "15856:220:17",
													"statements": [
														{
															"nativeSrc": "15866:74:17",
															"nodeType": "YulAssignment",
															"src": "15866:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15932:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15932:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15937:2:17",
																		"nodeType": "YulLiteral",
																		"src": "15937:2:17",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15873:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "15873:58:17"
																},
																"nativeSrc": "15873:67:17",
																"nodeType": "YulFunctionCall",
																"src": "15873:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15866:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15866:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16038:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16038:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																	"nativeSrc": "15949:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "15949:88:17"
																},
																"nativeSrc": "15949:93:17",
																"nodeType": "YulFunctionCall",
																"src": "15949:93:17"
															},
															"nativeSrc": "15949:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "15949:93:17"
														},
														{
															"nativeSrc": "16051:19:17",
															"nodeType": "YulAssignment",
															"src": "16051:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16062:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16062:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16067:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16067:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16058:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16058:3:17"
																},
																"nativeSrc": "16058:12:17",
																"nodeType": "YulFunctionCall",
																"src": "16058:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16051:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16051:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15710:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15844:3:17",
														"nodeType": "YulTypedName",
														"src": "15844:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15852:3:17",
														"nodeType": "YulTypedName",
														"src": "15852:3:17",
														"type": ""
													}
												],
												"src": "15710:366:17"
											},
											{
												"body": {
													"nativeSrc": "16253:248:17",
													"nodeType": "YulBlock",
													"src": "16253:248:17",
													"statements": [
														{
															"nativeSrc": "16263:26:17",
															"nodeType": "YulAssignment",
															"src": "16263:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16275:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "16275:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16286:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16286:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16271:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16271:3:17"
																},
																"nativeSrc": "16271:18:17",
																"nodeType": "YulFunctionCall",
																"src": "16271:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16263:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16263:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16310:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16310:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16321:1:17",
																				"nodeType": "YulLiteral",
																				"src": "16321:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16306:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16306:3:17"
																		},
																		"nativeSrc": "16306:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16306:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16329:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "16329:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16335:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16335:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16325:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16325:3:17"
																		},
																		"nativeSrc": "16325:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16325:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16299:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16299:6:17"
																},
																"nativeSrc": "16299:47:17",
																"nodeType": "YulFunctionCall",
																"src": "16299:47:17"
															},
															"nativeSrc": "16299:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "16299:47:17"
														},
														{
															"nativeSrc": "16355:139:17",
															"nodeType": "YulAssignment",
															"src": "16355:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16489:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "16489:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16363:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "16363:124:17"
																},
																"nativeSrc": "16363:131:17",
																"nodeType": "YulFunctionCall",
																"src": "16363:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16355:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16355:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16082:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16233:9:17",
														"nodeType": "YulTypedName",
														"src": "16233:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16248:4:17",
														"nodeType": "YulTypedName",
														"src": "16248:4:17",
														"type": ""
													}
												],
												"src": "16082:419:17"
											},
											{
												"body": {
													"nativeSrc": "16570:80:17",
													"nodeType": "YulBlock",
													"src": "16570:80:17",
													"statements": [
														{
															"nativeSrc": "16580:22:17",
															"nodeType": "YulAssignment",
															"src": "16580:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16595:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16595:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16589:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "16589:5:17"
																},
																"nativeSrc": "16589:13:17",
																"nodeType": "YulFunctionCall",
																"src": "16589:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16580:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "16580:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16638:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "16638:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "16611:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "16611:26:17"
																},
																"nativeSrc": "16611:33:17",
																"nodeType": "YulFunctionCall",
																"src": "16611:33:17"
															},
															"nativeSrc": "16611:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "16611:33:17"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "16507:143:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16548:6:17",
														"nodeType": "YulTypedName",
														"src": "16548:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16556:3:17",
														"nodeType": "YulTypedName",
														"src": "16556:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16564:5:17",
														"nodeType": "YulTypedName",
														"src": "16564:5:17",
														"type": ""
													}
												],
												"src": "16507:143:17"
											},
											{
												"body": {
													"nativeSrc": "16733:274:17",
													"nodeType": "YulBlock",
													"src": "16733:274:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "16779:83:17",
																"nodeType": "YulBlock",
																"src": "16779:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16781:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "16781:77:17"
																			},
																			"nativeSrc": "16781:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "16781:79:17"
																		},
																		"nativeSrc": "16781:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "16781:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16754:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "16754:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16763:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16763:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16750:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16750:3:17"
																		},
																		"nativeSrc": "16750:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16750:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16775:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16775:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16746:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16746:3:17"
																},
																"nativeSrc": "16746:32:17",
																"nodeType": "YulFunctionCall",
																"src": "16746:32:17"
															},
															"nativeSrc": "16743:119:17",
															"nodeType": "YulIf",
															"src": "16743:119:17"
														},
														{
															"nativeSrc": "16872:128:17",
															"nodeType": "YulBlock",
															"src": "16872:128:17",
															"statements": [
																{
																	"nativeSrc": "16887:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16887:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16901:1:17",
																		"nodeType": "YulLiteral",
																		"src": "16901:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16891:6:17",
																			"nodeType": "YulTypedName",
																			"src": "16891:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16916:74:17",
																	"nodeType": "YulAssignment",
																	"src": "16916:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16962:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "16962:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16973:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "16973:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16958:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "16958:3:17"
																				},
																				"nativeSrc": "16958:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "16958:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16982:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "16982:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "16926:31:17",
																			"nodeType": "YulIdentifier",
																			"src": "16926:31:17"
																		},
																		"nativeSrc": "16926:64:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16926:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16916:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "16916:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "16656:351:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16703:9:17",
														"nodeType": "YulTypedName",
														"src": "16703:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16714:7:17",
														"nodeType": "YulTypedName",
														"src": "16714:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16726:6:17",
														"nodeType": "YulTypedName",
														"src": "16726:6:17",
														"type": ""
													}
												],
												"src": "16656:351:17"
											},
											{
												"body": {
													"nativeSrc": "17119:69:17",
													"nodeType": "YulBlock",
													"src": "17119:69:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17141:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17141:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17149:1:17",
																				"nodeType": "YulLiteral",
																				"src": "17149:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17137:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17137:3:17"
																		},
																		"nativeSrc": "17137:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17137:14:17"
																	},
																	{
																		"hexValue": "4e4654206e6f74206f776e656420627920636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "17153:27:17",
																		"nodeType": "YulLiteral",
																		"src": "17153:27:17",
																		"type": "",
																		"value": "NFT not owned by contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17130:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17130:6:17"
																},
																"nativeSrc": "17130:51:17",
																"nodeType": "YulFunctionCall",
																"src": "17130:51:17"
															},
															"nativeSrc": "17130:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "17130:51:17"
														}
													]
												},
												"name": "store_literal_in_memory_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a",
												"nativeSrc": "17013:175:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17111:6:17",
														"nodeType": "YulTypedName",
														"src": "17111:6:17",
														"type": ""
													}
												],
												"src": "17013:175:17"
											},
											{
												"body": {
													"nativeSrc": "17340:220:17",
													"nodeType": "YulBlock",
													"src": "17340:220:17",
													"statements": [
														{
															"nativeSrc": "17350:74:17",
															"nodeType": "YulAssignment",
															"src": "17350:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17416:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17416:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17421:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17421:2:17",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17357:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "17357:58:17"
																},
																"nativeSrc": "17357:67:17",
																"nodeType": "YulFunctionCall",
																"src": "17357:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17350:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17350:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17522:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17522:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a",
																	"nativeSrc": "17433:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "17433:88:17"
																},
																"nativeSrc": "17433:93:17",
																"nodeType": "YulFunctionCall",
																"src": "17433:93:17"
															},
															"nativeSrc": "17433:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "17433:93:17"
														},
														{
															"nativeSrc": "17535:19:17",
															"nodeType": "YulAssignment",
															"src": "17535:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17546:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "17546:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17551:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17551:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17542:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17542:3:17"
																},
																"nativeSrc": "17542:12:17",
																"nodeType": "YulFunctionCall",
																"src": "17542:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17535:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17535:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17194:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17328:3:17",
														"nodeType": "YulTypedName",
														"src": "17328:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17336:3:17",
														"nodeType": "YulTypedName",
														"src": "17336:3:17",
														"type": ""
													}
												],
												"src": "17194:366:17"
											},
											{
												"body": {
													"nativeSrc": "17737:248:17",
													"nodeType": "YulBlock",
													"src": "17737:248:17",
													"statements": [
														{
															"nativeSrc": "17747:26:17",
															"nodeType": "YulAssignment",
															"src": "17747:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17759:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "17759:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17770:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17770:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17755:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17755:3:17"
																},
																"nativeSrc": "17755:18:17",
																"nodeType": "YulFunctionCall",
																"src": "17755:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17747:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17747:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17794:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17794:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17805:1:17",
																				"nodeType": "YulLiteral",
																				"src": "17805:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17790:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17790:3:17"
																		},
																		"nativeSrc": "17790:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17790:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17813:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "17813:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17819:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17819:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17809:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17809:3:17"
																		},
																		"nativeSrc": "17809:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17809:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17783:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17783:6:17"
																},
																"nativeSrc": "17783:47:17",
																"nodeType": "YulFunctionCall",
																"src": "17783:47:17"
															},
															"nativeSrc": "17783:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "17783:47:17"
														},
														{
															"nativeSrc": "17839:139:17",
															"nodeType": "YulAssignment",
															"src": "17839:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17973:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17973:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17847:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "17847:124:17"
																},
																"nativeSrc": "17847:131:17",
																"nodeType": "YulFunctionCall",
																"src": "17847:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17839:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17839:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17566:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17717:9:17",
														"nodeType": "YulTypedName",
														"src": "17717:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17732:4:17",
														"nodeType": "YulTypedName",
														"src": "17732:4:17",
														"type": ""
													}
												],
												"src": "17566:419:17"
											},
											{
												"body": {
													"nativeSrc": "18019:152:17",
													"nodeType": "YulBlock",
													"src": "18019:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18036:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18036:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18039:77:17",
																		"nodeType": "YulLiteral",
																		"src": "18039:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18029:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18029:6:17"
																},
																"nativeSrc": "18029:88:17",
																"nodeType": "YulFunctionCall",
																"src": "18029:88:17"
															},
															"nativeSrc": "18029:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "18029:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18133:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18133:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18136:4:17",
																		"nodeType": "YulLiteral",
																		"src": "18136:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18126:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18126:6:17"
																},
																"nativeSrc": "18126:15:17",
																"nodeType": "YulFunctionCall",
																"src": "18126:15:17"
															},
															"nativeSrc": "18126:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "18126:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18157:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18157:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18160:4:17",
																		"nodeType": "YulLiteral",
																		"src": "18160:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18150:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18150:6:17"
																},
																"nativeSrc": "18150:15:17",
																"nodeType": "YulFunctionCall",
																"src": "18150:15:17"
															},
															"nativeSrc": "18150:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "18150:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17991:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "17991:180:17"
											},
											{
												"body": {
													"nativeSrc": "18222:149:17",
													"nodeType": "YulBlock",
													"src": "18222:149:17",
													"statements": [
														{
															"nativeSrc": "18232:25:17",
															"nodeType": "YulAssignment",
															"src": "18232:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18255:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "18255:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18237:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "18237:17:17"
																},
																"nativeSrc": "18237:20:17",
																"nodeType": "YulFunctionCall",
																"src": "18237:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18232:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "18232:1:17"
																}
															]
														},
														{
															"nativeSrc": "18266:25:17",
															"nodeType": "YulAssignment",
															"src": "18266:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18289:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "18289:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18271:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "18271:17:17"
																},
																"nativeSrc": "18271:20:17",
																"nodeType": "YulFunctionCall",
																"src": "18271:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18266:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "18266:1:17"
																}
															]
														},
														{
															"nativeSrc": "18300:17:17",
															"nodeType": "YulAssignment",
															"src": "18300:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18312:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "18312:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18315:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "18315:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18308:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18308:3:17"
																},
																"nativeSrc": "18308:9:17",
																"nodeType": "YulFunctionCall",
																"src": "18308:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18300:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "18300:4:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18342:22:17",
																"nodeType": "YulBlock",
																"src": "18342:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18344:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "18344:16:17"
																			},
																			"nativeSrc": "18344:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "18344:18:17"
																		},
																		"nativeSrc": "18344:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "18344:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18333:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "18333:4:17"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18339:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "18339:1:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18330:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "18330:2:17"
																},
																"nativeSrc": "18330:11:17",
																"nodeType": "YulFunctionCall",
																"src": "18330:11:17"
															},
															"nativeSrc": "18327:37:17",
															"nodeType": "YulIf",
															"src": "18327:37:17"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "18177:194:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18208:1:17",
														"nodeType": "YulTypedName",
														"src": "18208:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18211:1:17",
														"nodeType": "YulTypedName",
														"src": "18211:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18217:4:17",
														"nodeType": "YulTypedName",
														"src": "18217:4:17",
														"type": ""
													}
												],
												"src": "18177:194:17"
											},
											{
												"body": {
													"nativeSrc": "18483:71:17",
													"nodeType": "YulBlock",
													"src": "18483:71:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18505:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "18505:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18513:1:17",
																				"nodeType": "YulLiteral",
																				"src": "18513:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18501:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18501:3:17"
																		},
																		"nativeSrc": "18501:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18501:14:17"
																	},
																	{
																		"hexValue": "536c69707061676520746f6c6572616e6365206578636565646564",
																		"kind": "string",
																		"nativeSrc": "18517:29:17",
																		"nodeType": "YulLiteral",
																		"src": "18517:29:17",
																		"type": "",
																		"value": "Slippage tolerance exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18494:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18494:6:17"
																},
																"nativeSrc": "18494:53:17",
																"nodeType": "YulFunctionCall",
																"src": "18494:53:17"
															},
															"nativeSrc": "18494:53:17",
															"nodeType": "YulExpressionStatement",
															"src": "18494:53:17"
														}
													]
												},
												"name": "store_literal_in_memory_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
												"nativeSrc": "18377:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18475:6:17",
														"nodeType": "YulTypedName",
														"src": "18475:6:17",
														"type": ""
													}
												],
												"src": "18377:177:17"
											},
											{
												"body": {
													"nativeSrc": "18706:220:17",
													"nodeType": "YulBlock",
													"src": "18706:220:17",
													"statements": [
														{
															"nativeSrc": "18716:74:17",
															"nodeType": "YulAssignment",
															"src": "18716:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18782:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18782:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18787:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18787:2:17",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18723:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "18723:58:17"
																},
																"nativeSrc": "18723:67:17",
																"nodeType": "YulFunctionCall",
																"src": "18723:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18716:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18716:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18888:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18888:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																	"nativeSrc": "18799:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "18799:88:17"
																},
																"nativeSrc": "18799:93:17",
																"nodeType": "YulFunctionCall",
																"src": "18799:93:17"
															},
															"nativeSrc": "18799:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "18799:93:17"
														},
														{
															"nativeSrc": "18901:19:17",
															"nodeType": "YulAssignment",
															"src": "18901:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18912:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18912:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18917:2:17",
																		"nodeType": "YulLiteral",
																		"src": "18917:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18908:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18908:3:17"
																},
																"nativeSrc": "18908:12:17",
																"nodeType": "YulFunctionCall",
																"src": "18908:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18901:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18901:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18560:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18694:3:17",
														"nodeType": "YulTypedName",
														"src": "18694:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18702:3:17",
														"nodeType": "YulTypedName",
														"src": "18702:3:17",
														"type": ""
													}
												],
												"src": "18560:366:17"
											},
											{
												"body": {
													"nativeSrc": "19103:248:17",
													"nodeType": "YulBlock",
													"src": "19103:248:17",
													"statements": [
														{
															"nativeSrc": "19113:26:17",
															"nodeType": "YulAssignment",
															"src": "19113:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19125:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "19125:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19136:2:17",
																		"nodeType": "YulLiteral",
																		"src": "19136:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19121:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19121:3:17"
																},
																"nativeSrc": "19121:18:17",
																"nodeType": "YulFunctionCall",
																"src": "19121:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19113:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "19113:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19160:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19160:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19171:1:17",
																				"nodeType": "YulLiteral",
																				"src": "19171:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19156:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19156:3:17"
																		},
																		"nativeSrc": "19156:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19156:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19179:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "19179:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19185:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "19185:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19175:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19175:3:17"
																		},
																		"nativeSrc": "19175:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19175:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19149:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19149:6:17"
																},
																"nativeSrc": "19149:47:17",
																"nodeType": "YulFunctionCall",
																"src": "19149:47:17"
															},
															"nativeSrc": "19149:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "19149:47:17"
														},
														{
															"nativeSrc": "19205:139:17",
															"nodeType": "YulAssignment",
															"src": "19205:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19339:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "19339:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19213:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "19213:124:17"
																},
																"nativeSrc": "19213:131:17",
																"nodeType": "YulFunctionCall",
																"src": "19213:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19205:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "19205:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18932:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19083:9:17",
														"nodeType": "YulTypedName",
														"src": "19083:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19098:4:17",
														"nodeType": "YulTypedName",
														"src": "19098:4:17",
														"type": ""
													}
												],
												"src": "18932:419:17"
											},
											{
												"body": {
													"nativeSrc": "19463:66:17",
													"nodeType": "YulBlock",
													"src": "19463:66:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19485:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "19485:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19493:1:17",
																				"nodeType": "YulLiteral",
																				"src": "19493:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19481:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19481:3:17"
																		},
																		"nativeSrc": "19481:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19481:14:17"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c6971756964697479",
																		"kind": "string",
																		"nativeSrc": "19497:24:17",
																		"nodeType": "YulLiteral",
																		"src": "19497:24:17",
																		"type": "",
																		"value": "Insufficient liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19474:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19474:6:17"
																},
																"nativeSrc": "19474:48:17",
																"nodeType": "YulFunctionCall",
																"src": "19474:48:17"
															},
															"nativeSrc": "19474:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "19474:48:17"
														}
													]
												},
												"name": "store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
												"nativeSrc": "19357:172:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19455:6:17",
														"nodeType": "YulTypedName",
														"src": "19455:6:17",
														"type": ""
													}
												],
												"src": "19357:172:17"
											},
											{
												"body": {
													"nativeSrc": "19681:220:17",
													"nodeType": "YulBlock",
													"src": "19681:220:17",
													"statements": [
														{
															"nativeSrc": "19691:74:17",
															"nodeType": "YulAssignment",
															"src": "19691:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19757:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19757:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19762:2:17",
																		"nodeType": "YulLiteral",
																		"src": "19762:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19698:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "19698:58:17"
																},
																"nativeSrc": "19698:67:17",
																"nodeType": "YulFunctionCall",
																"src": "19698:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19691:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19691:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19863:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19863:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																	"nativeSrc": "19774:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "19774:88:17"
																},
																"nativeSrc": "19774:93:17",
																"nodeType": "YulFunctionCall",
																"src": "19774:93:17"
															},
															"nativeSrc": "19774:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "19774:93:17"
														},
														{
															"nativeSrc": "19876:19:17",
															"nodeType": "YulAssignment",
															"src": "19876:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19887:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19887:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19892:2:17",
																		"nodeType": "YulLiteral",
																		"src": "19892:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19883:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19883:3:17"
																},
																"nativeSrc": "19883:12:17",
																"nodeType": "YulFunctionCall",
																"src": "19883:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19876:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19876:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19535:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19669:3:17",
														"nodeType": "YulTypedName",
														"src": "19669:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19677:3:17",
														"nodeType": "YulTypedName",
														"src": "19677:3:17",
														"type": ""
													}
												],
												"src": "19535:366:17"
											},
											{
												"body": {
													"nativeSrc": "20078:248:17",
													"nodeType": "YulBlock",
													"src": "20078:248:17",
													"statements": [
														{
															"nativeSrc": "20088:26:17",
															"nodeType": "YulAssignment",
															"src": "20088:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20100:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "20100:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20111:2:17",
																		"nodeType": "YulLiteral",
																		"src": "20111:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20096:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20096:3:17"
																},
																"nativeSrc": "20096:18:17",
																"nodeType": "YulFunctionCall",
																"src": "20096:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20088:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "20088:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20135:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20135:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20146:1:17",
																				"nodeType": "YulLiteral",
																				"src": "20146:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20131:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20131:3:17"
																		},
																		"nativeSrc": "20131:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20131:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20154:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "20154:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20160:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20160:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20150:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20150:3:17"
																		},
																		"nativeSrc": "20150:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20150:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20124:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20124:6:17"
																},
																"nativeSrc": "20124:47:17",
																"nodeType": "YulFunctionCall",
																"src": "20124:47:17"
															},
															"nativeSrc": "20124:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "20124:47:17"
														},
														{
															"nativeSrc": "20180:139:17",
															"nodeType": "YulAssignment",
															"src": "20180:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20314:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "20314:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20188:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "20188:124:17"
																},
																"nativeSrc": "20188:131:17",
																"nodeType": "YulFunctionCall",
																"src": "20188:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20180:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "20180:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19907:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20058:9:17",
														"nodeType": "YulTypedName",
														"src": "20058:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20073:4:17",
														"nodeType": "YulTypedName",
														"src": "20073:4:17",
														"type": ""
													}
												],
												"src": "19907:419:17"
											},
											{
												"body": {
													"nativeSrc": "20376:147:17",
													"nodeType": "YulBlock",
													"src": "20376:147:17",
													"statements": [
														{
															"nativeSrc": "20386:25:17",
															"nodeType": "YulAssignment",
															"src": "20386:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20409:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "20409:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20391:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "20391:17:17"
																},
																"nativeSrc": "20391:20:17",
																"nodeType": "YulFunctionCall",
																"src": "20391:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20386:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "20386:1:17"
																}
															]
														},
														{
															"nativeSrc": "20420:25:17",
															"nodeType": "YulAssignment",
															"src": "20420:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20443:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "20443:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20425:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "20425:17:17"
																},
																"nativeSrc": "20425:20:17",
																"nodeType": "YulFunctionCall",
																"src": "20425:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20420:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "20420:1:17"
																}
															]
														},
														{
															"nativeSrc": "20454:16:17",
															"nodeType": "YulAssignment",
															"src": "20454:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20465:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "20465:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20468:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "20468:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20461:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20461:3:17"
																},
																"nativeSrc": "20461:9:17",
																"nodeType": "YulFunctionCall",
																"src": "20461:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "20454:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20454:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20494:22:17",
																"nodeType": "YulBlock",
																"src": "20494:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20496:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "20496:16:17"
																			},
																			"nativeSrc": "20496:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "20496:18:17"
																		},
																		"nativeSrc": "20496:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "20496:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20486:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "20486:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "20489:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20489:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20483:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "20483:2:17"
																},
																"nativeSrc": "20483:10:17",
																"nodeType": "YulFunctionCall",
																"src": "20483:10:17"
															},
															"nativeSrc": "20480:36:17",
															"nodeType": "YulIf",
															"src": "20480:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "20332:191:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20363:1:17",
														"nodeType": "YulTypedName",
														"src": "20363:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20366:1:17",
														"nodeType": "YulTypedName",
														"src": "20366:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "20372:3:17",
														"nodeType": "YulTypedName",
														"src": "20372:3:17",
														"type": ""
													}
												],
												"src": "20332:191:17"
											},
											{
												"body": {
													"nativeSrc": "20635:119:17",
													"nodeType": "YulBlock",
													"src": "20635:119:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20657:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "20657:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20665:1:17",
																				"nodeType": "YulLiteral",
																				"src": "20665:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20653:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20653:3:17"
																		},
																		"nativeSrc": "20653:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20653:14:17"
																	},
																	{
																		"hexValue": "546f6b656e20616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "20669:34:17",
																		"nodeType": "YulLiteral",
																		"src": "20669:34:17",
																		"type": "",
																		"value": "Token amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20646:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20646:6:17"
																},
																"nativeSrc": "20646:58:17",
																"nodeType": "YulFunctionCall",
																"src": "20646:58:17"
															},
															"nativeSrc": "20646:58:17",
															"nodeType": "YulExpressionStatement",
															"src": "20646:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20725:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "20725:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20733:2:17",
																				"nodeType": "YulLiteral",
																				"src": "20733:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20721:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20721:3:17"
																		},
																		"nativeSrc": "20721:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20721:15:17"
																	},
																	{
																		"hexValue": "6e207a65726f",
																		"kind": "string",
																		"nativeSrc": "20738:8:17",
																		"nodeType": "YulLiteral",
																		"src": "20738:8:17",
																		"type": "",
																		"value": "n zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20714:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20714:6:17"
																},
																"nativeSrc": "20714:33:17",
																"nodeType": "YulFunctionCall",
																"src": "20714:33:17"
															},
															"nativeSrc": "20714:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "20714:33:17"
														}
													]
												},
												"name": "store_literal_in_memory_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
												"nativeSrc": "20529:225:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20627:6:17",
														"nodeType": "YulTypedName",
														"src": "20627:6:17",
														"type": ""
													}
												],
												"src": "20529:225:17"
											},
											{
												"body": {
													"nativeSrc": "20906:220:17",
													"nodeType": "YulBlock",
													"src": "20906:220:17",
													"statements": [
														{
															"nativeSrc": "20916:74:17",
															"nodeType": "YulAssignment",
															"src": "20916:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20982:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "20982:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20987:2:17",
																		"nodeType": "YulLiteral",
																		"src": "20987:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20923:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "20923:58:17"
																},
																"nativeSrc": "20923:67:17",
																"nodeType": "YulFunctionCall",
																"src": "20923:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20916:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20916:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21088:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21088:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																	"nativeSrc": "20999:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "20999:88:17"
																},
																"nativeSrc": "20999:93:17",
																"nodeType": "YulFunctionCall",
																"src": "20999:93:17"
															},
															"nativeSrc": "20999:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "20999:93:17"
														},
														{
															"nativeSrc": "21101:19:17",
															"nodeType": "YulAssignment",
															"src": "21101:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21112:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21112:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21117:2:17",
																		"nodeType": "YulLiteral",
																		"src": "21117:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21108:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21108:3:17"
																},
																"nativeSrc": "21108:12:17",
																"nodeType": "YulFunctionCall",
																"src": "21108:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21101:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21101:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20760:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20894:3:17",
														"nodeType": "YulTypedName",
														"src": "20894:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20902:3:17",
														"nodeType": "YulTypedName",
														"src": "20902:3:17",
														"type": ""
													}
												],
												"src": "20760:366:17"
											},
											{
												"body": {
													"nativeSrc": "21303:248:17",
													"nodeType": "YulBlock",
													"src": "21303:248:17",
													"statements": [
														{
															"nativeSrc": "21313:26:17",
															"nodeType": "YulAssignment",
															"src": "21313:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21325:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "21325:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21336:2:17",
																		"nodeType": "YulLiteral",
																		"src": "21336:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21321:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21321:3:17"
																},
																"nativeSrc": "21321:18:17",
																"nodeType": "YulFunctionCall",
																"src": "21321:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21313:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21313:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21360:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "21360:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21371:1:17",
																				"nodeType": "YulLiteral",
																				"src": "21371:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21356:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21356:3:17"
																		},
																		"nativeSrc": "21356:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21356:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21379:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "21379:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21385:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "21385:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21375:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21375:3:17"
																		},
																		"nativeSrc": "21375:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21375:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21349:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21349:6:17"
																},
																"nativeSrc": "21349:47:17",
																"nodeType": "YulFunctionCall",
																"src": "21349:47:17"
															},
															"nativeSrc": "21349:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "21349:47:17"
														},
														{
															"nativeSrc": "21405:139:17",
															"nodeType": "YulAssignment",
															"src": "21405:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21539:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "21539:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21413:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "21413:124:17"
																},
																"nativeSrc": "21413:131:17",
																"nodeType": "YulFunctionCall",
																"src": "21413:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21405:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21405:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21132:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21283:9:17",
														"nodeType": "YulTypedName",
														"src": "21283:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21298:4:17",
														"nodeType": "YulTypedName",
														"src": "21298:4:17",
														"type": ""
													}
												],
												"src": "21132:419:17"
											},
											{
												"body": {
													"nativeSrc": "21663:62:17",
													"nodeType": "YulBlock",
													"src": "21663:62:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21685:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "21685:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21693:1:17",
																				"nodeType": "YulLiteral",
																				"src": "21693:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21681:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "21681:3:17"
																		},
																		"nativeSrc": "21681:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "21681:14:17"
																	},
																	{
																		"hexValue": "496e76616c696420706f6f6c207374617465",
																		"kind": "string",
																		"nativeSrc": "21697:20:17",
																		"nodeType": "YulLiteral",
																		"src": "21697:20:17",
																		"type": "",
																		"value": "Invalid pool state"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21674:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21674:6:17"
																},
																"nativeSrc": "21674:44:17",
																"nodeType": "YulFunctionCall",
																"src": "21674:44:17"
															},
															"nativeSrc": "21674:44:17",
															"nodeType": "YulExpressionStatement",
															"src": "21674:44:17"
														}
													]
												},
												"name": "store_literal_in_memory_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9",
												"nativeSrc": "21557:168:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21655:6:17",
														"nodeType": "YulTypedName",
														"src": "21655:6:17",
														"type": ""
													}
												],
												"src": "21557:168:17"
											},
											{
												"body": {
													"nativeSrc": "21877:220:17",
													"nodeType": "YulBlock",
													"src": "21877:220:17",
													"statements": [
														{
															"nativeSrc": "21887:74:17",
															"nodeType": "YulAssignment",
															"src": "21887:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21953:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21953:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21958:2:17",
																		"nodeType": "YulLiteral",
																		"src": "21958:2:17",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21894:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "21894:58:17"
																},
																"nativeSrc": "21894:67:17",
																"nodeType": "YulFunctionCall",
																"src": "21894:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21887:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21887:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22059:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "22059:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9",
																	"nativeSrc": "21970:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "21970:88:17"
																},
																"nativeSrc": "21970:93:17",
																"nodeType": "YulFunctionCall",
																"src": "21970:93:17"
															},
															"nativeSrc": "21970:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "21970:93:17"
														},
														{
															"nativeSrc": "22072:19:17",
															"nodeType": "YulAssignment",
															"src": "22072:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22083:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "22083:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22088:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22088:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22079:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22079:3:17"
																},
																"nativeSrc": "22079:12:17",
																"nodeType": "YulFunctionCall",
																"src": "22079:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22072:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22072:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21731:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21865:3:17",
														"nodeType": "YulTypedName",
														"src": "21865:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21873:3:17",
														"nodeType": "YulTypedName",
														"src": "21873:3:17",
														"type": ""
													}
												],
												"src": "21731:366:17"
											},
											{
												"body": {
													"nativeSrc": "22274:248:17",
													"nodeType": "YulBlock",
													"src": "22274:248:17",
													"statements": [
														{
															"nativeSrc": "22284:26:17",
															"nodeType": "YulAssignment",
															"src": "22284:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22296:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "22296:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22307:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22307:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22292:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22292:3:17"
																},
																"nativeSrc": "22292:18:17",
																"nodeType": "YulFunctionCall",
																"src": "22292:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22284:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "22284:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22331:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22331:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22342:1:17",
																				"nodeType": "YulLiteral",
																				"src": "22342:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22327:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22327:3:17"
																		},
																		"nativeSrc": "22327:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22327:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22350:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "22350:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22356:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "22356:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22346:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22346:3:17"
																		},
																		"nativeSrc": "22346:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22346:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22320:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "22320:6:17"
																},
																"nativeSrc": "22320:47:17",
																"nodeType": "YulFunctionCall",
																"src": "22320:47:17"
															},
															"nativeSrc": "22320:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "22320:47:17"
														},
														{
															"nativeSrc": "22376:139:17",
															"nodeType": "YulAssignment",
															"src": "22376:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22510:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "22510:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22384:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "22384:124:17"
																},
																"nativeSrc": "22384:131:17",
																"nodeType": "YulFunctionCall",
																"src": "22384:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22376:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "22376:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22103:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22254:9:17",
														"nodeType": "YulTypedName",
														"src": "22254:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22269:4:17",
														"nodeType": "YulTypedName",
														"src": "22269:4:17",
														"type": ""
													}
												],
												"src": "22103:419:17"
											},
											{
												"body": {
													"nativeSrc": "22576:362:17",
													"nodeType": "YulBlock",
													"src": "22576:362:17",
													"statements": [
														{
															"nativeSrc": "22586:25:17",
															"nodeType": "YulAssignment",
															"src": "22586:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22609:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "22609:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22591:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "22591:17:17"
																},
																"nativeSrc": "22591:20:17",
																"nodeType": "YulFunctionCall",
																"src": "22591:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22586:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "22586:1:17"
																}
															]
														},
														{
															"nativeSrc": "22620:25:17",
															"nodeType": "YulAssignment",
															"src": "22620:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22643:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "22643:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22625:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "22625:17:17"
																},
																"nativeSrc": "22625:20:17",
																"nodeType": "YulFunctionCall",
																"src": "22625:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22620:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "22620:1:17"
																}
															]
														},
														{
															"nativeSrc": "22654:28:17",
															"nodeType": "YulVariableDeclaration",
															"src": "22654:28:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22677:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "22677:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22680:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "22680:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22673:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22673:3:17"
																},
																"nativeSrc": "22673:9:17",
																"nodeType": "YulFunctionCall",
																"src": "22673:9:17"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "22658:11:17",
																	"nodeType": "YulTypedName",
																	"src": "22658:11:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22691:41:17",
															"nodeType": "YulAssignment",
															"src": "22691:41:17",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "22720:11:17",
																		"nodeType": "YulIdentifier",
																		"src": "22720:11:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22702:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "22702:17:17"
																},
																"nativeSrc": "22702:30:17",
																"nodeType": "YulFunctionCall",
																"src": "22702:30:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "22691:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "22691:7:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22909:22:17",
																"nodeType": "YulBlock",
																"src": "22909:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22911:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "22911:16:17"
																			},
																			"nativeSrc": "22911:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "22911:18:17"
																		},
																		"nativeSrc": "22911:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "22911:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "22842:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "22842:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "22835:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "22835:6:17"
																				},
																				"nativeSrc": "22835:9:17",
																				"nodeType": "YulFunctionCall",
																				"src": "22835:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "22865:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "22865:1:17"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "22872:7:17",
																								"nodeType": "YulIdentifier",
																								"src": "22872:7:17"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "22881:1:17",
																								"nodeType": "YulIdentifier",
																								"src": "22881:1:17"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "22868:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "22868:3:17"
																						},
																						"nativeSrc": "22868:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "22868:15:17"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "22862:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "22862:2:17"
																				},
																				"nativeSrc": "22862:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "22862:22:17"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "22815:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "22815:2:17"
																		},
																		"nativeSrc": "22815:83:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22815:83:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22795:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "22795:6:17"
																},
																"nativeSrc": "22795:113:17",
																"nodeType": "YulFunctionCall",
																"src": "22795:113:17"
															},
															"nativeSrc": "22792:139:17",
															"nodeType": "YulIf",
															"src": "22792:139:17"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "22528:410:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22559:1:17",
														"nodeType": "YulTypedName",
														"src": "22559:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22562:1:17",
														"nodeType": "YulTypedName",
														"src": "22562:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "22568:7:17",
														"nodeType": "YulTypedName",
														"src": "22568:7:17",
														"type": ""
													}
												],
												"src": "22528:410:17"
											},
											{
												"body": {
													"nativeSrc": "22972:152:17",
													"nodeType": "YulBlock",
													"src": "22972:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22989:1:17",
																		"nodeType": "YulLiteral",
																		"src": "22989:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22992:77:17",
																		"nodeType": "YulLiteral",
																		"src": "22992:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22982:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "22982:6:17"
																},
																"nativeSrc": "22982:88:17",
																"nodeType": "YulFunctionCall",
																"src": "22982:88:17"
															},
															"nativeSrc": "22982:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "22982:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23086:1:17",
																		"nodeType": "YulLiteral",
																		"src": "23086:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23089:4:17",
																		"nodeType": "YulLiteral",
																		"src": "23089:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23079:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "23079:6:17"
																},
																"nativeSrc": "23079:15:17",
																"nodeType": "YulFunctionCall",
																"src": "23079:15:17"
															},
															"nativeSrc": "23079:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "23079:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23110:1:17",
																		"nodeType": "YulLiteral",
																		"src": "23110:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23113:4:17",
																		"nodeType": "YulLiteral",
																		"src": "23113:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23103:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "23103:6:17"
																},
																"nativeSrc": "23103:15:17",
																"nodeType": "YulFunctionCall",
																"src": "23103:15:17"
															},
															"nativeSrc": "23103:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "23103:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "22944:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "22944:180:17"
											},
											{
												"body": {
													"nativeSrc": "23172:143:17",
													"nodeType": "YulBlock",
													"src": "23172:143:17",
													"statements": [
														{
															"nativeSrc": "23182:25:17",
															"nodeType": "YulAssignment",
															"src": "23182:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23205:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "23205:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23187:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "23187:17:17"
																},
																"nativeSrc": "23187:20:17",
																"nodeType": "YulFunctionCall",
																"src": "23187:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23182:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "23182:1:17"
																}
															]
														},
														{
															"nativeSrc": "23216:25:17",
															"nodeType": "YulAssignment",
															"src": "23216:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23239:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "23239:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23221:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "23221:17:17"
																},
																"nativeSrc": "23221:20:17",
																"nodeType": "YulFunctionCall",
																"src": "23221:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23216:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "23216:1:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23263:22:17",
																"nodeType": "YulBlock",
																"src": "23263:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "23265:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "23265:16:17"
																			},
																			"nativeSrc": "23265:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "23265:18:17"
																		},
																		"nativeSrc": "23265:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "23265:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23260:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "23260:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23253:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "23253:6:17"
																},
																"nativeSrc": "23253:9:17",
																"nodeType": "YulFunctionCall",
																"src": "23253:9:17"
															},
															"nativeSrc": "23250:35:17",
															"nodeType": "YulIf",
															"src": "23250:35:17"
														},
														{
															"nativeSrc": "23295:14:17",
															"nodeType": "YulAssignment",
															"src": "23295:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23304:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "23304:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23307:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "23307:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "23300:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "23300:3:17"
																},
																"nativeSrc": "23300:9:17",
																"nodeType": "YulFunctionCall",
																"src": "23300:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "23295:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "23295:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "23130:185:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23161:1:17",
														"nodeType": "YulTypedName",
														"src": "23161:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23164:1:17",
														"nodeType": "YulTypedName",
														"src": "23164:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "23170:1:17",
														"nodeType": "YulTypedName",
														"src": "23170:1:17",
														"type": ""
													}
												],
												"src": "23130:185:17"
											},
											{
												"body": {
													"nativeSrc": "23427:67:17",
													"nodeType": "YulBlock",
													"src": "23427:67:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23449:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "23449:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23457:1:17",
																				"nodeType": "YulLiteral",
																				"src": "23457:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23445:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "23445:3:17"
																		},
																		"nativeSrc": "23445:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23445:14:17"
																	},
																	{
																		"hexValue": "496e73756666696369656e742045544820616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "23461:25:17",
																		"nodeType": "YulLiteral",
																		"src": "23461:25:17",
																		"type": "",
																		"value": "Insufficient ETH amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23438:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "23438:6:17"
																},
																"nativeSrc": "23438:49:17",
																"nodeType": "YulFunctionCall",
																"src": "23438:49:17"
															},
															"nativeSrc": "23438:49:17",
															"nodeType": "YulExpressionStatement",
															"src": "23438:49:17"
														}
													]
												},
												"name": "store_literal_in_memory_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91",
												"nativeSrc": "23321:173:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23419:6:17",
														"nodeType": "YulTypedName",
														"src": "23419:6:17",
														"type": ""
													}
												],
												"src": "23321:173:17"
											},
											{
												"body": {
													"nativeSrc": "23646:220:17",
													"nodeType": "YulBlock",
													"src": "23646:220:17",
													"statements": [
														{
															"nativeSrc": "23656:74:17",
															"nodeType": "YulAssignment",
															"src": "23656:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23722:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "23722:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23727:2:17",
																		"nodeType": "YulLiteral",
																		"src": "23727:2:17",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23663:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "23663:58:17"
																},
																"nativeSrc": "23663:67:17",
																"nodeType": "YulFunctionCall",
																"src": "23663:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23656:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "23656:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23828:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "23828:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91",
																	"nativeSrc": "23739:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "23739:88:17"
																},
																"nativeSrc": "23739:93:17",
																"nodeType": "YulFunctionCall",
																"src": "23739:93:17"
															},
															"nativeSrc": "23739:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "23739:93:17"
														},
														{
															"nativeSrc": "23841:19:17",
															"nodeType": "YulAssignment",
															"src": "23841:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23852:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "23852:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23857:2:17",
																		"nodeType": "YulLiteral",
																		"src": "23857:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23848:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "23848:3:17"
																},
																"nativeSrc": "23848:12:17",
																"nodeType": "YulFunctionCall",
																"src": "23848:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23841:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "23841:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23500:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23634:3:17",
														"nodeType": "YulTypedName",
														"src": "23634:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23642:3:17",
														"nodeType": "YulTypedName",
														"src": "23642:3:17",
														"type": ""
													}
												],
												"src": "23500:366:17"
											},
											{
												"body": {
													"nativeSrc": "24043:248:17",
													"nodeType": "YulBlock",
													"src": "24043:248:17",
													"statements": [
														{
															"nativeSrc": "24053:26:17",
															"nodeType": "YulAssignment",
															"src": "24053:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24065:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "24065:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24076:2:17",
																		"nodeType": "YulLiteral",
																		"src": "24076:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24061:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24061:3:17"
																},
																"nativeSrc": "24061:18:17",
																"nodeType": "YulFunctionCall",
																"src": "24061:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24053:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "24053:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24100:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "24100:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24111:1:17",
																				"nodeType": "YulLiteral",
																				"src": "24111:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24096:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "24096:3:17"
																		},
																		"nativeSrc": "24096:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24096:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24119:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "24119:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24125:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "24125:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24115:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "24115:3:17"
																		},
																		"nativeSrc": "24115:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24115:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24089:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "24089:6:17"
																},
																"nativeSrc": "24089:47:17",
																"nodeType": "YulFunctionCall",
																"src": "24089:47:17"
															},
															"nativeSrc": "24089:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "24089:47:17"
														},
														{
															"nativeSrc": "24145:139:17",
															"nodeType": "YulAssignment",
															"src": "24145:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24279:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "24279:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24153:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "24153:124:17"
																},
																"nativeSrc": "24153:131:17",
																"nodeType": "YulFunctionCall",
																"src": "24153:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24145:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "24145:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23872:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24023:9:17",
														"nodeType": "YulTypedName",
														"src": "24023:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24038:4:17",
														"nodeType": "YulTypedName",
														"src": "24038:4:17",
														"type": ""
													}
												],
												"src": "23872:419:17"
											},
											{
												"body": {
													"nativeSrc": "24350:32:17",
													"nodeType": "YulBlock",
													"src": "24350:32:17",
													"statements": [
														{
															"nativeSrc": "24360:16:17",
															"nodeType": "YulAssignment",
															"src": "24360:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "24371:5:17",
																"nodeType": "YulIdentifier",
																"src": "24371:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "24360:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "24360:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "24297:85:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24332:5:17",
														"nodeType": "YulTypedName",
														"src": "24332:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "24342:7:17",
														"nodeType": "YulTypedName",
														"src": "24342:7:17",
														"type": ""
													}
												],
												"src": "24297:85:17"
											},
											{
												"body": {
													"nativeSrc": "24432:57:17",
													"nodeType": "YulBlock",
													"src": "24432:57:17",
													"statements": [
														{
															"nativeSrc": "24442:41:17",
															"nodeType": "YulAssignment",
															"src": "24442:41:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24457:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "24457:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24464:18:17",
																		"nodeType": "YulLiteral",
																		"src": "24464:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24453:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24453:3:17"
																},
																"nativeSrc": "24453:30:17",
																"nodeType": "YulFunctionCall",
																"src": "24453:30:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "24442:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "24442:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "24388:101:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24414:5:17",
														"nodeType": "YulTypedName",
														"src": "24414:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "24424:7:17",
														"nodeType": "YulTypedName",
														"src": "24424:7:17",
														"type": ""
													}
												],
												"src": "24388:101:17"
											},
											{
												"body": {
													"nativeSrc": "24562:89:17",
													"nodeType": "YulBlock",
													"src": "24562:89:17",
													"statements": [
														{
															"nativeSrc": "24572:73:17",
															"nodeType": "YulAssignment",
															"src": "24572:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24637:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "24637:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "24611:25:17",
																					"nodeType": "YulIdentifier",
																					"src": "24611:25:17"
																				},
																				"nativeSrc": "24611:32:17",
																				"nodeType": "YulFunctionCall",
																				"src": "24611:32:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "24602:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "24602:8:17"
																		},
																		"nativeSrc": "24602:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24602:42:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "24585:16:17",
																	"nodeType": "YulIdentifier",
																	"src": "24585:16:17"
																},
																"nativeSrc": "24585:60:17",
																"nodeType": "YulFunctionCall",
																"src": "24585:60:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "24572:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "24572:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "24495:156:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24542:5:17",
														"nodeType": "YulTypedName",
														"src": "24542:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "24552:9:17",
														"nodeType": "YulTypedName",
														"src": "24552:9:17",
														"type": ""
													}
												],
												"src": "24495:156:17"
											},
											{
												"body": {
													"nativeSrc": "24729:73:17",
													"nodeType": "YulBlock",
													"src": "24729:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24746:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "24746:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24789:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "24789:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "24751:37:17",
																			"nodeType": "YulIdentifier",
																			"src": "24751:37:17"
																		},
																		"nativeSrc": "24751:44:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24751:44:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24739:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "24739:6:17"
																},
																"nativeSrc": "24739:57:17",
																"nodeType": "YulFunctionCall",
																"src": "24739:57:17"
															},
															"nativeSrc": "24739:57:17",
															"nodeType": "YulExpressionStatement",
															"src": "24739:57:17"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "24657:145:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24717:5:17",
														"nodeType": "YulTypedName",
														"src": "24717:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24724:3:17",
														"nodeType": "YulTypedName",
														"src": "24724:3:17",
														"type": ""
													}
												],
												"src": "24657:145:17"
											},
											{
												"body": {
													"nativeSrc": "24913:131:17",
													"nodeType": "YulBlock",
													"src": "24913:131:17",
													"statements": [
														{
															"nativeSrc": "24923:26:17",
															"nodeType": "YulAssignment",
															"src": "24923:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24935:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "24935:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24946:2:17",
																		"nodeType": "YulLiteral",
																		"src": "24946:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24931:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24931:3:17"
																},
																"nativeSrc": "24931:18:17",
																"nodeType": "YulFunctionCall",
																"src": "24931:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24923:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "24923:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25010:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "25010:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25023:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "25023:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25034:1:17",
																				"nodeType": "YulLiteral",
																				"src": "25034:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25019:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "25019:3:17"
																		},
																		"nativeSrc": "25019:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "25019:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "24959:50:17",
																	"nodeType": "YulIdentifier",
																	"src": "24959:50:17"
																},
																"nativeSrc": "24959:78:17",
																"nodeType": "YulFunctionCall",
																"src": "24959:78:17"
															},
															"nativeSrc": "24959:78:17",
															"nodeType": "YulExpressionStatement",
															"src": "24959:78:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "24808:236:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24885:9:17",
														"nodeType": "YulTypedName",
														"src": "24885:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24897:6:17",
														"nodeType": "YulTypedName",
														"src": "24897:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24908:4:17",
														"nodeType": "YulTypedName",
														"src": "24908:4:17",
														"type": ""
													}
												],
												"src": "24808:236:17"
											},
											{
												"body": {
													"nativeSrc": "25156:60:17",
													"nodeType": "YulBlock",
													"src": "25156:60:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25178:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "25178:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25186:1:17",
																				"nodeType": "YulLiteral",
																				"src": "25186:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25174:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "25174:3:17"
																		},
																		"nativeSrc": "25174:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "25174:14:17"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572206f66204e4654",
																		"kind": "string",
																		"nativeSrc": "25190:18:17",
																		"nodeType": "YulLiteral",
																		"src": "25190:18:17",
																		"type": "",
																		"value": "Not owner of NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25167:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "25167:6:17"
																},
																"nativeSrc": "25167:42:17",
																"nodeType": "YulFunctionCall",
																"src": "25167:42:17"
															},
															"nativeSrc": "25167:42:17",
															"nodeType": "YulExpressionStatement",
															"src": "25167:42:17"
														}
													]
												},
												"name": "store_literal_in_memory_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721",
												"nativeSrc": "25050:166:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25148:6:17",
														"nodeType": "YulTypedName",
														"src": "25148:6:17",
														"type": ""
													}
												],
												"src": "25050:166:17"
											},
											{
												"body": {
													"nativeSrc": "25368:220:17",
													"nodeType": "YulBlock",
													"src": "25368:220:17",
													"statements": [
														{
															"nativeSrc": "25378:74:17",
															"nodeType": "YulAssignment",
															"src": "25378:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25444:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "25444:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25449:2:17",
																		"nodeType": "YulLiteral",
																		"src": "25449:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25385:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "25385:58:17"
																},
																"nativeSrc": "25385:67:17",
																"nodeType": "YulFunctionCall",
																"src": "25385:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25378:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "25378:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25550:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "25550:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721",
																	"nativeSrc": "25461:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "25461:88:17"
																},
																"nativeSrc": "25461:93:17",
																"nodeType": "YulFunctionCall",
																"src": "25461:93:17"
															},
															"nativeSrc": "25461:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "25461:93:17"
														},
														{
															"nativeSrc": "25563:19:17",
															"nodeType": "YulAssignment",
															"src": "25563:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25574:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "25574:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25579:2:17",
																		"nodeType": "YulLiteral",
																		"src": "25579:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25570:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "25570:3:17"
																},
																"nativeSrc": "25570:12:17",
																"nodeType": "YulFunctionCall",
																"src": "25570:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25563:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "25563:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25222:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25356:3:17",
														"nodeType": "YulTypedName",
														"src": "25356:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25364:3:17",
														"nodeType": "YulTypedName",
														"src": "25364:3:17",
														"type": ""
													}
												],
												"src": "25222:366:17"
											},
											{
												"body": {
													"nativeSrc": "25765:248:17",
													"nodeType": "YulBlock",
													"src": "25765:248:17",
													"statements": [
														{
															"nativeSrc": "25775:26:17",
															"nodeType": "YulAssignment",
															"src": "25775:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25787:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "25787:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25798:2:17",
																		"nodeType": "YulLiteral",
																		"src": "25798:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25783:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "25783:3:17"
																},
																"nativeSrc": "25783:18:17",
																"nodeType": "YulFunctionCall",
																"src": "25783:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25775:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "25775:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25822:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "25822:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25833:1:17",
																				"nodeType": "YulLiteral",
																				"src": "25833:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25818:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "25818:3:17"
																		},
																		"nativeSrc": "25818:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "25818:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25841:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "25841:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25847:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "25847:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25837:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "25837:3:17"
																		},
																		"nativeSrc": "25837:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "25837:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25811:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "25811:6:17"
																},
																"nativeSrc": "25811:47:17",
																"nodeType": "YulFunctionCall",
																"src": "25811:47:17"
															},
															"nativeSrc": "25811:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "25811:47:17"
														},
														{
															"nativeSrc": "25867:139:17",
															"nodeType": "YulAssignment",
															"src": "25867:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26001:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "26001:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25875:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "25875:124:17"
																},
																"nativeSrc": "25875:131:17",
																"nodeType": "YulFunctionCall",
																"src": "25875:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25867:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "25867:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25594:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25745:9:17",
														"nodeType": "YulTypedName",
														"src": "25745:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25760:4:17",
														"nodeType": "YulTypedName",
														"src": "25760:4:17",
														"type": ""
													}
												],
												"src": "25594:419:17"
											},
											{
												"body": {
													"nativeSrc": "26125:64:17",
													"nodeType": "YulBlock",
													"src": "26125:64:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26147:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "26147:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26155:1:17",
																				"nodeType": "YulLiteral",
																				"src": "26155:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26143:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "26143:3:17"
																		},
																		"nativeSrc": "26143:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "26143:14:17"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "26159:22:17",
																		"nodeType": "YulLiteral",
																		"src": "26159:22:17",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26136:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "26136:6:17"
																},
																"nativeSrc": "26136:46:17",
																"nodeType": "YulFunctionCall",
																"src": "26136:46:17"
															},
															"nativeSrc": "26136:46:17",
															"nodeType": "YulExpressionStatement",
															"src": "26136:46:17"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "26019:170:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26117:6:17",
														"nodeType": "YulTypedName",
														"src": "26117:6:17",
														"type": ""
													}
												],
												"src": "26019:170:17"
											},
											{
												"body": {
													"nativeSrc": "26341:220:17",
													"nodeType": "YulBlock",
													"src": "26341:220:17",
													"statements": [
														{
															"nativeSrc": "26351:74:17",
															"nodeType": "YulAssignment",
															"src": "26351:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26417:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "26417:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26422:2:17",
																		"nodeType": "YulLiteral",
																		"src": "26422:2:17",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26358:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "26358:58:17"
																},
																"nativeSrc": "26358:67:17",
																"nodeType": "YulFunctionCall",
																"src": "26358:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26351:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "26351:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26523:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "26523:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "26434:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "26434:88:17"
																},
																"nativeSrc": "26434:93:17",
																"nodeType": "YulFunctionCall",
																"src": "26434:93:17"
															},
															"nativeSrc": "26434:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "26434:93:17"
														},
														{
															"nativeSrc": "26536:19:17",
															"nodeType": "YulAssignment",
															"src": "26536:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26547:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "26547:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26552:2:17",
																		"nodeType": "YulLiteral",
																		"src": "26552:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26543:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "26543:3:17"
																},
																"nativeSrc": "26543:12:17",
																"nodeType": "YulFunctionCall",
																"src": "26543:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26536:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "26536:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26195:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26329:3:17",
														"nodeType": "YulTypedName",
														"src": "26329:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26337:3:17",
														"nodeType": "YulTypedName",
														"src": "26337:3:17",
														"type": ""
													}
												],
												"src": "26195:366:17"
											},
											{
												"body": {
													"nativeSrc": "26738:248:17",
													"nodeType": "YulBlock",
													"src": "26738:248:17",
													"statements": [
														{
															"nativeSrc": "26748:26:17",
															"nodeType": "YulAssignment",
															"src": "26748:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26760:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "26760:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26771:2:17",
																		"nodeType": "YulLiteral",
																		"src": "26771:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26756:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "26756:3:17"
																},
																"nativeSrc": "26756:18:17",
																"nodeType": "YulFunctionCall",
																"src": "26756:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26748:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "26748:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26795:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "26795:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26806:1:17",
																				"nodeType": "YulLiteral",
																				"src": "26806:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26791:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "26791:3:17"
																		},
																		"nativeSrc": "26791:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "26791:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26814:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "26814:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26820:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "26820:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26810:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "26810:3:17"
																		},
																		"nativeSrc": "26810:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "26810:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26784:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "26784:6:17"
																},
																"nativeSrc": "26784:47:17",
																"nodeType": "YulFunctionCall",
																"src": "26784:47:17"
															},
															"nativeSrc": "26784:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "26784:47:17"
														},
														{
															"nativeSrc": "26840:139:17",
															"nodeType": "YulAssignment",
															"src": "26840:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26974:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "26974:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26848:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "26848:124:17"
																},
																"nativeSrc": "26848:131:17",
																"nodeType": "YulFunctionCall",
																"src": "26848:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26840:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "26840:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26567:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26718:9:17",
														"nodeType": "YulTypedName",
														"src": "26718:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26733:4:17",
														"nodeType": "YulTypedName",
														"src": "26733:4:17",
														"type": ""
													}
												],
												"src": "26567:419:17"
											},
											{
												"body": {
													"nativeSrc": "27090:124:17",
													"nodeType": "YulBlock",
													"src": "27090:124:17",
													"statements": [
														{
															"nativeSrc": "27100:26:17",
															"nodeType": "YulAssignment",
															"src": "27100:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27112:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "27112:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27123:2:17",
																		"nodeType": "YulLiteral",
																		"src": "27123:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27108:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "27108:3:17"
																},
																"nativeSrc": "27108:18:17",
																"nodeType": "YulFunctionCall",
																"src": "27108:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27100:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "27100:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27180:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "27180:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27193:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "27193:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27204:1:17",
																				"nodeType": "YulLiteral",
																				"src": "27204:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27189:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "27189:3:17"
																		},
																		"nativeSrc": "27189:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "27189:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27136:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "27136:43:17"
																},
																"nativeSrc": "27136:71:17",
																"nodeType": "YulFunctionCall",
																"src": "27136:71:17"
															},
															"nativeSrc": "27136:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "27136:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "26992:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27062:9:17",
														"nodeType": "YulTypedName",
														"src": "27062:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27074:6:17",
														"nodeType": "YulTypedName",
														"src": "27074:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27085:4:17",
														"nodeType": "YulTypedName",
														"src": "27085:4:17",
														"type": ""
													}
												],
												"src": "26992:222:17"
											},
											{
												"body": {
													"nativeSrc": "27283:80:17",
													"nodeType": "YulBlock",
													"src": "27283:80:17",
													"statements": [
														{
															"nativeSrc": "27293:22:17",
															"nodeType": "YulAssignment",
															"src": "27293:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "27308:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "27308:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27302:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "27302:5:17"
																},
																"nativeSrc": "27302:13:17",
																"nodeType": "YulFunctionCall",
																"src": "27302:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "27293:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "27293:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27351:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "27351:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "27324:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "27324:26:17"
																},
																"nativeSrc": "27324:33:17",
																"nodeType": "YulFunctionCall",
																"src": "27324:33:17"
															},
															"nativeSrc": "27324:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "27324:33:17"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "27220:143:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "27261:6:17",
														"nodeType": "YulTypedName",
														"src": "27261:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "27269:3:17",
														"nodeType": "YulTypedName",
														"src": "27269:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "27277:5:17",
														"nodeType": "YulTypedName",
														"src": "27277:5:17",
														"type": ""
													}
												],
												"src": "27220:143:17"
											},
											{
												"body": {
													"nativeSrc": "27446:274:17",
													"nodeType": "YulBlock",
													"src": "27446:274:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "27492:83:17",
																"nodeType": "YulBlock",
																"src": "27492:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "27494:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "27494:77:17"
																			},
																			"nativeSrc": "27494:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "27494:79:17"
																		},
																		"nativeSrc": "27494:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "27494:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27467:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "27467:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27476:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "27476:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27463:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "27463:3:17"
																		},
																		"nativeSrc": "27463:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "27463:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27488:2:17",
																		"nodeType": "YulLiteral",
																		"src": "27488:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "27459:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "27459:3:17"
																},
																"nativeSrc": "27459:32:17",
																"nodeType": "YulFunctionCall",
																"src": "27459:32:17"
															},
															"nativeSrc": "27456:119:17",
															"nodeType": "YulIf",
															"src": "27456:119:17"
														},
														{
															"nativeSrc": "27585:128:17",
															"nodeType": "YulBlock",
															"src": "27585:128:17",
															"statements": [
																{
																	"nativeSrc": "27600:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "27600:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27614:1:17",
																		"nodeType": "YulLiteral",
																		"src": "27614:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "27604:6:17",
																			"nodeType": "YulTypedName",
																			"src": "27604:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "27629:74:17",
																	"nodeType": "YulAssignment",
																	"src": "27629:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "27675:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "27675:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "27686:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "27686:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "27671:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "27671:3:17"
																				},
																				"nativeSrc": "27671:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "27671:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27695:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "27695:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "27639:31:17",
																			"nodeType": "YulIdentifier",
																			"src": "27639:31:17"
																		},
																		"nativeSrc": "27639:64:17",
																		"nodeType": "YulFunctionCall",
																		"src": "27639:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "27629:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "27629:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "27369:351:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27416:9:17",
														"nodeType": "YulTypedName",
														"src": "27416:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "27427:7:17",
														"nodeType": "YulTypedName",
														"src": "27427:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "27439:6:17",
														"nodeType": "YulTypedName",
														"src": "27439:6:17",
														"type": ""
													}
												],
												"src": "27369:351:17"
											},
											{
												"body": {
													"nativeSrc": "27852:206:17",
													"nodeType": "YulBlock",
													"src": "27852:206:17",
													"statements": [
														{
															"nativeSrc": "27862:26:17",
															"nodeType": "YulAssignment",
															"src": "27862:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27874:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "27874:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27885:2:17",
																		"nodeType": "YulLiteral",
																		"src": "27885:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27870:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "27870:3:17"
																},
																"nativeSrc": "27870:18:17",
																"nodeType": "YulFunctionCall",
																"src": "27870:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27862:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "27862:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27942:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "27942:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27955:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "27955:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27966:1:17",
																				"nodeType": "YulLiteral",
																				"src": "27966:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27951:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "27951:3:17"
																		},
																		"nativeSrc": "27951:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "27951:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27898:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "27898:43:17"
																},
																"nativeSrc": "27898:71:17",
																"nodeType": "YulFunctionCall",
																"src": "27898:71:17"
															},
															"nativeSrc": "27898:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "27898:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28023:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "28023:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28036:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "28036:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28047:2:17",
																				"nodeType": "YulLiteral",
																				"src": "28047:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28032:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "28032:3:17"
																		},
																		"nativeSrc": "28032:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "28032:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "27979:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "27979:43:17"
																},
																"nativeSrc": "27979:72:17",
																"nodeType": "YulFunctionCall",
																"src": "27979:72:17"
															},
															"nativeSrc": "27979:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "27979:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "27726:332:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27816:9:17",
														"nodeType": "YulTypedName",
														"src": "27816:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27828:6:17",
														"nodeType": "YulTypedName",
														"src": "27828:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27836:6:17",
														"nodeType": "YulTypedName",
														"src": "27836:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27847:4:17",
														"nodeType": "YulTypedName",
														"src": "27847:4:17",
														"type": ""
													}
												],
												"src": "27726:332:17"
											},
											{
												"body": {
													"nativeSrc": "28122:40:17",
													"nodeType": "YulBlock",
													"src": "28122:40:17",
													"statements": [
														{
															"nativeSrc": "28133:22:17",
															"nodeType": "YulAssignment",
															"src": "28133:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28149:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "28149:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "28143:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "28143:5:17"
																},
																"nativeSrc": "28143:12:17",
																"nodeType": "YulFunctionCall",
																"src": "28143:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "28133:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "28133:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "28064:98:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28105:5:17",
														"nodeType": "YulTypedName",
														"src": "28105:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "28115:6:17",
														"nodeType": "YulTypedName",
														"src": "28115:6:17",
														"type": ""
													}
												],
												"src": "28064:98:17"
											},
											{
												"body": {
													"nativeSrc": "28281:34:17",
													"nodeType": "YulBlock",
													"src": "28281:34:17",
													"statements": [
														{
															"nativeSrc": "28291:18:17",
															"nodeType": "YulAssignment",
															"src": "28291:18:17",
															"value": {
																"name": "pos",
																"nativeSrc": "28306:3:17",
																"nodeType": "YulIdentifier",
																"src": "28306:3:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "28291:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "28291:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "28168:147:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28253:3:17",
														"nodeType": "YulTypedName",
														"src": "28253:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "28258:6:17",
														"nodeType": "YulTypedName",
														"src": "28258:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "28269:11:17",
														"nodeType": "YulTypedName",
														"src": "28269:11:17",
														"type": ""
													}
												],
												"src": "28168:147:17"
											},
											{
												"body": {
													"nativeSrc": "28429:278:17",
													"nodeType": "YulBlock",
													"src": "28429:278:17",
													"statements": [
														{
															"nativeSrc": "28439:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "28439:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28485:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "28485:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "28453:31:17",
																	"nodeType": "YulIdentifier",
																	"src": "28453:31:17"
																},
																"nativeSrc": "28453:38:17",
																"nodeType": "YulFunctionCall",
																"src": "28453:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "28443:6:17",
																	"nodeType": "YulTypedName",
																	"src": "28443:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "28500:95:17",
															"nodeType": "YulAssignment",
															"src": "28500:95:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28583:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "28583:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28588:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "28588:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "28507:75:17",
																	"nodeType": "YulIdentifier",
																	"src": "28507:75:17"
																},
																"nativeSrc": "28507:88:17",
																"nodeType": "YulFunctionCall",
																"src": "28507:88:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28500:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "28500:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "28643:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "28643:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28650:4:17",
																				"nodeType": "YulLiteral",
																				"src": "28650:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28639:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "28639:3:17"
																		},
																		"nativeSrc": "28639:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "28639:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28657:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "28657:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28662:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "28662:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "28604:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "28604:34:17"
																},
																"nativeSrc": "28604:65:17",
																"nodeType": "YulFunctionCall",
																"src": "28604:65:17"
															},
															"nativeSrc": "28604:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "28604:65:17"
														},
														{
															"nativeSrc": "28678:23:17",
															"nodeType": "YulAssignment",
															"src": "28678:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28689:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "28689:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28694:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "28694:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28685:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "28685:3:17"
																},
																"nativeSrc": "28685:16:17",
																"nodeType": "YulFunctionCall",
																"src": "28685:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28678:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "28678:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "28321:386:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28410:5:17",
														"nodeType": "YulTypedName",
														"src": "28410:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "28417:3:17",
														"nodeType": "YulTypedName",
														"src": "28417:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28425:3:17",
														"nodeType": "YulTypedName",
														"src": "28425:3:17",
														"type": ""
													}
												],
												"src": "28321:386:17"
											},
											{
												"body": {
													"nativeSrc": "28847:137:17",
													"nodeType": "YulBlock",
													"src": "28847:137:17",
													"statements": [
														{
															"nativeSrc": "28858:100:17",
															"nodeType": "YulAssignment",
															"src": "28858:100:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28945:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "28945:6:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28954:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "28954:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "28865:79:17",
																	"nodeType": "YulIdentifier",
																	"src": "28865:79:17"
																},
																"nativeSrc": "28865:93:17",
																"nodeType": "YulFunctionCall",
																"src": "28865:93:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28858:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "28858:3:17"
																}
															]
														},
														{
															"nativeSrc": "28968:10:17",
															"nodeType": "YulAssignment",
															"src": "28968:10:17",
															"value": {
																"name": "pos",
																"nativeSrc": "28975:3:17",
																"nodeType": "YulIdentifier",
																"src": "28975:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28968:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "28968:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "28713:271:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28826:3:17",
														"nodeType": "YulTypedName",
														"src": "28826:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28832:6:17",
														"nodeType": "YulTypedName",
														"src": "28832:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28843:3:17",
														"nodeType": "YulTypedName",
														"src": "28843:3:17",
														"type": ""
													}
												],
												"src": "28713:271:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20Upgradeable_$876_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20Upgradeable_$876_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20Upgradeable_$876_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$876__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20Upgradeable_$876_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC721Upgradeable_$992_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721Upgradeable_$992_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721Upgradeable_$992_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721Upgradeable_$992__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721Upgradeable_$992_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH amount must be greater than \")\n\n        mstore(add(memPtr, 32), \"zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT not owned by contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10(memPtr) {\n\n        mstore(add(memPtr, 0), \"Slippage tolerance exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token amount must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid pool state\")\n\n    }\n\n    function abi_encode_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient ETH amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner of NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"636": [
									{
										"length": 32,
										"start": 9328
									},
									{
										"length": 32,
										"start": 9413
									},
									{
										"length": 32,
										"start": 9890
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101d7575f3560e01c80635668870011610101578063cc2a9a5b11610094578063e15cc8da11610063578063e15cc8da1461064a578063e63ab1e914610672578063f14210a61461069c578063f72c0d8b146106c4576101d7565b8063cc2a9a5b146105a8578063d547741f146105d0578063d9a37ad2146105f8578063da06968314610620576101d7565b8063a201ccf6116100d0578063a201ccf6146104ef578063a217fddf1461052c578063ad3cb1cc14610556578063c708831314610580576101d7565b806356688700146104435780635c975abb146104735780638456cb591461049d57806391d14854146104b3576101d7565b80632f2ff15d1161017957806349f0346e1161014857806349f0346e146103c55780634f1ef286146103e157806351422e97146103fd57806352d1902d14610419576101d7565b80632f2ff15d1461033557806334aab0641461035d57806336568abe146103875780633f4ba83a146103af576101d7565b80630b0fd47e116101b55780630b0fd47e14610267578063242f0551146102a5578063248a9ca3146102cf5780632d11c58a1461030b576101d7565b806301ffc9a7146101db578063023245d71461021757806306b091f91461023f575b5f80fd5b3480156101e6575f80fd5b5061020160048036038101906101fc9190612cb3565b6106ee565b60405161020e9190612cf8565b60405180910390f35b348015610222575f80fd5b5061023d60048036038101906102389190612d44565b610767565b005b34801561024a575f80fd5b5061026560048036038101906102609190612dc9565b610802565b005b348015610272575f80fd5b5061028d60048036038101906102889190612e07565b61088f565b60405161029c93929190612e41565b60405180910390f35b3480156102b0575f80fd5b506102b96108b5565b6040516102c69190612e8e565b60405180910390f35b3480156102da575f80fd5b506102f560048036038101906102f09190612ed1565b6108d9565b6040516103029190612e8e565b60405180910390f35b348015610316575f80fd5b5061031f610903565b60405161032c9190612efc565b60405180910390f35b348015610340575f80fd5b5061035b60048036038101906103569190612f15565b610908565b005b348015610368575f80fd5b5061037161092a565b60405161037e9190612fae565b60405180910390f35b348015610392575f80fd5b506103ad60048036038101906103a89190612f15565b61094d565b005b3480156103ba575f80fd5b506103c36109c8565b005b6103df60048036038101906103da9190612fc7565b6109fd565b005b6103fb60048036038101906103f69190613141565b610d05565b005b61041760048036038101906104129190612dc9565b610d24565b005b348015610424575f80fd5b5061042d610f76565b60405161043a9190612e8e565b60405180910390f35b61045d60048036038101906104589190612dc9565b610fa7565b60405161046a9190612efc565b60405180910390f35b34801561047e575f80fd5b50610487611307565b6040516104949190612cf8565b60405180910390f35b3480156104a8575f80fd5b506104b1611329565b005b3480156104be575f80fd5b506104d960048036038101906104d49190612f15565b61135e565b6040516104e69190612cf8565b60405180910390f35b3480156104fa575f80fd5b5061051560048036038101906105109190612dc9565b6113cf565b60405161052392919061319b565b60405180910390f35b348015610537575f80fd5b506105406116af565b60405161054d9190612e8e565b60405180910390f35b348015610561575f80fd5b5061056a6116b5565b6040516105779190613222565b60405180910390f35b34801561058b575f80fd5b506105a660048036038101906105a19190613242565b6116ee565b005b3480156105b3575f80fd5b506105ce60048036038101906105c99190613292565b6117a7565b005b3480156105db575f80fd5b506105f660048036038101906105f19190612f15565b611a49565b005b348015610603575f80fd5b5061061e60048036038101906106199190612fc7565b611a6b565b005b34801561062b575f80fd5b50610634611d26565b604051610641919061333b565b60405180910390f35b348015610655575f80fd5b50610670600480360381019061066b9190613242565b611d4b565b005b34801561067d575f80fd5b50610686611fe4565b6040516106939190612e8e565b60405180910390f35b3480156106a7575f80fd5b506106c260048036038101906106bd9190612d44565b612008565b005b3480156106cf575f80fd5b506106d861209f565b6040516106e59190612e8e565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610760575061075f826120c3565b5b9050919050565b5f801b6107738161212c565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033856040518463ffffffff1660e01b81526004016107d193929190613363565b5f604051808303815f87803b1580156107e8575f80fd5b505af11580156107fa573d5f803e3d5ffd5b505050505050565b5f801b61080e8161212c565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610849929190613398565b6020604051808303815f875af1158015610865573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061088991906133e9565b50505050565b6002602052805f5260405f205f91509050805f0154908060010154908060020154905083565b7f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f81565b5f806108e3612140565b9050805f015f8481526020019081526020015f2060010154915050919050565b600381565b610911826108d9565b61091a8161212c565b6109248383612167565b50505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61095561225f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109b9576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109c38282612266565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109f28161212c565b6109fa61235e565b50565b610a056123cc565b5f3411610a47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3e90613484565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610ab89190612efc565b602060405180830381865afa158015610ad3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af791906134b6565b73ffffffffffffffffffffffffffffffffffffffff1614610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b449061352b565b60405180910390fd5b5f610b65343447610b5e9190613576565b600161240d565b905081811015610baa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba1906135f3565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610bed573d5f803e3d5ffd5b5060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033866040518463ffffffff1660e01b8152600401610c4c93929190613363565b5f604051808303815f87803b158015610c63575f80fd5b505af1158015610c75573d5f803e3d5ffd5b505050508260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e6584604051610cf89190612efc565b60405180910390a4505050565b610d0d61246e565b610d1682612554565b610d208282612582565b5050565b610d2c6123cc565b5f3411610d6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6590613484565b60405180910390fd5b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8160010154118015610dc357505f815f0154115b610e02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df99061365b565b60405180910390fd5b5f610e15348360010154845f015461240d565b905082811015610e5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e51906135f3565b60405180910390fd5b34826001015f828254610e6d9190613679565b9250508190555080825f015f828254610e869190613576565b925050819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ec8929190613398565b6020604051808303815f875af1158015610ee4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f0891906133e9565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d668334604051610f6892919061319b565b60405180910390a350505050565b5f610f7f6126a0565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f610fb06123cc565b5f8211610ff2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe99061371c565b60405180910390fd5b5f3411611034576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102b90613484565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161107193929190613363565b6020604051808303815f875af115801561108d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110b191906133e9565b505f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f808260020154036111175783825f0181905550348260010181905550839050611224565b5f826001015411801561112c57505f825f0154115b61116b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116290613784565b60405180910390fd5b5f825f015485846001015461118091906137a2565b61118a9190613810565b9050803410156111cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c69061388a565b60405180910390fd5b84835f015f8282546111e19190613679565b9250508190555034836001015f8282546111fb9190613679565b92505081905550825f015485846002015461121691906137a2565b6112209190613810565b9150505b80826002015f8282546112379190613679565b9250508190555080826003015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461128c9190613679565b925050819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f78634856040516112f493929190612e41565b60405180910390a3809250505092915050565b5f80611311612727565b9050805f015f9054906101000a900460ff1691505090565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6113538161212c565b61135b61274e565b50565b5f80611368612140565b9050805f015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1691505092915050565b5f806113d96123cc565b5f60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905083816003015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561149b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114929061365b565b60405180910390fd5b806002015484825f01546114af91906137a2565b6114b99190613810565b925080600201548482600101546114d091906137a2565b6114da9190613810565b915082815f015f8282546114ee9190613576565b9250508190555081816001015f8282546115089190613576565b9250508190555083816002015f8282546115229190613576565b9250508190555083816003015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546115779190613576565b925050819055508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016115b9929190613398565b6020604051808303815f875af11580156115d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115f991906133e9565b503373ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f1935050505015801561163d573d5f803e3d5ffd5b508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fbc7d19d505c7ec4db83f3b51f19fb98c4c8a99922e7839d1ee608dfbee29501b85858860405161169f93929190612e41565b60405180910390a3509250929050565b5f801b81565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b7f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f6117188161212c565b8260025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01819055508160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018190555050505050565b5f6117b06127bd565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156117f85750825b90505f60018367ffffffffffffffff1614801561182b57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611839575080155b15611870576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156118bd576001855f0160086101000a81548160ff0219169083151502179055505b6118c56127e4565b6118cd6127f6565b6118d5612800565b6118e15f801b8c612167565b5061190c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8b612167565b506119377f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38a612167565b506119627f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f89612167565b50865f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315611a3c575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051611a3391906138f4565b60405180910390a15b5050505050505050505050565b611a52826108d9565b611a5b8161212c565b611a658383612266565b50505050565b611a736123cc565b3373ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401611ae49190612efc565b602060405180830381865afa158015611aff573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b2391906134b6565b73ffffffffffffffffffffffffffffffffffffffff1614611b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b7090613957565b60405180910390fd5b5f611b866001804761240d565b905081811015611bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc2906135f3565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330866040518463ffffffff1660e01b8152600401611c2993929190613363565b5f604051808303815f87803b158015611c40575f80fd5b505af1158015611c52573d5f803e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611c99573d5f803e3d5ffd5b508260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e6584604051611d199190612efc565b60405180910390a4505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611d536123cc565b5f8211611d95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8c9061371c565b60405180910390fd5b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8160010154118015611dea57505f815f0154115b611e29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e209061365b565b60405180910390fd5b5f611e3c84835f0154846001015461240d565b905082811015611e81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e78906135f3565b60405180910390fd5b83825f015f828254611e939190613679565b9250508190555080826001015f828254611ead9190613576565b925050819055508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401611ef193929190613363565b6020604051808303815f875af1158015611f0d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f3191906133e9565b503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015611f75573d5f803e3d5ffd5b508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d668684604051611fd592919061319b565b60405180910390a35050505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b5f801b6120148161212c565b81471015612057576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204e906139bf565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f1935050505015801561209a573d5f803e3d5ffd5b505050565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61213d8161213861225f565b61280a565b50565b5f7f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b5f80612171612140565b905061217d848461135e565b612254576001815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506121f061225f565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050612259565b5f9150505b92915050565b5f33905090565b5f80612270612140565b905061227c848461135e565b15612353575f815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506122ef61225f565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001915050612358565b5f9150505b92915050565b61236661285b565b5f61236f612727565b90505f815f015f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6123b461225f565b6040516123c191906139dd565b60405180910390a150565b6123d4611307565b1561240b576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f8060036103e861241e9190613576565b8561242991906137a2565b90505f838261243891906137a2565b90505f826103e88761244a91906137a2565b6124549190613679565b905080826124629190613810565b93505050509392505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061251b57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661250261289b565b73ffffffffffffffffffffffffffffffffffffffff1614155b15612552576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e361257e8161212c565b5050565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156125ea57506040513d601f19601f820116820180604052508101906125e79190613a0a565b60015b61262b57816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161262291906139dd565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461269157806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016126889190612e8e565b60405180910390fd5b61269b83836128ee565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614612725576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b6127566123cc565b5f61275f612727565b90506001815f015f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586127a561225f565b6040516127b291906139dd565b60405180910390a150565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6127ec612960565b6127f46129a0565b565b6127fe612960565b565b612808612960565b565b612814828261135e565b6128575780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161284e929190613a35565b60405180910390fd5b5050565b612863611307565b612899576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6128c77f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6129d0565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6128f7826129d9565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156129535761294d8282612aa2565b5061295c565b61295b612b22565b5b5050565b612968612b5e565b61299e576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6129a8612960565b5f6129b1612727565b90505f815f015f6101000a81548160ff02191690831515021790555050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b03612a3457806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612a2b91906139dd565b60405180910390fd5b80612a607f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6129d0565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff1684604051612acb9190613aa0565b5f60405180830381855af49150503d805f8114612b03576040519150601f19603f3d011682016040523d82523d5f602084013e612b08565b606091505b5091509150612b18858383612b7c565b9250505092915050565b5f341115612b5c576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f612b676127bd565b5f0160089054906101000a900460ff16905090565b606082612b9157612b8c82612c09565b612c01565b5f8251148015612bb757505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15612bf957836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401612bf091906139dd565b60405180910390fd5b819050612c02565b5b9392505050565b5f81511115612c1b5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612c9281612c5e565b8114612c9c575f80fd5b50565b5f81359050612cad81612c89565b92915050565b5f60208284031215612cc857612cc7612c56565b5b5f612cd584828501612c9f565b91505092915050565b5f8115159050919050565b612cf281612cde565b82525050565b5f602082019050612d0b5f830184612ce9565b92915050565b5f819050919050565b612d2381612d11565b8114612d2d575f80fd5b50565b5f81359050612d3e81612d1a565b92915050565b5f60208284031215612d5957612d58612c56565b5b5f612d6684828501612d30565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612d9882612d6f565b9050919050565b612da881612d8e565b8114612db2575f80fd5b50565b5f81359050612dc381612d9f565b92915050565b5f8060408385031215612ddf57612dde612c56565b5b5f612dec85828601612db5565b9250506020612dfd85828601612d30565b9150509250929050565b5f60208284031215612e1c57612e1b612c56565b5b5f612e2984828501612db5565b91505092915050565b612e3b81612d11565b82525050565b5f606082019050612e545f830186612e32565b612e616020830185612e32565b612e6e6040830184612e32565b949350505050565b5f819050919050565b612e8881612e76565b82525050565b5f602082019050612ea15f830184612e7f565b92915050565b612eb081612e76565b8114612eba575f80fd5b50565b5f81359050612ecb81612ea7565b92915050565b5f60208284031215612ee657612ee5612c56565b5b5f612ef384828501612ebd565b91505092915050565b5f602082019050612f0f5f830184612e32565b92915050565b5f8060408385031215612f2b57612f2a612c56565b5b5f612f3885828601612ebd565b9250506020612f4985828601612db5565b9150509250929050565b5f819050919050565b5f612f76612f71612f6c84612d6f565b612f53565b612d6f565b9050919050565b5f612f8782612f5c565b9050919050565b5f612f9882612f7d565b9050919050565b612fa881612f8e565b82525050565b5f602082019050612fc15f830184612f9f565b92915050565b5f8060408385031215612fdd57612fdc612c56565b5b5f612fea85828601612d30565b9250506020612ffb85828601612d30565b9150509250929050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6130538261300d565b810181811067ffffffffffffffff821117156130725761307161301d565b5b80604052505050565b5f613084612c4d565b9050613090828261304a565b919050565b5f67ffffffffffffffff8211156130af576130ae61301d565b5b6130b88261300d565b9050602081019050919050565b828183375f83830152505050565b5f6130e56130e084613095565b61307b565b90508281526020810184848401111561310157613100613009565b5b61310c8482856130c5565b509392505050565b5f82601f83011261312857613127613005565b5b81356131388482602086016130d3565b91505092915050565b5f806040838503121561315757613156612c56565b5b5f61316485828601612db5565b925050602083013567ffffffffffffffff81111561318557613184612c5a565b5b61319185828601613114565b9150509250929050565b5f6040820190506131ae5f830185612e32565b6131bb6020830184612e32565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6131f4826131c2565b6131fe81856131cc565b935061320e8185602086016131dc565b6132178161300d565b840191505092915050565b5f6020820190508181035f83015261323a81846131ea565b905092915050565b5f805f6060848603121561325957613258612c56565b5b5f61326686828701612db5565b935050602061327786828701612d30565b925050604061328886828701612d30565b9150509250925092565b5f805f805f8060c087890312156132ac576132ab612c56565b5b5f6132b989828a01612db5565b96505060206132ca89828a01612db5565b95505060406132db89828a01612db5565b94505060606132ec89828a01612db5565b93505060806132fd89828a01612db5565b92505060a061330e89828a01612db5565b9150509295509295509295565b5f61332582612f7d565b9050919050565b6133358161331b565b82525050565b5f60208201905061334e5f83018461332c565b92915050565b61335d81612d8e565b82525050565b5f6060820190506133765f830186613354565b6133836020830185613354565b6133906040830184612e32565b949350505050565b5f6040820190506133ab5f830185613354565b6133b86020830184612e32565b9392505050565b6133c881612cde565b81146133d2575f80fd5b50565b5f815190506133e3816133bf565b92915050565b5f602082840312156133fe576133fd612c56565b5b5f61340b848285016133d5565b91505092915050565b7f45544820616d6f756e74206d7573742062652067726561746572207468616e205f8201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b5f61346e6024836131cc565b915061347982613414565b604082019050919050565b5f6020820190508181035f83015261349b81613462565b9050919050565b5f815190506134b081612d9f565b92915050565b5f602082840312156134cb576134ca612c56565b5b5f6134d8848285016134a2565b91505092915050565b7f4e4654206e6f74206f776e656420627920636f6e7472616374000000000000005f82015250565b5f6135156019836131cc565b9150613520826134e1565b602082019050919050565b5f6020820190508181035f83015261354281613509565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61358082612d11565b915061358b83612d11565b92508282039050818111156135a3576135a2613549565b5b92915050565b7f536c69707061676520746f6c6572616e636520657863656564656400000000005f82015250565b5f6135dd601b836131cc565b91506135e8826135a9565b602082019050919050565b5f6020820190508181035f83015261360a816135d1565b9050919050565b7f496e73756666696369656e74206c6971756964697479000000000000000000005f82015250565b5f6136456016836131cc565b915061365082613611565b602082019050919050565b5f6020820190508181035f83015261367281613639565b9050919050565b5f61368382612d11565b915061368e83612d11565b92508282019050808211156136a6576136a5613549565b5b92915050565b7f546f6b656e20616d6f756e74206d7573742062652067726561746572207468615f8201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b5f6137066026836131cc565b9150613711826136ac565b604082019050919050565b5f6020820190508181035f830152613733816136fa565b9050919050565b7f496e76616c696420706f6f6c20737461746500000000000000000000000000005f82015250565b5f61376e6012836131cc565b91506137798261373a565b602082019050919050565b5f6020820190508181035f83015261379b81613762565b9050919050565b5f6137ac82612d11565b91506137b783612d11565b92508282026137c581612d11565b915082820484148315176137dc576137db613549565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61381a82612d11565b915061382583612d11565b925082613835576138346137e3565b5b828204905092915050565b7f496e73756666696369656e742045544820616d6f756e740000000000000000005f82015250565b5f6138746017836131cc565b915061387f82613840565b602082019050919050565b5f6020820190508181035f8301526138a181613868565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f6138de6138d96138d4846138a8565b612f53565b6138b1565b9050919050565b6138ee816138c4565b82525050565b5f6020820190506139075f8301846138e5565b92915050565b7f4e6f74206f776e6572206f66204e4654000000000000000000000000000000005f82015250565b5f6139416010836131cc565b915061394c8261390d565b602082019050919050565b5f6020820190508181035f83015261396e81613935565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6139a96014836131cc565b91506139b482613975565b602082019050919050565b5f6020820190508181035f8301526139d68161399d565b9050919050565b5f6020820190506139f05f830184613354565b92915050565b5f81519050613a0481612ea7565b92915050565b5f60208284031215613a1f57613a1e612c56565b5b5f613a2c848285016139f6565b91505092915050565b5f604082019050613a485f830185613354565b613a556020830184612e7f565b9392505050565b5f81519050919050565b5f81905092915050565b5f613a7a82613a5c565b613a848185613a66565b9350613a948185602086016131dc565b80840191505092915050565b5f613aab8284613a70565b91508190509291505056fea26469706673582212205bf6c2efaa4270f923e1d8981c52665ef8b357d3f4539e2838981c619ad515a964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56688700 GT PUSH2 0x101 JUMPI DUP1 PUSH4 0xCC2A9A5B GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xE15CC8DA GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xE15CC8DA EQ PUSH2 0x64A JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x69C JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x6C4 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xD9A37AD2 EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0xDA069683 EQ PUSH2 0x620 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0xA201CCF6 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0xA201CCF6 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xC7088313 EQ PUSH2 0x580 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x56688700 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4B3 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x179 JUMPI DUP1 PUSH4 0x49F0346E GT PUSH2 0x148 JUMPI DUP1 PUSH4 0x49F0346E EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x51422E97 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x419 JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x34AAB064 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3AF JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0xB0FD47E GT PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xB0FD47E EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x242F0551 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x2D11C58A EQ PUSH2 0x30B JUMPI PUSH2 0x1D7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x23245D7 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6B091F9 EQ PUSH2 0x23F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x2CB3 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x2D44 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2E07 JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31F PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x2F15 JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 PUSH2 0x92A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x2FAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x2F15 JUMP JUMPDEST PUSH2 0x94D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C3 PUSH2 0x9C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x2FC7 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3141 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH2 0xD24 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x487 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH2 0x1329 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x2F15 JUMP JUMPDEST PUSH2 0x135E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x2DC9 JUMP JUMPDEST PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x523 SWAP3 SWAP2 SWAP1 PUSH2 0x319B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x537 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x540 PUSH2 0x16AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x561 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x56A PUSH2 0x16B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x3222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x3242 JUMP JUMPDEST PUSH2 0x16EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C9 SWAP2 SWAP1 PUSH2 0x3292 JUMP JUMPDEST PUSH2 0x17A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x2F15 JUMP JUMPDEST PUSH2 0x1A49 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x603 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x2FC7 JUMP JUMPDEST PUSH2 0x1A6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x634 PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x333B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x655 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x670 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x3242 JUMP JUMPDEST PUSH2 0x1D4B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x686 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x2D44 JUMP JUMPDEST PUSH2 0x2008 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D8 PUSH2 0x209F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E5 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x760 JUMPI POP PUSH2 0x75F DUP3 PUSH2 0x20C3 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x773 DUP2 PUSH2 0x212C JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3363 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x80E DUP2 PUSH2 0x212C JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x849 SWAP3 SWAP2 SWAP1 PUSH2 0x3398 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x33E9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8E3 PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH2 0x911 DUP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x91A DUP2 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x924 DUP4 DUP4 PUSH2 0x2167 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x955 PUSH2 0x225F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C3 DUP3 DUP3 PUSH2 0x2266 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x9F2 DUP2 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x9FA PUSH2 0x235E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA05 PUSH2 0x23CC JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP1 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF7 SWAP2 SWAP1 PUSH2 0x34B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB44 SWAP1 PUSH2 0x352B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xB65 CALLVALUE CALLVALUE SELFBALANCE PUSH2 0xB5E SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x240D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA1 SWAP1 PUSH2 0x35F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3363 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xD0D PUSH2 0x246E JUMP JUMPDEST PUSH2 0xD16 DUP3 PUSH2 0x2554 JUMP JUMPDEST PUSH2 0xD20 DUP3 DUP3 PUSH2 0x2582 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD2C PUSH2 0x23CC JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD65 SWAP1 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0xDC3 JUMPI POP PUSH0 DUP2 PUSH0 ADD SLOAD GT JUMPDEST PUSH2 0xE02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF9 SWAP1 PUSH2 0x365B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE15 CALLVALUE DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x240D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE51 SWAP1 PUSH2 0x35F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE6D SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC8 SWAP3 SWAP2 SWAP1 PUSH2 0x3398 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF08 SWAP2 SWAP1 PUSH2 0x33E9 JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66 DUP4 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0xF68 SWAP3 SWAP2 SWAP1 PUSH2 0x319B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7F PUSH2 0x26A0 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xFB0 PUSH2 0x23CC JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE9 SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102B SWAP1 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1071 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3363 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x108D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x33E9 JUMP JUMPDEST POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP1 DUP3 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x1117 JUMPI DUP4 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP CALLVALUE DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 SWAP1 POP PUSH2 0x1224 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x112C JUMPI POP PUSH0 DUP3 PUSH0 ADD SLOAD GT JUMPDEST PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1162 SWAP1 PUSH2 0x3784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH0 ADD SLOAD DUP6 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x11CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C6 SWAP1 PUSH2 0x388A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP4 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11E1 SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE DUP4 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11FB SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH0 ADD SLOAD DUP6 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH2 0x1220 SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1237 SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x3 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A1A2A6176E9646D9E3157F7C2AB3C499F18337C0B0828CFB28E0A61DE4A11F7 DUP7 CALLVALUE DUP6 PUSH1 0x40 MLOAD PUSH2 0x12F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1311 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x1353 DUP2 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x135B PUSH2 0x274E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1368 PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13D9 PUSH2 0x23CC JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x3 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x149B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1492 SWAP1 PUSH2 0x365B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP5 DUP3 PUSH0 ADD SLOAD PUSH2 0x14AF SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH2 0x14B9 SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x2 ADD SLOAD DUP5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH2 0x14DA SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP2 POP DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14EE SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1508 SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1522 SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1577 SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B9 SWAP3 SWAP2 SWAP1 PUSH2 0x3398 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15F9 SWAP2 SWAP1 PUSH2 0x33E9 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x163D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7D19D505C7EC4DB83F3B51F19FB98C4C8A99922E7839D1EE608DFBEE29501B DUP6 DUP6 DUP9 PUSH1 0x40 MLOAD PUSH2 0x169F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F PUSH2 0x1718 DUP2 PUSH2 0x212C JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B0 PUSH2 0x27BD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x17F8 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x182B JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1839 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x18BD JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x18C5 PUSH2 0x27E4 JUMP JUMPDEST PUSH2 0x18CD PUSH2 0x27F6 JUMP JUMPDEST PUSH2 0x18D5 PUSH2 0x2800 JUMP JUMPDEST PUSH2 0x18E1 PUSH0 DUP1 SHL DUP13 PUSH2 0x2167 JUMP JUMPDEST POP PUSH2 0x190C PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP12 PUSH2 0x2167 JUMP JUMPDEST POP PUSH2 0x1937 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP11 PUSH2 0x2167 JUMP JUMPDEST POP PUSH2 0x1962 PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F DUP10 PUSH2 0x2167 JUMP JUMPDEST POP DUP7 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1A3C JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1A33 SWAP2 SWAP1 PUSH2 0x38F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A52 DUP3 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x1A5B DUP2 PUSH2 0x212C JUMP JUMPDEST PUSH2 0x1A65 DUP4 DUP4 PUSH2 0x2266 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1A73 PUSH2 0x23CC JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE4 SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AFF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B23 SWAP2 SWAP1 PUSH2 0x34B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B70 SWAP1 PUSH2 0x3957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1B86 PUSH1 0x1 DUP1 SELFBALANCE PUSH2 0x240D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1BCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC2 SWAP1 PUSH2 0x35F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C29 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3363 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C40 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C52 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1C99 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D19 SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D53 PUSH2 0x23CC JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x1D95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8C SWAP1 PUSH2 0x371C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0x1DEA JUMPI POP PUSH0 DUP2 PUSH0 ADD SLOAD GT JUMPDEST PUSH2 0x1E29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E20 SWAP1 PUSH2 0x365B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1E3C DUP5 DUP4 PUSH0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x240D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1E81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E78 SWAP1 PUSH2 0x35F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E93 SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1EAD SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EF1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3363 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F0D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F31 SWAP2 SWAP1 PUSH2 0x33E9 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1F75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1FD5 SWAP3 SWAP2 SWAP1 PUSH2 0x319B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x2014 DUP2 PUSH2 0x212C JUMP JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x2057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x204E SWAP1 PUSH2 0x39BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x209A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213D DUP2 PUSH2 0x2138 PUSH2 0x225F JUMP JUMPDEST PUSH2 0x280A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2171 PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP PUSH2 0x217D DUP5 DUP5 PUSH2 0x135E JUMP JUMPDEST PUSH2 0x2254 JUMPI PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x21F0 PUSH2 0x225F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x2259 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2270 PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP PUSH2 0x227C DUP5 DUP5 PUSH2 0x135E JUMP JUMPDEST ISZERO PUSH2 0x2353 JUMPI PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x22EF PUSH2 0x225F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x2358 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2366 PUSH2 0x285B JUMP JUMPDEST PUSH0 PUSH2 0x236F PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x23B4 PUSH2 0x225F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C1 SWAP2 SWAP1 PUSH2 0x39DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x23D4 PUSH2 0x1307 JUMP JUMPDEST ISZERO PUSH2 0x240B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH2 0x3E8 PUSH2 0x241E SWAP2 SWAP1 PUSH2 0x3576 JUMP JUMPDEST DUP6 PUSH2 0x2429 SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x2438 SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x3E8 DUP8 PUSH2 0x244A SWAP2 SWAP1 PUSH2 0x37A2 JUMP JUMPDEST PUSH2 0x2454 SWAP2 SWAP1 PUSH2 0x3679 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x2462 SWAP2 SWAP1 PUSH2 0x3810 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x251B JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2502 PUSH2 0x289B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2552 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x257E DUP2 PUSH2 0x212C JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x25EA JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25E7 SWAP2 SWAP1 PUSH2 0x3A0A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x262B JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2622 SWAP2 SWAP1 PUSH2 0x39DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x2691 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2688 SWAP2 SWAP1 PUSH2 0x2E8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x269B DUP4 DUP4 PUSH2 0x28EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2725 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2756 PUSH2 0x23CC JUMP JUMPDEST PUSH0 PUSH2 0x275F PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x27A5 PUSH2 0x225F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B2 SWAP2 SWAP1 PUSH2 0x39DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x27EC PUSH2 0x2960 JUMP JUMPDEST PUSH2 0x27F4 PUSH2 0x29A0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x27FE PUSH2 0x2960 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2808 PUSH2 0x2960 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2814 DUP3 DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH2 0x2857 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284E SWAP3 SWAP2 SWAP1 PUSH2 0x3A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2863 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x2899 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x28C7 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x29D0 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x28F7 DUP3 PUSH2 0x29D9 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2953 JUMPI PUSH2 0x294D DUP3 DUP3 PUSH2 0x2AA2 JUMP JUMPDEST POP PUSH2 0x295C JUMP JUMPDEST PUSH2 0x295B PUSH2 0x2B22 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2968 PUSH2 0x2B5E JUMP JUMPDEST PUSH2 0x299E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x29A8 PUSH2 0x2960 JUMP JUMPDEST PUSH0 PUSH2 0x29B1 PUSH2 0x2727 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2A34 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A2B SWAP2 SWAP1 PUSH2 0x39DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2A60 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x29D0 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2ACB SWAP2 SWAP1 PUSH2 0x3AA0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2B03 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B08 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2B18 DUP6 DUP4 DUP4 PUSH2 0x2B7C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x2B5C JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2B67 PUSH2 0x27BD JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2B91 JUMPI PUSH2 0x2B8C DUP3 PUSH2 0x2C09 JUMP JUMPDEST PUSH2 0x2C01 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2BB7 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2BF9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BF0 SWAP2 SWAP1 PUSH2 0x39DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2C02 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2C1B JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C92 DUP2 PUSH2 0x2C5E JUMP JUMPDEST DUP2 EQ PUSH2 0x2C9C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2CAD DUP2 PUSH2 0x2C89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CC8 JUMPI PUSH2 0x2CC7 PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2CD5 DUP5 DUP3 DUP6 ADD PUSH2 0x2C9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF2 DUP2 PUSH2 0x2CDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D0B PUSH0 DUP4 ADD DUP5 PUSH2 0x2CE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D23 DUP2 PUSH2 0x2D11 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D3E DUP2 PUSH2 0x2D1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D59 JUMPI PUSH2 0x2D58 PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D66 DUP5 DUP3 DUP6 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D98 DUP3 PUSH2 0x2D6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DA8 DUP2 PUSH2 0x2D8E JUMP JUMPDEST DUP2 EQ PUSH2 0x2DB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2DC3 DUP2 PUSH2 0x2D9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DDF JUMPI PUSH2 0x2DDE PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DEC DUP6 DUP3 DUP7 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DFD DUP6 DUP3 DUP7 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E1C JUMPI PUSH2 0x2E1B PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2E29 DUP5 DUP3 DUP6 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E3B DUP2 PUSH2 0x2D11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E54 PUSH0 DUP4 ADD DUP7 PUSH2 0x2E32 JUMP JUMPDEST PUSH2 0x2E61 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2E32 JUMP JUMPDEST PUSH2 0x2E6E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E32 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E88 DUP2 PUSH2 0x2E76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EA1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EB0 DUP2 PUSH2 0x2E76 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EBA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2ECB DUP2 PUSH2 0x2EA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EE6 JUMPI PUSH2 0x2EE5 PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2EF3 DUP5 DUP3 DUP6 ADD PUSH2 0x2EBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F0F PUSH0 DUP4 ADD DUP5 PUSH2 0x2E32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F2B JUMPI PUSH2 0x2F2A PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2F38 DUP6 DUP3 DUP7 ADD PUSH2 0x2EBD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F49 DUP6 DUP3 DUP7 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F76 PUSH2 0x2F71 PUSH2 0x2F6C DUP5 PUSH2 0x2D6F JUMP JUMPDEST PUSH2 0x2F53 JUMP JUMPDEST PUSH2 0x2D6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F87 DUP3 PUSH2 0x2F5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2F98 DUP3 PUSH2 0x2F7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FA8 DUP2 PUSH2 0x2F8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FC1 PUSH0 DUP4 ADD DUP5 PUSH2 0x2F9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FDD JUMPI PUSH2 0x2FDC PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FEA DUP6 DUP3 DUP7 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FFB DUP6 DUP3 DUP7 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x3053 DUP3 PUSH2 0x300D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3072 JUMPI PUSH2 0x3071 PUSH2 0x301D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3084 PUSH2 0x2C4D JUMP JUMPDEST SWAP1 POP PUSH2 0x3090 DUP3 DUP3 PUSH2 0x304A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x30AF JUMPI PUSH2 0x30AE PUSH2 0x301D JUMP JUMPDEST JUMPDEST PUSH2 0x30B8 DUP3 PUSH2 0x300D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30E5 PUSH2 0x30E0 DUP5 PUSH2 0x3095 JUMP JUMPDEST PUSH2 0x307B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3101 JUMPI PUSH2 0x3100 PUSH2 0x3009 JUMP JUMPDEST JUMPDEST PUSH2 0x310C DUP5 DUP3 DUP6 PUSH2 0x30C5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3128 JUMPI PUSH2 0x3127 PUSH2 0x3005 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3138 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x30D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3157 JUMPI PUSH2 0x3156 PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3164 DUP6 DUP3 DUP7 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3185 JUMPI PUSH2 0x3184 PUSH2 0x2C5A JUMP JUMPDEST JUMPDEST PUSH2 0x3191 DUP6 DUP3 DUP7 ADD PUSH2 0x3114 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x31AE PUSH0 DUP4 ADD DUP6 PUSH2 0x2E32 JUMP JUMPDEST PUSH2 0x31BB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E32 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31F4 DUP3 PUSH2 0x31C2 JUMP JUMPDEST PUSH2 0x31FE DUP2 DUP6 PUSH2 0x31CC JUMP JUMPDEST SWAP4 POP PUSH2 0x320E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x31DC JUMP JUMPDEST PUSH2 0x3217 DUP2 PUSH2 0x300D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x323A DUP2 DUP5 PUSH2 0x31EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3259 JUMPI PUSH2 0x3258 PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3266 DUP7 DUP3 DUP8 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3277 DUP7 DUP3 DUP8 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3288 DUP7 DUP3 DUP8 ADD PUSH2 0x2D30 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x32AC JUMPI PUSH2 0x32AB PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x32B9 DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x32CA DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x32DB DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x32EC DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x32FD DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x330E DUP10 DUP3 DUP11 ADD PUSH2 0x2DB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH2 0x3325 DUP3 PUSH2 0x2F7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3335 DUP2 PUSH2 0x331B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x334E PUSH0 DUP4 ADD DUP5 PUSH2 0x332C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x335D DUP2 PUSH2 0x2D8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3376 PUSH0 DUP4 ADD DUP7 PUSH2 0x3354 JUMP JUMPDEST PUSH2 0x3383 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3354 JUMP JUMPDEST PUSH2 0x3390 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E32 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33AB PUSH0 DUP4 ADD DUP6 PUSH2 0x3354 JUMP JUMPDEST PUSH2 0x33B8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E32 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x33C8 DUP2 PUSH2 0x2CDE JUMP JUMPDEST DUP2 EQ PUSH2 0x33D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x33E3 DUP2 PUSH2 0x33BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33FE JUMPI PUSH2 0x33FD PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x340B DUP5 DUP3 DUP6 ADD PUSH2 0x33D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E74206D7573742062652067726561746572207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7A65726F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x346E PUSH1 0x24 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3479 DUP3 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x349B DUP2 PUSH2 0x3462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x34B0 DUP2 PUSH2 0x2D9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34CB JUMPI PUSH2 0x34CA PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x34D8 DUP5 DUP3 DUP6 ADD PUSH2 0x34A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E4654206E6F74206F776E656420627920636F6E747261637400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3515 PUSH1 0x19 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3520 DUP3 PUSH2 0x34E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3542 DUP2 PUSH2 0x3509 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3580 DUP3 PUSH2 0x2D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x358B DUP4 PUSH2 0x2D11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x35A3 JUMPI PUSH2 0x35A2 PUSH2 0x3549 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536C69707061676520746F6C6572616E63652065786365656465640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x35DD PUSH1 0x1B DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x35E8 DUP3 PUSH2 0x35A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x360A DUP2 PUSH2 0x35D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3645 PUSH1 0x16 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3650 DUP3 PUSH2 0x3611 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3672 DUP2 PUSH2 0x3639 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3683 DUP3 PUSH2 0x2D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x368E DUP4 PUSH2 0x2D11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x36A6 JUMPI PUSH2 0x36A5 PUSH2 0x3549 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3706 PUSH1 0x26 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3711 DUP3 PUSH2 0x36AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3733 DUP2 PUSH2 0x36FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420706F6F6C2073746174650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x376E PUSH1 0x12 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x3779 DUP3 PUSH2 0x373A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x379B DUP2 PUSH2 0x3762 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x37AC DUP3 PUSH2 0x2D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x37B7 DUP4 PUSH2 0x2D11 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x37C5 DUP2 PUSH2 0x2D11 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x37DC JUMPI PUSH2 0x37DB PUSH2 0x3549 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x381A DUP3 PUSH2 0x2D11 JUMP JUMPDEST SWAP2 POP PUSH2 0x3825 DUP4 PUSH2 0x2D11 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3835 JUMPI PUSH2 0x3834 PUSH2 0x37E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742045544820616D6F756E74000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3874 PUSH1 0x17 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x387F DUP3 PUSH2 0x3840 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x38A1 DUP2 PUSH2 0x3868 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x38DE PUSH2 0x38D9 PUSH2 0x38D4 DUP5 PUSH2 0x38A8 JUMP JUMPDEST PUSH2 0x2F53 JUMP JUMPDEST PUSH2 0x38B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38EE DUP2 PUSH2 0x38C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3907 PUSH0 DUP4 ADD DUP5 PUSH2 0x38E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E6572206F66204E465400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3941 PUSH1 0x10 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x394C DUP3 PUSH2 0x390D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x396E DUP2 PUSH2 0x3935 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x39A9 PUSH1 0x14 DUP4 PUSH2 0x31CC JUMP JUMPDEST SWAP2 POP PUSH2 0x39B4 DUP3 PUSH2 0x3975 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x39D6 DUP2 PUSH2 0x399D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x3354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A04 DUP2 PUSH2 0x2EA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A1F JUMPI PUSH2 0x3A1E PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3A2C DUP5 DUP3 DUP6 ADD PUSH2 0x39F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A48 PUSH0 DUP4 ADD DUP6 PUSH2 0x3354 JUMP JUMPDEST PUSH2 0x3A55 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E7F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3A7A DUP3 PUSH2 0x3A5C JUMP JUMPDEST PUSH2 0x3A84 DUP2 DUP6 PUSH2 0x3A66 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x31DC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3AAB DUP3 DUP5 PUSH2 0x3A70 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xF6 0xC2 0xEF 0xAA TIMESTAMP PUSH17 0xF923E1D8981C52665EF8B357D3F4539E28 CODESIZE SWAP9 SHR PUSH2 0x9AD5 ISZERO 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "638:8141:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8625:152:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8456:163;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1283:55;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;890:84;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4759:191:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;981:36:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5246:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:33:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6348:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:75:16;;;;;;;;;;;;;:::i;:::-;;6319:641;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4158:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4824:703:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3705:134:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2758:1249:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2692:145:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2600:71:16;;;;;;;;;;;;;:::i;:::-;;3732:207:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4013:805:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2317:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7987:255:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1960:634;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5662:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6966:527:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1075:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5533:780;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;750:62;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8248:202;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;818:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3443:202:0;3528:4;3566:32;3551:47;;;:11;:47;;;;:87;;;;3602:36;3626:11;3602:23;:36::i;:::-;3551:87;3544:94;;3443:202;;;:::o;8625:152:16:-;2362:4:0;8681:18:16;;3191:16:0;3202:4;3191:10;:16::i;:::-;8711:6:16::1;;;;;;;;;;;:23;;;8743:4;8750:10;8762:7;8711:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8625:152:::0;;:::o;8456:163::-;2362:4:0;8529:18:16;;3191:16:0;3202:4;3191:10;:16::i;:::-;8577:5:16::1;8559:33;;;8593:10;8605:6;8559:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8456:163:::0;;;:::o;1283:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;890:84::-;939:35;890:84;:::o;4759:191:0:-;4824:7;4843:30;4876:26;:24;:26::i;:::-;4843:59;;4919:1;:8;;:14;4928:4;4919:14;;;;;;;;;;;:24;;;4912:31;;;4759:191;;;:::o;981:36:16:-;1016:1;981:36;:::o;5246:136:0:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;1036:33:16:-;;;;;;;;;;;;:::o;6348:245:0:-;6463:12;:10;:12::i;:::-;6441:34;;:18;:34;;;6437:102;;6498:30;;;;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;2677:75:16:-;788:24;3191:16:0;3202:4;3191:10;:16::i;:::-;2735:10:16::1;:8;:10::i;:::-;2677:75:::0;:::o;6319:641::-;2316:19:6;:17;:19::i;:::-;6436:1:16::1;6424:9;:13;6416:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;6531:4;6496:40;;:6;;;;;;;;;;;:14;;;6511:7;6496:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;6488:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;6577:17;6597:64;6613:9;6648;6624:21;:33;;;;:::i;:::-;6659:1;6597:15;:64::i;:::-;6577:84;;6721:6;6708:9;:19;;6700:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;6778:10;6770:28;;:39;6799:9;6770:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6819:6;;;;;;;;;;;:23;;;6851:4;6858:10;6870:7;6819:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6934:7;6925:6;;;;;;;;;;;6894:59;;6905:10;6894:59;;;6943:9;6894:59;;;;;;:::i;:::-;;;;;;;;6406:554;6319:641:::0;;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;4824:703:16:-;2316:19:6;:17;:19::i;:::-;4945:1:16::1;4933:9;:13;4925:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4997:26;5026:14;:21;5041:5;5026:21;;;;;;;;;;;;;;;4997:50;;5082:1;5065:4;:14;;;:18;:42;;;;;5106:1;5087:4;:16;;;:20;5065:42;5057:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;5145:19;5167:60;5183:9;5194:4;:14;;;5210:4;:16;;;5167:15;:60::i;:::-;5145:82;;5260:9;5245:11;:24;;5237:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;5330:9;5312:4;:14;;;:27;;;;;;;:::i;:::-;;;;;;;;5369:11;5349:4;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;5409:5;5391:33;;;5425:10;5437:11;5391:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5490:5;5465:55;;5478:10;5465:55;;;5497:11;5510:9;5465:55;;;;;;;:::i;:::-;;;;;;;;4915:612;;4824:703:::0;;:::o;3705:134:2:-;3774:7;2924:20;:18;:20::i;:::-;1327:66:11::1;3800:32:2;;3793:39;;3705:134:::0;:::o;2758:1249:16:-;2856:7;2316:19:6;:17;:19::i;:::-;2897:1:16::1;2883:11;:15;2875:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2971:1;2959:9;:13;2951:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3042:5;3024:37;;;3062:10;3082:4;3089:11;3024:77;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3112:26;3141:14;:21;3156:5;3141:21;;;;;;;;;;;;;;;3112:50;;3172:17;3227:1:::0;3204:4:::1;:19;;;:24:::0;3200:599:::1;;3263:11;3244:4;:16;;:30;;;;3305:9;3288:4;:14;;:26;;;;3340:11;3328:23;;3200:599;;;3407:1;3390:4;:14;;;:18;:42;;;;;3431:1;3412:4;:16;;;:20;3390:42;3382:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3470:22;3528:4;:16;;;3513:11;3496:4;:14;;;:28;;;;:::i;:::-;3495:49;;;;:::i;:::-;3470:74;;3579:14;3566:9;:27;;3558:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3656:11;3636:4;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;3699:9;3681:4;:14;;;:27;;;;;;;:::i;:::-;;;;;;;;3772:4;:16;;;3757:11;3735:4;:19;;;:33;;;;:::i;:::-;3734:54;;;;:::i;:::-;3722:66;;3368:431;3200:599;3832:9;3809:4;:19;;;:32;;;;;;;:::i;:::-;;;;;;;;3881:9;3851:4;:14;;:26;3866:10;3851:26;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;3933:5;3906:68;;3921:10;3906:68;;;3940:11;3953:9;3964;3906:68;;;;;;;;:::i;:::-;;;;;;;;3991:9;3984:16;;;;2758:1249:::0;;;;:::o;2692:145:6:-;2739:4;2755:25;2783:21;:19;:21::i;:::-;2755:49;;2821:1;:9;;;;;;;;;;;;2814:16;;;2692:145;:::o;2600:71:16:-;788:24;3191:16:0;3202:4;3191:10;:16::i;:::-;2656:8:16::1;:6;:8::i;:::-;2600:71:::0;:::o;3732:207:0:-;3809:4;3825:30;3858:26;:24;:26::i;:::-;3825:59;;3901:1;:8;;:14;3910:4;3901:14;;;;;;;;;;;:22;;:31;3924:7;3901:31;;;;;;;;;;;;;;;;;;;;;;;;;3894:38;;;3732:207;;;;:::o;4013:805:16:-;4104:19;4125:17;2316:19:6;:17;:19::i;:::-;4154:26:16::1;4183:14;:21;4198:5;4183:21;;;;;;;;;;;;;;;4154:50;;4252:9;4222:4;:14;;:26;4237:10;4222:26;;;;;;;;;;;;;;;;:39;;4214:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;4346:4;:19;;;4333:9;4314:4;:16;;;:28;;;;:::i;:::-;4313:52;;;;:::i;:::-;4299:66;;4418:4;:19;;;4405:9;4388:4;:14;;;:26;;;;:::i;:::-;4387:50;;;;:::i;:::-;4375:62;;4468:11;4448:4;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;4507:9;4489:4;:14;;;:27;;;;;;;:::i;:::-;;;;;;;;4549:9;4526:4;:19;;;:32;;;;;;;:::i;:::-;;;;;;;;4598:9;4568:4;:14;;:26;4583:10;4568:26;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;4636:5;4618:33;;;4652:10;4664:11;4618:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4694:10;4686:28;;:39;4715:9;4686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;4770:5;4741:70;;4758:10;4741:70;;;4777:11;4790:9;4801;4741:70;;;;;;;;:::i;:::-;;;;;;;;4144:674;4013:805:::0;;;;;:::o;2317:49:0:-;2362:4;2317:49;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;7987:255:16:-;939:35;3191:16:0;3202:4;3191:10;:16::i;:::-;8165:14:16::1;8129;:21;8144:5;8129:21;;;;;;;;;;;;;;;:33;;:50;;;;8223:12;8189:14;:21;8204:5;8189:21;;;;;;;;;;;;;;;:31;;:46;;;;7987:255:::0;;;;:::o;1960:634::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;2193:17:16::1;:15;:17::i;:::-;2220:22;:20;:22::i;:::-;2252:24;:22;:24::i;:::-;2287:44;2362:4:0;2298:18:16::0;::::1;2318:12;2287:10;:44::i;:::-;;2341:31;788:24;2365:6;2341:10;:31::i;:::-;;2382:35;858:26;2408:8;2382:10;:35::i;:::-;;2427:52;939:35;2462:16;2427:10;:52::i;:::-;;2519:15;2490:8;::::0;:45:::1;;;;;;;;;;;;;;;;;;2573:13;2545:6;;:42;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1960:634:16;;;;;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;:::-;;5662:138:::0;;;:::o;6966:527:16:-;2316:19:6;:17;:19::i;:::-;7090:10:16::1;7063:37;;:6;;;;;;;;;;;:14;;;7078:7;7063:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;;7055:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;7132:17;7152:44;7168:1;7171::::0;7174:21:::1;7152:15;:44::i;:::-;7132:64;;7254:6;7241:9;:19;;7233:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;7303:6;;;;;;;;;;;:23;;;7327:10;7347:4;7354:7;7303:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7380:10;7372:28;;:39;7401:9;7372:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7467:7;7458:6;;;;;;;;;;;7427:59;;7438:10;7427:59;;;7476:9;7427:59;;;;;;:::i;:::-;;;;;;;;7045:448;6966:527:::0;;:::o;1075:32::-;;;;;;;;;;;;;:::o;5533:780::-;2316:19:6;:17;:19::i;:::-;5666:1:16::1;5652:11;:15;5644:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5720:26;5749:14;:21;5764:5;5749:21;;;;;;;;;;;;;;;5720:50;;5805:1;5788:4;:14;;;:18;:42;;;;;5829:1;5810:4;:16;;;:20;5788:42;5780:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;5868:17;5888:62;5904:11;5917:4;:16;;;5935:4;:14;;;5888:15;:62::i;:::-;5868:82;;5981:6;5968:9;:19;;5960:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;6050:11;6030:4;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;6089:9;6071:4;:14;;;:27;;;;;;;:::i;:::-;;;;;;;;6127:5;6109:37;;;6147:10;6167:4;6174:11;6109:77;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6204:10;6196:28;;:39;6225:9;6196:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6276:5;6251:55;;6264:10;6251:55;;;6283:11;6296:9;6251:55;;;;;;;:::i;:::-;;;;;;;;5634:679;;5533:780:::0;;;:::o;750:62::-;788:24;750:62;:::o;8248:202::-;2362:4:0;8303:18:16;;3191:16:0;3202:4;3191:10;:16::i;:::-;8366:6:16::1;8341:21;:31;;8333:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8415:10;8407:28;;:36;8436:6;8407:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;8248:202:::0;;:::o;818:66::-;858:26;818:66;:::o;1034:146:7:-;1110:4;1148:25;1133:40;;;:11;:40;;;;1126:47;;1034:146;;;:::o;4148:103:0:-;4214:30;4225:4;4231:12;:10;:12::i;:::-;4214:10;:30::i;:::-;4148:103;:::o;2787:177::-;2845:30;2920:28;2910:38;;2787:177;:::o;7270:387::-;7347:4;7363:30;7396:26;:24;:26::i;:::-;7363:59;;7437:22;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7509:4;7475:1;:8;;:14;7484:4;7475:14;;;;;;;;;;;:22;;:31;7498:7;7475:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7559:12;:10;:12::i;:::-;7532:40;;7550:7;7532:40;;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;7270:387;;;;;:::o;887:96:5:-;940:7;966:10;959:17;;887:96;:::o;7892:388:0:-;7970:4;7986:30;8019:26;:24;:26::i;:::-;7986:59;;8059:22;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:1;:8;;:14;8106:4;8097:14;;;;;;;;;;;:22;;:31;8120:7;8097:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;8182:12;:10;:12::i;:::-;8155:40;;8173:7;8155:40;;8167:4;8155:40;;;;;;;;;;8216:4;8209:11;;;;;8055:219;8258:5;8251:12;;;7892:388;;;;;:::o;3674:178:6:-;2563:16;:14;:16::i;:::-;3732:25:::1;3760:21;:19;:21::i;:::-;3732:49;;3803:5;3791:1;:9;;;:17;;;;;;;;;;;;;;;;;;3823:22;3832:12;:10;:12::i;:::-;3823:22;;;;;;:::i;:::-;;;;;;;;3722:130;3674:178::o:0;2905:128::-;2970:8;:6;:8::i;:::-;2966:61;;;3001:15;;;;;;;;;;;;;;2966:61;2905:128::o;7499:378:16:-;7613:7;7632:26;1016:1;7676:4;:15;;;;:::i;:::-;7661:11;:31;;;;:::i;:::-;7632:60;;7702:17;7743:13;7722:18;:34;;;;:::i;:::-;7702:54;;7766:19;7812:18;7804:4;7789:12;:19;;;;:::i;:::-;7788:42;;;;:::i;:::-;7766:64;;7859:11;7847:9;:23;;;;:::i;:::-;7840:30;;;;;7499:378;;;;;:::o;4599:312:2:-;4688:6;4671:23;;4679:4;4671:23;;;:120;;;;4785:6;4749:42;;:32;:30;:32::i;:::-;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4654:251;4599:312::o;7883:98:16:-;858:26;3191:16:0;3202:4;3191:10;:16::i;:::-;7883:98:16;;:::o;6052:538:2:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6555:17;6513:60;;;;;;;;;;;:::i;:::-;;;;;;;;6147:437;1327:66:11;6253:32:2;;6245:4;:40;6241:120;;6341:4;6312:34;;;;;;;;;;;:::i;:::-;;;;;;;;6241:120;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5111:6;5094:23;;5102:4;5094:23;;;5090:145;;5195:29;;;;;;;;;;;;;;5090:145;5028:213::o;1147:162:6:-;1200:25;1270:23;1260:33;;1147:162;:::o;3366:176::-;2316:19;:17;:19::i;:::-;3425:25:::1;3453:21;:19;:21::i;:::-;3425:49;;3496:4;3484:1;:9;;;:16;;;;;;;;;;;;;;;;;;3515:20;3522:12;:10;:12::i;:::-;3515:20;;;;;;:::i;:::-;;;;;;;;3415:127;3366:176::o:0;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1836:97:6:-;6931:20:1;:18;:20::i;:::-;1899:27:6::1;:25;:27::i;:::-;1836:97::o:0;3231:65:0:-;6931:20:1;:18;:20::i;:::-;3231:65:0:o;2968:67:2:-;6931:20:1;:18;:20::i;:::-;2968:67:2:o;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4547:7;4556:4;4514:47;;;;;;;;;;;;:::i;:::-;;;;;;;;4464:108;4381:197;;:::o;3105:126:6:-;3168:8;:6;:8::i;:::-;3163:62;;3199:15;;;;;;;;;;;;;;3163:62;3105:126::o;1957:138:11:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1939:156:6:-;6931:20:1;:18;:20::i;:::-;2012:25:6::1;2040:21;:19;:21::i;:::-;2012:49;;2083:5;2071:1;:9;;;:17;;;;;;;;;;;;;;;;;;2002:93;1939:156::o:0;1684:190:14:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:11:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:13:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:11:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4625:582:13:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:17;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:126::-;2246:7;2286:42;2279:5;2275:54;2264:65;;2209:126;;;:::o;2341:96::-;2378:7;2407:24;2425:5;2407:24;:::i;:::-;2396:35;;2341:96;;;:::o;2443:122::-;2516:24;2534:5;2516:24;:::i;:::-;2509:5;2506:35;2496:63;;2555:1;2552;2545:12;2496:63;2443:122;:::o;2571:139::-;2617:5;2655:6;2642:20;2633:29;;2671:33;2698:5;2671:33;:::i;:::-;2571:139;;;;:::o;2716:474::-;2784:6;2792;2841:2;2829:9;2820:7;2816:23;2812:32;2809:119;;;2847:79;;:::i;:::-;2809:119;2967:1;2992:53;3037:7;3028:6;3017:9;3013:22;2992:53;:::i;:::-;2982:63;;2938:117;3094:2;3120:53;3165:7;3156:6;3145:9;3141:22;3120:53;:::i;:::-;3110:63;;3065:118;2716:474;;;;;:::o;3196:329::-;3255:6;3304:2;3292:9;3283:7;3279:23;3275:32;3272:119;;;3310:79;;:::i;:::-;3272:119;3430:1;3455:53;3500:7;3491:6;3480:9;3476:22;3455:53;:::i;:::-;3445:63;;3401:117;3196:329;;;;:::o;3531:118::-;3618:24;3636:5;3618:24;:::i;:::-;3613:3;3606:37;3531:118;;:::o;3655:442::-;3804:4;3842:2;3831:9;3827:18;3819:26;;3855:71;3923:1;3912:9;3908:17;3899:6;3855:71;:::i;:::-;3936:72;4004:2;3993:9;3989:18;3980:6;3936:72;:::i;:::-;4018;4086:2;4075:9;4071:18;4062:6;4018:72;:::i;:::-;3655:442;;;;;;:::o;4103:77::-;4140:7;4169:5;4158:16;;4103:77;;;:::o;4186:118::-;4273:24;4291:5;4273:24;:::i;:::-;4268:3;4261:37;4186:118;;:::o;4310:222::-;4403:4;4441:2;4430:9;4426:18;4418:26;;4454:71;4522:1;4511:9;4507:17;4498:6;4454:71;:::i;:::-;4310:222;;;;:::o;4538:122::-;4611:24;4629:5;4611:24;:::i;:::-;4604:5;4601:35;4591:63;;4650:1;4647;4640:12;4591:63;4538:122;:::o;4666:139::-;4712:5;4750:6;4737:20;4728:29;;4766:33;4793:5;4766:33;:::i;:::-;4666:139;;;;:::o;4811:329::-;4870:6;4919:2;4907:9;4898:7;4894:23;4890:32;4887:119;;;4925:79;;:::i;:::-;4887:119;5045:1;5070:53;5115:7;5106:6;5095:9;5091:22;5070:53;:::i;:::-;5060:63;;5016:117;4811:329;;;;:::o;5146:222::-;5239:4;5277:2;5266:9;5262:18;5254:26;;5290:71;5358:1;5347:9;5343:17;5334:6;5290:71;:::i;:::-;5146:222;;;;:::o;5374:474::-;5442:6;5450;5499:2;5487:9;5478:7;5474:23;5470:32;5467:119;;;5505:79;;:::i;:::-;5467:119;5625:1;5650:53;5695:7;5686:6;5675:9;5671:22;5650:53;:::i;:::-;5640:63;;5596:117;5752:2;5778:53;5823:7;5814:6;5803:9;5799:22;5778:53;:::i;:::-;5768:63;;5723:118;5374:474;;;;;:::o;5854:60::-;5882:3;5903:5;5896:12;;5854:60;;;:::o;5920:142::-;5970:9;6003:53;6021:34;6030:24;6048:5;6030:24;:::i;:::-;6021:34;:::i;:::-;6003:53;:::i;:::-;5990:66;;5920:142;;;:::o;6068:126::-;6118:9;6151:37;6182:5;6151:37;:::i;:::-;6138:50;;6068:126;;;:::o;6200:151::-;6275:9;6308:37;6339:5;6308:37;:::i;:::-;6295:50;;6200:151;;;:::o;6357:181::-;6469:62;6525:5;6469:62;:::i;:::-;6464:3;6457:75;6357:181;;:::o;6544:272::-;6662:4;6700:2;6689:9;6685:18;6677:26;;6713:96;6806:1;6795:9;6791:17;6782:6;6713:96;:::i;:::-;6544:272;;;;:::o;6822:474::-;6890:6;6898;6947:2;6935:9;6926:7;6922:23;6918:32;6915:119;;;6953:79;;:::i;:::-;6915:119;7073:1;7098:53;7143:7;7134:6;7123:9;7119:22;7098:53;:::i;:::-;7088:63;;7044:117;7200:2;7226:53;7271:7;7262:6;7251:9;7247:22;7226:53;:::i;:::-;7216:63;;7171:118;6822:474;;;;;:::o;7302:117::-;7411:1;7408;7401:12;7425:117;7534:1;7531;7524:12;7548:102;7589:6;7640:2;7636:7;7631:2;7624:5;7620:14;7616:28;7606:38;;7548:102;;;:::o;7656:180::-;7704:77;7701:1;7694:88;7801:4;7798:1;7791:15;7825:4;7822:1;7815:15;7842:281;7925:27;7947:4;7925:27;:::i;:::-;7917:6;7913:40;8055:6;8043:10;8040:22;8019:18;8007:10;8004:34;8001:62;7998:88;;;8066:18;;:::i;:::-;7998:88;8106:10;8102:2;8095:22;7885:238;7842:281;;:::o;8129:129::-;8163:6;8190:20;;:::i;:::-;8180:30;;8219:33;8247:4;8239:6;8219:33;:::i;:::-;8129:129;;;:::o;8264:307::-;8325:4;8415:18;8407:6;8404:30;8401:56;;;8437:18;;:::i;:::-;8401:56;8475:29;8497:6;8475:29;:::i;:::-;8467:37;;8559:4;8553;8549:15;8541:23;;8264:307;;;:::o;8577:148::-;8675:6;8670:3;8665;8652:30;8716:1;8707:6;8702:3;8698:16;8691:27;8577:148;;;:::o;8731:423::-;8808:5;8833:65;8849:48;8890:6;8849:48;:::i;:::-;8833:65;:::i;:::-;8824:74;;8921:6;8914:5;8907:21;8959:4;8952:5;8948:16;8997:3;8988:6;8983:3;8979:16;8976:25;8973:112;;;9004:79;;:::i;:::-;8973:112;9094:54;9141:6;9136:3;9131;9094:54;:::i;:::-;8814:340;8731:423;;;;;:::o;9173:338::-;9228:5;9277:3;9270:4;9262:6;9258:17;9254:27;9244:122;;9285:79;;:::i;:::-;9244:122;9402:6;9389:20;9427:78;9501:3;9493:6;9486:4;9478:6;9474:17;9427:78;:::i;:::-;9418:87;;9234:277;9173:338;;;;:::o;9517:652::-;9594:6;9602;9651:2;9639:9;9630:7;9626:23;9622:32;9619:119;;;9657:79;;:::i;:::-;9619:119;9777:1;9802:53;9847:7;9838:6;9827:9;9823:22;9802:53;:::i;:::-;9792:63;;9748:117;9932:2;9921:9;9917:18;9904:32;9963:18;9955:6;9952:30;9949:117;;;9985:79;;:::i;:::-;9949:117;10090:62;10144:7;10135:6;10124:9;10120:22;10090:62;:::i;:::-;10080:72;;9875:287;9517:652;;;;;:::o;10175:332::-;10296:4;10334:2;10323:9;10319:18;10311:26;;10347:71;10415:1;10404:9;10400:17;10391:6;10347:71;:::i;:::-;10428:72;10496:2;10485:9;10481:18;10472:6;10428:72;:::i;:::-;10175:332;;;;;:::o;10513:99::-;10565:6;10599:5;10593:12;10583:22;;10513:99;;;:::o;10618:169::-;10702:11;10736:6;10731:3;10724:19;10776:4;10771:3;10767:14;10752:29;;10618:169;;;;:::o;10793:139::-;10882:6;10877:3;10872;10866:23;10923:1;10914:6;10909:3;10905:16;10898:27;10793:139;;;:::o;10938:377::-;11026:3;11054:39;11087:5;11054:39;:::i;:::-;11109:71;11173:6;11168:3;11109:71;:::i;:::-;11102:78;;11189:65;11247:6;11242:3;11235:4;11228:5;11224:16;11189:65;:::i;:::-;11279:29;11301:6;11279:29;:::i;:::-;11274:3;11270:39;11263:46;;11030:285;10938:377;;;;:::o;11321:313::-;11434:4;11472:2;11461:9;11457:18;11449:26;;11521:9;11515:4;11511:20;11507:1;11496:9;11492:17;11485:47;11549:78;11622:4;11613:6;11549:78;:::i;:::-;11541:86;;11321:313;;;;:::o;11640:619::-;11717:6;11725;11733;11782:2;11770:9;11761:7;11757:23;11753:32;11750:119;;;11788:79;;:::i;:::-;11750:119;11908:1;11933:53;11978:7;11969:6;11958:9;11954:22;11933:53;:::i;:::-;11923:63;;11879:117;12035:2;12061:53;12106:7;12097:6;12086:9;12082:22;12061:53;:::i;:::-;12051:63;;12006:118;12163:2;12189:53;12234:7;12225:6;12214:9;12210:22;12189:53;:::i;:::-;12179:63;;12134:118;11640:619;;;;;:::o;12265:1057::-;12369:6;12377;12385;12393;12401;12409;12458:3;12446:9;12437:7;12433:23;12429:33;12426:120;;;12465:79;;:::i;:::-;12426:120;12585:1;12610:53;12655:7;12646:6;12635:9;12631:22;12610:53;:::i;:::-;12600:63;;12556:117;12712:2;12738:53;12783:7;12774:6;12763:9;12759:22;12738:53;:::i;:::-;12728:63;;12683:118;12840:2;12866:53;12911:7;12902:6;12891:9;12887:22;12866:53;:::i;:::-;12856:63;;12811:118;12968:2;12994:53;13039:7;13030:6;13019:9;13015:22;12994:53;:::i;:::-;12984:63;;12939:118;13096:3;13123:53;13168:7;13159:6;13148:9;13144:22;13123:53;:::i;:::-;13113:63;;13067:119;13225:3;13252:53;13297:7;13288:6;13277:9;13273:22;13252:53;:::i;:::-;13242:63;;13196:119;12265:1057;;;;;;;;:::o;13328:152::-;13404:9;13437:37;13468:5;13437:37;:::i;:::-;13424:50;;13328:152;;;:::o;13486:183::-;13599:63;13656:5;13599:63;:::i;:::-;13594:3;13587:76;13486:183;;:::o;13675:274::-;13794:4;13832:2;13821:9;13817:18;13809:26;;13845:97;13939:1;13928:9;13924:17;13915:6;13845:97;:::i;:::-;13675:274;;;;:::o;13955:118::-;14042:24;14060:5;14042:24;:::i;:::-;14037:3;14030:37;13955:118;;:::o;14079:442::-;14228:4;14266:2;14255:9;14251:18;14243:26;;14279:71;14347:1;14336:9;14332:17;14323:6;14279:71;:::i;:::-;14360:72;14428:2;14417:9;14413:18;14404:6;14360:72;:::i;:::-;14442;14510:2;14499:9;14495:18;14486:6;14442:72;:::i;:::-;14079:442;;;;;;:::o;14527:332::-;14648:4;14686:2;14675:9;14671:18;14663:26;;14699:71;14767:1;14756:9;14752:17;14743:6;14699:71;:::i;:::-;14780:72;14848:2;14837:9;14833:18;14824:6;14780:72;:::i;:::-;14527:332;;;;;:::o;14865:116::-;14935:21;14950:5;14935:21;:::i;:::-;14928:5;14925:32;14915:60;;14971:1;14968;14961:12;14915:60;14865:116;:::o;14987:137::-;15041:5;15072:6;15066:13;15057:22;;15088:30;15112:5;15088:30;:::i;:::-;14987:137;;;;:::o;15130:345::-;15197:6;15246:2;15234:9;15225:7;15221:23;15217:32;15214:119;;;15252:79;;:::i;:::-;15214:119;15372:1;15397:61;15450:7;15441:6;15430:9;15426:22;15397:61;:::i;:::-;15387:71;;15343:125;15130:345;;;;:::o;15481:223::-;15621:34;15617:1;15609:6;15605:14;15598:58;15690:6;15685:2;15677:6;15673:15;15666:31;15481:223;:::o;15710:366::-;15852:3;15873:67;15937:2;15932:3;15873:67;:::i;:::-;15866:74;;15949:93;16038:3;15949:93;:::i;:::-;16067:2;16062:3;16058:12;16051:19;;15710:366;;;:::o;16082:419::-;16248:4;16286:2;16275:9;16271:18;16263:26;;16335:9;16329:4;16325:20;16321:1;16310:9;16306:17;16299:47;16363:131;16489:4;16363:131;:::i;:::-;16355:139;;16082:419;;;:::o;16507:143::-;16564:5;16595:6;16589:13;16580:22;;16611:33;16638:5;16611:33;:::i;:::-;16507:143;;;;:::o;16656:351::-;16726:6;16775:2;16763:9;16754:7;16750:23;16746:32;16743:119;;;16781:79;;:::i;:::-;16743:119;16901:1;16926:64;16982:7;16973:6;16962:9;16958:22;16926:64;:::i;:::-;16916:74;;16872:128;16656:351;;;;:::o;17013:175::-;17153:27;17149:1;17141:6;17137:14;17130:51;17013:175;:::o;17194:366::-;17336:3;17357:67;17421:2;17416:3;17357:67;:::i;:::-;17350:74;;17433:93;17522:3;17433:93;:::i;:::-;17551:2;17546:3;17542:12;17535:19;;17194:366;;;:::o;17566:419::-;17732:4;17770:2;17759:9;17755:18;17747:26;;17819:9;17813:4;17809:20;17805:1;17794:9;17790:17;17783:47;17847:131;17973:4;17847:131;:::i;:::-;17839:139;;17566:419;;;:::o;17991:180::-;18039:77;18036:1;18029:88;18136:4;18133:1;18126:15;18160:4;18157:1;18150:15;18177:194;18217:4;18237:20;18255:1;18237:20;:::i;:::-;18232:25;;18271:20;18289:1;18271:20;:::i;:::-;18266:25;;18315:1;18312;18308:9;18300:17;;18339:1;18333:4;18330:11;18327:37;;;18344:18;;:::i;:::-;18327:37;18177:194;;;;:::o;18377:177::-;18517:29;18513:1;18505:6;18501:14;18494:53;18377:177;:::o;18560:366::-;18702:3;18723:67;18787:2;18782:3;18723:67;:::i;:::-;18716:74;;18799:93;18888:3;18799:93;:::i;:::-;18917:2;18912:3;18908:12;18901:19;;18560:366;;;:::o;18932:419::-;19098:4;19136:2;19125:9;19121:18;19113:26;;19185:9;19179:4;19175:20;19171:1;19160:9;19156:17;19149:47;19213:131;19339:4;19213:131;:::i;:::-;19205:139;;18932:419;;;:::o;19357:172::-;19497:24;19493:1;19485:6;19481:14;19474:48;19357:172;:::o;19535:366::-;19677:3;19698:67;19762:2;19757:3;19698:67;:::i;:::-;19691:74;;19774:93;19863:3;19774:93;:::i;:::-;19892:2;19887:3;19883:12;19876:19;;19535:366;;;:::o;19907:419::-;20073:4;20111:2;20100:9;20096:18;20088:26;;20160:9;20154:4;20150:20;20146:1;20135:9;20131:17;20124:47;20188:131;20314:4;20188:131;:::i;:::-;20180:139;;19907:419;;;:::o;20332:191::-;20372:3;20391:20;20409:1;20391:20;:::i;:::-;20386:25;;20425:20;20443:1;20425:20;:::i;:::-;20420:25;;20468:1;20465;20461:9;20454:16;;20489:3;20486:1;20483:10;20480:36;;;20496:18;;:::i;:::-;20480:36;20332:191;;;;:::o;20529:225::-;20669:34;20665:1;20657:6;20653:14;20646:58;20738:8;20733:2;20725:6;20721:15;20714:33;20529:225;:::o;20760:366::-;20902:3;20923:67;20987:2;20982:3;20923:67;:::i;:::-;20916:74;;20999:93;21088:3;20999:93;:::i;:::-;21117:2;21112:3;21108:12;21101:19;;20760:366;;;:::o;21132:419::-;21298:4;21336:2;21325:9;21321:18;21313:26;;21385:9;21379:4;21375:20;21371:1;21360:9;21356:17;21349:47;21413:131;21539:4;21413:131;:::i;:::-;21405:139;;21132:419;;;:::o;21557:168::-;21697:20;21693:1;21685:6;21681:14;21674:44;21557:168;:::o;21731:366::-;21873:3;21894:67;21958:2;21953:3;21894:67;:::i;:::-;21887:74;;21970:93;22059:3;21970:93;:::i;:::-;22088:2;22083:3;22079:12;22072:19;;21731:366;;;:::o;22103:419::-;22269:4;22307:2;22296:9;22292:18;22284:26;;22356:9;22350:4;22346:20;22342:1;22331:9;22327:17;22320:47;22384:131;22510:4;22384:131;:::i;:::-;22376:139;;22103:419;;;:::o;22528:410::-;22568:7;22591:20;22609:1;22591:20;:::i;:::-;22586:25;;22625:20;22643:1;22625:20;:::i;:::-;22620:25;;22680:1;22677;22673:9;22702:30;22720:11;22702:30;:::i;:::-;22691:41;;22881:1;22872:7;22868:15;22865:1;22862:22;22842:1;22835:9;22815:83;22792:139;;22911:18;;:::i;:::-;22792:139;22576:362;22528:410;;;;:::o;22944:180::-;22992:77;22989:1;22982:88;23089:4;23086:1;23079:15;23113:4;23110:1;23103:15;23130:185;23170:1;23187:20;23205:1;23187:20;:::i;:::-;23182:25;;23221:20;23239:1;23221:20;:::i;:::-;23216:25;;23260:1;23250:35;;23265:18;;:::i;:::-;23250:35;23307:1;23304;23300:9;23295:14;;23130:185;;;;:::o;23321:173::-;23461:25;23457:1;23449:6;23445:14;23438:49;23321:173;:::o;23500:366::-;23642:3;23663:67;23727:2;23722:3;23663:67;:::i;:::-;23656:74;;23739:93;23828:3;23739:93;:::i;:::-;23857:2;23852:3;23848:12;23841:19;;23500:366;;;:::o;23872:419::-;24038:4;24076:2;24065:9;24061:18;24053:26;;24125:9;24119:4;24115:20;24111:1;24100:9;24096:17;24089:47;24153:131;24279:4;24153:131;:::i;:::-;24145:139;;23872:419;;;:::o;24297:85::-;24342:7;24371:5;24360:16;;24297:85;;;:::o;24388:101::-;24424:7;24464:18;24457:5;24453:30;24442:41;;24388:101;;;:::o;24495:156::-;24552:9;24585:60;24602:42;24611:32;24637:5;24611:32;:::i;:::-;24602:42;:::i;:::-;24585:60;:::i;:::-;24572:73;;24495:156;;;:::o;24657:145::-;24751:44;24789:5;24751:44;:::i;:::-;24746:3;24739:57;24657:145;;:::o;24808:236::-;24908:4;24946:2;24935:9;24931:18;24923:26;;24959:78;25034:1;25023:9;25019:17;25010:6;24959:78;:::i;:::-;24808:236;;;;:::o;25050:166::-;25190:18;25186:1;25178:6;25174:14;25167:42;25050:166;:::o;25222:366::-;25364:3;25385:67;25449:2;25444:3;25385:67;:::i;:::-;25378:74;;25461:93;25550:3;25461:93;:::i;:::-;25579:2;25574:3;25570:12;25563:19;;25222:366;;;:::o;25594:419::-;25760:4;25798:2;25787:9;25783:18;25775:26;;25847:9;25841:4;25837:20;25833:1;25822:9;25818:17;25811:47;25875:131;26001:4;25875:131;:::i;:::-;25867:139;;25594:419;;;:::o;26019:170::-;26159:22;26155:1;26147:6;26143:14;26136:46;26019:170;:::o;26195:366::-;26337:3;26358:67;26422:2;26417:3;26358:67;:::i;:::-;26351:74;;26434:93;26523:3;26434:93;:::i;:::-;26552:2;26547:3;26543:12;26536:19;;26195:366;;;:::o;26567:419::-;26733:4;26771:2;26760:9;26756:18;26748:26;;26820:9;26814:4;26810:20;26806:1;26795:9;26791:17;26784:47;26848:131;26974:4;26848:131;:::i;:::-;26840:139;;26567:419;;;:::o;26992:222::-;27085:4;27123:2;27112:9;27108:18;27100:26;;27136:71;27204:1;27193:9;27189:17;27180:6;27136:71;:::i;:::-;26992:222;;;;:::o;27220:143::-;27277:5;27308:6;27302:13;27293:22;;27324:33;27351:5;27324:33;:::i;:::-;27220:143;;;;:::o;27369:351::-;27439:6;27488:2;27476:9;27467:7;27463:23;27459:32;27456:119;;;27494:79;;:::i;:::-;27456:119;27614:1;27639:64;27695:7;27686:6;27675:9;27671:22;27639:64;:::i;:::-;27629:74;;27585:128;27369:351;;;;:::o;27726:332::-;27847:4;27885:2;27874:9;27870:18;27862:26;;27898:71;27966:1;27955:9;27951:17;27942:6;27898:71;:::i;:::-;27979:72;28047:2;28036:9;28032:18;28023:6;27979:72;:::i;:::-;27726:332;;;;;:::o;28064:98::-;28115:6;28149:5;28143:12;28133:22;;28064:98;;;:::o;28168:147::-;28269:11;28306:3;28291:18;;28168:147;;;;:::o;28321:386::-;28425:3;28453:38;28485:5;28453:38;:::i;:::-;28507:88;28588:6;28583:3;28507:88;:::i;:::-;28500:95;;28604:65;28662:6;28657:3;28650:4;28643:5;28639:16;28604:65;:::i;:::-;28694:6;28689:3;28685:16;28678:23;;28429:278;28321:386;;;;:::o;28713:271::-;28843:3;28865:93;28954:3;28945:6;28865:93;:::i;:::-;28858:100;;28975:3;28968:10;;28713:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3016800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "397",
								"FEE_RATE()": "437",
								"LIQUIDITY_MANAGER_ROLE()": "393",
								"PAUSER_ROLE()": "391",
								"UPGRADER_ROLE()": "435",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"addLiquidity(address,uint256)": "infinite",
								"cqtNFT()": "infinite",
								"cqtToken()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3286",
								"initialize(address,address,address,address,address,address)": "infinite",
								"liquidityPools(address)": "infinite",
								"pause()": "infinite",
								"paused()": "2593",
								"proxiableUUID()": "infinite",
								"removeLiquidity(address,uint256)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "764",
								"swapETHForNFT(uint256,uint256)": "infinite",
								"swapETHForTokens(address,uint256)": "infinite",
								"swapNFTForETH(uint256,uint256)": "infinite",
								"swapTokensForETH(address,uint256,uint256)": "infinite",
								"unpause()": "infinite",
								"updateLiquidityPool(address,uint256,uint256)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"withdrawETH(uint256)": "infinite",
								"withdrawNFT(uint256)": "infinite",
								"withdrawTokens(address,uint256)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"getOutputAmount(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "A0"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1925,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1925,
									"end": 1945,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 1925,
									"end": 1945,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1925,
									"end": 1945,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1925,
									"end": 1947,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1925,
									"end": 1947,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1925,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1925,
									"end": 1947,
									"name": "tag",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1925,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "6"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7986,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8052,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8099,
									"end": 8115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8087,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8795,
									"end": 8825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 17,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "tag",
									"source": 16,
									"value": "6"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "ASSIGNIMMUTABLE",
									"source": 16,
									"value": "636"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205bf6c2efaa4270f923e1d8981c52665ef8b357d3f4539e2838981c619ad515a964736f6c634300081a0033",
									".code": [
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "56688700"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "CC2A9A5B"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "E15CC8DA"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "E15CC8DA"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "E63AB1E9"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "F14210A6"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "F72C0D8B"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "CC2A9A5B"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "D547741F"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "D9A37AD2"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "DA069683"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "A201CCF6"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "A201CCF6"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "A217FDDF"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "AD3CB1CC"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "C7088313"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "56688700"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "5C975ABB"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "8456CB59"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "91D14854"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "2F2FF15D"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "49F0346E"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "49F0346E"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "4F1EF286"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "51422E97"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "52D1902D"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "2F2FF15D"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "34AAB064"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "36568ABE"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "3F4BA83A"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "B0FD47E"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "B0FD47E"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "242F0551"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "248A9CA3"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "2D11C58A"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "23245D7"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "6B091F9"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 8625,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 8625,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 8456,
											"end": 8619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 8456,
											"end": 8619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "tag",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1283,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 1283,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 1283,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "tag",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "tag",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 890,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 890,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "tag",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 981,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 981,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "tag",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "tag",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "86"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "87"
										},
										{
											"begin": 1036,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "tag",
											"source": 16,
											"value": "86"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "89"
										},
										{
											"begin": 1036,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "tag",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "tag",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "tag",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "95"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 2677,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "tag",
											"source": 16,
											"value": "95"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "97"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "98"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "99"
										},
										{
											"begin": 6319,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "tag",
											"source": 16,
											"value": "98"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 6319,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "tag",
											"source": 16,
											"value": "97"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "tag",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "105"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 4824,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "tag",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 4824,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "tag",
											"source": 16,
											"value": "105"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "tag",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "112"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 2758,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "tag",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 2758,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "tag",
											"source": 16,
											"value": "112"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 2758,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "tag",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "tag",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 2600,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "tag",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 4013,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 4013,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 4013,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 7987,
											"end": 8242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "tag",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 7987,
											"end": 8242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "tag",
											"source": 16,
											"value": "144"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "tag",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 1960,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "tag",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 1960,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "tag",
											"source": 16,
											"value": "149"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "tag",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "158"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "99"
										},
										{
											"begin": 6966,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "tag",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 6966,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "tag",
											"source": 16,
											"value": "158"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "tag",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "162"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "163"
										},
										{
											"begin": 1075,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "tag",
											"source": 16,
											"value": "162"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "164"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 1075,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "tag",
											"source": 16,
											"value": "164"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "tag",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "167"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 5533,
											"end": 6313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "tag",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 5533,
											"end": 6313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "tag",
											"source": 16,
											"value": "167"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "tag",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 750,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "tag",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 750,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "tag",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "tag",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 8248,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "tag",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 8248,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "tag",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 818,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "tag",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 818,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "tag",
											"source": 16,
											"value": "181"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3626,
											"end": 3637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3602,
											"end": 3638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "tag",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8699,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8681,
											"end": 8699,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8711,
											"end": 8734,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 8743,
											"end": 8747,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 8750,
											"end": 8760,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 8762,
											"end": 8769,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 8711,
											"end": 8770,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8529,
											"end": 8547,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8529,
											"end": 8547,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8582,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "A9059CBB"
										},
										{
											"begin": 8593,
											"end": 8603,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 8605,
											"end": 8611,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 8559,
											"end": 8612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8612,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 8559,
											"end": 8612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "61"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "tag",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 939,
											"end": 974,
											"name": "PUSH",
											"source": 16,
											"value": "77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4876,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4843,
											"end": 4902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4843,
											"end": 4902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1017,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "tag",
											"source": 16,
											"value": "87"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6463,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6463,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "tag",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 788,
											"end": 812,
											"name": "PUSH",
											"source": 16,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 2735,
											"end": 2743,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 2735,
											"end": 2745,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2735,
											"end": 2745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 2735,
											"end": 2745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "tag",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6433,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 6424,
											"end": 6437,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 6416,
											"end": 6478,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6531,
											"end": 6535,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6496,
											"end": 6536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6496,
											"end": 6510,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 6511,
											"end": 6518,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 6496,
											"end": 6519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6519,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 6496,
											"end": 6519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6496,
											"end": 6536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6536,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "238"
										},
										{
											"begin": 6488,
											"end": 6566,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "237"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6577,
											"end": 6594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6597,
											"end": 6661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 6613,
											"end": 6622,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 6648,
											"end": 6657,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 6624,
											"end": 6645,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 16
										},
										{
											"begin": 6624,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 6624,
											"end": 6657,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6624,
											"end": 6657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6624,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 6624,
											"end": 6657,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6624,
											"end": 6657,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 6624,
											"end": 6657,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6659,
											"end": 6660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6597,
											"end": 6612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 6597,
											"end": 6661,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6597,
											"end": 6661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 6597,
											"end": 6661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6577,
											"end": 6661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6577,
											"end": 6661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6721,
											"end": 6727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6708,
											"end": 6717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6708,
											"end": 6727,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6708,
											"end": 6727,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 6700,
											"end": 6759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "244"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6778,
											"end": 6788,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6770,
											"end": 6798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 6799,
											"end": 6808,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "247"
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6809,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "247"
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6819,
											"end": 6842,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 6851,
											"end": 6855,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 6858,
											"end": 6868,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6870,
											"end": 6877,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 6819,
											"end": 6878,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6934,
											"end": 6941,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6905,
											"end": 6915,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65"
										},
										{
											"begin": 6943,
											"end": 6952,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 6894,
											"end": 6953,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 16
										},
										{
											"begin": 6406,
											"end": 6960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "tag",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4942,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 4933,
											"end": 4946,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "265"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 4925,
											"end": 4987,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "265"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4997,
											"end": 5023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5046,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4997,
											"end": 5047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4997,
											"end": 5047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5082,
											"end": 5083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5065,
											"end": 5079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5079,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5083,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5106,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5087,
											"end": 5103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5103,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5087,
											"end": 5103,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5087,
											"end": 5107,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "268"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 5057,
											"end": 5134,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "268"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5145,
											"end": 5164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 5183,
											"end": 5192,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 5194,
											"end": 5198,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5194,
											"end": 5208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5194,
											"end": 5208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5194,
											"end": 5208,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5210,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5210,
											"end": 5226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5226,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5210,
											"end": 5226,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5167,
											"end": 5182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 5167,
											"end": 5227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5167,
											"end": 5227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 5167,
											"end": 5227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5145,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5145,
											"end": 5227,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5260,
											"end": 5269,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5245,
											"end": 5256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5245,
											"end": 5269,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5245,
											"end": 5269,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 5237,
											"end": 5301,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "272"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5330,
											"end": 5339,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5316,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5312,
											"end": 5326,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "273"
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 5312,
											"end": 5339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "273"
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5369,
											"end": 5380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5353,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5349,
											"end": 5365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 5349,
											"end": 5380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5409,
											"end": 5414,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5391,
											"end": 5424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "A9059CBB"
										},
										{
											"begin": 5425,
											"end": 5435,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 5437,
											"end": 5448,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 5391,
											"end": 5449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "276"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5449,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "279"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 5391,
											"end": 5449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "279"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5490,
											"end": 5495,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5478,
											"end": 5488,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66"
										},
										{
											"begin": 5497,
											"end": 5508,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5510,
											"end": 5519,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 5465,
											"end": 5520,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 4915,
											"end": 5527,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4915,
											"end": 5527,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3832,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2883,
											"end": 2898,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 2875,
											"end": 2941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2971,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2968,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 2959,
											"end": 2972,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 2951,
											"end": 3013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3042,
											"end": 3047,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 3062,
											"end": 3072,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3082,
											"end": 3086,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3100,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 3024,
											"end": 3101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3101,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 3024,
											"end": 3101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3112,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3161,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 3112,
											"end": 3162,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3112,
											"end": 3162,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3172,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3228,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3204,
											"end": 3208,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3204,
											"end": 3223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3204,
											"end": 3223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3204,
											"end": 3223,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3204,
											"end": 3228,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3263,
											"end": 3274,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3244,
											"end": 3248,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3244,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3260,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3244,
											"end": 3274,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3244,
											"end": 3274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3244,
											"end": 3274,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3244,
											"end": 3274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3305,
											"end": 3314,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3292,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3288,
											"end": 3302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3314,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3314,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3314,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3340,
											"end": 3351,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3328,
											"end": 3351,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3328,
											"end": 3351,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3407,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3394,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3390,
											"end": 3404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3408,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3431,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3416,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3412,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3428,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3412,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3412,
											"end": 3432,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 3382,
											"end": 3455,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3470,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3532,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3528,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3528,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3513,
											"end": 3524,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3496,
											"end": 3510,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3510,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 3496,
											"end": 3524,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 3495,
											"end": 3544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3470,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3470,
											"end": 3544,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3579,
											"end": 3593,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3566,
											"end": 3575,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 3566,
											"end": 3593,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3566,
											"end": 3593,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 3558,
											"end": 3621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3656,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3640,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 3636,
											"end": 3667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3699,
											"end": 3708,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3685,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3681,
											"end": 3695,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 3681,
											"end": 3708,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3772,
											"end": 3776,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3772,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3772,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3757,
											"end": 3768,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3739,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3735,
											"end": 3754,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3754,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 3735,
											"end": 3768,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3768,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 3735,
											"end": 3768,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 3735,
											"end": 3768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 3734,
											"end": 3788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3722,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3722,
											"end": 3788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3368,
											"end": 3799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3832,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3813,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3809,
											"end": 3828,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 3809,
											"end": 3841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3881,
											"end": 3890,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3855,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 3851,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3866,
											"end": 3876,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 3851,
											"end": 3890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3933,
											"end": 3938,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3931,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4A1A2A6176E9646D9E3157F7C2AB3C499F18337C0B0828CFB28E0A61DE4A11F7"
										},
										{
											"begin": 3940,
											"end": 3951,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3953,
											"end": 3962,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 3964,
											"end": 3973,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 3906,
											"end": 3974,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 3991,
											"end": 4000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4000,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2780,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2783,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "tag",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 788,
											"end": 812,
											"name": "PUSH",
											"source": 16,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2656,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 2656,
											"end": 2662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 2656,
											"end": 2664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2656,
											"end": 2664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 2656,
											"end": 2664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 3858,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 3858,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3825,
											"end": 3884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3825,
											"end": 3884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 3914,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4104,
											"end": 4123,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4154,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4203,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4154,
											"end": 4204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4154,
											"end": 4204,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4252,
											"end": 4261,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4226,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 4222,
											"end": 4236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4247,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 4214,
											"end": 4288,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4346,
											"end": 4350,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4346,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 4346,
											"end": 4365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4346,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4333,
											"end": 4342,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4318,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4330,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 4314,
											"end": 4342,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4342,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 4314,
											"end": 4342,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 4314,
											"end": 4342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 4313,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4299,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4299,
											"end": 4365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4418,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4418,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 4418,
											"end": 4437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4418,
											"end": 4437,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4405,
											"end": 4414,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4392,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4388,
											"end": 4402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4402,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 4388,
											"end": 4414,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 4387,
											"end": 4437,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4375,
											"end": 4437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4375,
											"end": 4437,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4468,
											"end": 4479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4464,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 4448,
											"end": 4479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4507,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4489,
											"end": 4503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 4489,
											"end": 4516,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4549,
											"end": 4558,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4530,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 4526,
											"end": 4545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 4526,
											"end": 4558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4598,
											"end": 4607,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 4568,
											"end": 4582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4593,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 4568,
											"end": 4607,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4636,
											"end": 4641,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4618,
											"end": 4651,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "A9059CBB"
										},
										{
											"begin": 4652,
											"end": 4662,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 4664,
											"end": 4675,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 4618,
											"end": 4676,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 4618,
											"end": 4676,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4694,
											"end": 4704,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4686,
											"end": 4714,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 4715,
											"end": 4724,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4725,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4770,
											"end": 4775,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4758,
											"end": 4768,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "BC7D19D505C7EC4DB83F3B51F19FB98C4C8A99922E7839D1EE608DFBEE29501B"
										},
										{
											"begin": 4777,
											"end": 4788,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4790,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4801,
											"end": 4810,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 4741,
											"end": 4811,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 4144,
											"end": 4818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "tag",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 939,
											"end": 974,
											"name": "PUSH",
											"source": 16,
											"value": "77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8165,
											"end": 8179,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8149,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 8162,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8179,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8179,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8223,
											"end": 8235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8209,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8210,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 8189,
											"end": 8220,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8235,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "tag",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 2193,
											"end": 2210,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2193,
											"end": 2210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 2193,
											"end": 2210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2220,
											"end": 2242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 2220,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 2220,
											"end": 2242,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2220,
											"end": 2242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 2220,
											"end": 2242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2252,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 2252,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 2252,
											"end": 2276,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2252,
											"end": 2276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 2252,
											"end": 2276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 2362,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2298,
											"end": 2316,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2318,
											"end": 2330,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 2287,
											"end": 2331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 2287,
											"end": 2331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2341,
											"end": 2372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 788,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2365,
											"end": 2371,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 2341,
											"end": 2351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 2341,
											"end": 2372,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2341,
											"end": 2372,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 2341,
											"end": 2372,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2341,
											"end": 2372,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2382,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 858,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 2408,
											"end": 2416,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 2382,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 2382,
											"end": 2417,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2382,
											"end": 2417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 2382,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2382,
											"end": 2417,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 939,
											"end": 974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F"
										},
										{
											"begin": 2462,
											"end": 2478,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 2427,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 2427,
											"end": 2479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2519,
											"end": 2534,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2498,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2573,
											"end": 2586,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2545,
											"end": 2551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "tag",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7090,
											"end": 7100,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7077,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 7078,
											"end": 7085,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 7063,
											"end": 7086,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 7063,
											"end": 7086,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7100,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 7055,
											"end": 7121,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7132,
											"end": 7149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 7196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 7168,
											"end": 7169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7171,
											"end": 7172,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7174,
											"end": 7195,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 16
										},
										{
											"begin": 7152,
											"end": 7167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 7152,
											"end": 7196,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7152,
											"end": 7196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 7152,
											"end": 7196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7132,
											"end": 7196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7132,
											"end": 7196,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7254,
											"end": 7260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7241,
											"end": 7250,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7241,
											"end": 7260,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7241,
											"end": 7260,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 7233,
											"end": 7292,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7303,
											"end": 7326,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 7327,
											"end": 7337,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 7347,
											"end": 7351,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 7354,
											"end": 7361,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 7303,
											"end": 7362,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7380,
											"end": 7390,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7400,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 7401,
											"end": 7410,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7411,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7467,
											"end": 7474,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7438,
											"end": 7448,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65"
										},
										{
											"begin": 7476,
											"end": 7485,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 7427,
											"end": 7486,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 16
										},
										{
											"begin": 7045,
											"end": 7493,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "tag",
											"source": 16,
											"value": "163"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "tag",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5666,
											"end": 5667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5663,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5652,
											"end": 5667,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 5644,
											"end": 5710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5720,
											"end": 5746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5769,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 5720,
											"end": 5770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5720,
											"end": 5770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5805,
											"end": 5806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5788,
											"end": 5802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5802,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5806,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5829,
											"end": 5830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5810,
											"end": 5814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5810,
											"end": 5826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5826,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5830,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 5780,
											"end": 5857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5868,
											"end": 5885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 5904,
											"end": 5915,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5917,
											"end": 5921,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 5939,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 5949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5935,
											"end": 5949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 5949,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5888,
											"end": 5903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 5888,
											"end": 5950,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5888,
											"end": 5950,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 5888,
											"end": 5950,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5868,
											"end": 5950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5868,
											"end": 5950,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5981,
											"end": 5987,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5968,
											"end": 5977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5968,
											"end": 5987,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5968,
											"end": 5987,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 5960,
											"end": 6019,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6050,
											"end": 6061,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6034,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6046,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 6030,
											"end": 6061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6089,
											"end": 6098,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6075,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6071,
											"end": 6085,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 6071,
											"end": 6098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6127,
											"end": 6132,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6109,
											"end": 6146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 6147,
											"end": 6157,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6167,
											"end": 6171,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 6174,
											"end": 6185,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 6109,
											"end": 6186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6186,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 6109,
											"end": 6186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6204,
											"end": 6214,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6196,
											"end": 6224,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 6225,
											"end": 6234,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6235,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6276,
											"end": 6281,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6264,
											"end": 6274,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66"
										},
										{
											"begin": 6283,
											"end": 6294,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6296,
											"end": 6305,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 6251,
											"end": 6306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 6313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 6313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "tag",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 788,
											"end": 812,
											"name": "PUSH",
											"source": 16,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "tag",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8341,
											"end": 8362,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 16
										},
										{
											"begin": 8341,
											"end": 8372,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 8341,
											"end": 8372,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 8333,
											"end": 8397,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8415,
											"end": 8425,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8407,
											"end": 8435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 8436,
											"end": 8442,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8443,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "tag",
											"source": 16,
											"value": "180"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 858,
											"end": 884,
											"name": "PUSH",
											"source": 16,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1034,
											"end": 1180,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1034,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1173,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1144,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1034,
											"end": 1180,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1034,
											"end": 1180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1034,
											"end": 1180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1034,
											"end": 1180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 4231,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 4231,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2845,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2948,
											"name": "PUSH",
											"source": 0,
											"value": "2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800"
										},
										{
											"begin": 2910,
											"end": 2948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2910,
											"end": 2948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2787,
											"end": 2964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 7396,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7396,
											"end": 7422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7484,
											"end": 7488,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7505,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 7559,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 7559,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7970,
											"end": 7974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 8019,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8019,
											"end": 8045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8045,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 8019,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8059,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8110,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8120,
											"end": 8127,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8182,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 8182,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8182,
											"end": 8194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8182,
											"end": 8194,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 8182,
											"end": 8194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8173,
											"end": 8180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8167,
											"end": 8171,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8258,
											"end": 8263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 3760,
											"end": 3779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3760,
											"end": 3781,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3732,
											"end": 3781,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 3832,
											"end": 3842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3832,
											"end": 3844,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 3823,
											"end": 3845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 2970,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2970,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "tag",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "tag",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7658,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1017,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 7676,
											"end": 7680,
											"name": "PUSH",
											"source": 16,
											"value": "3E8"
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 7676,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7661,
											"end": 7672,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 7661,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7632,
											"end": 7692,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7632,
											"end": 7692,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7702,
											"end": 7719,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7743,
											"end": 7756,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7722,
											"end": 7740,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 7722,
											"end": 7756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7702,
											"end": 7756,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7702,
											"end": 7756,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7766,
											"end": 7785,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7830,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7804,
											"end": 7808,
											"name": "PUSH",
											"source": 16,
											"value": "3E8"
										},
										{
											"begin": 7789,
											"end": 7801,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 7789,
											"end": 7808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 7788,
											"end": 7830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7766,
											"end": 7830,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7766,
											"end": 7830,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7859,
											"end": 7870,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7847,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 7847,
											"end": 7870,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7847,
											"end": 7870,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7847,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 7847,
											"end": 7870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7847,
											"end": 7870,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 7847,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7840,
											"end": 7870,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7840,
											"end": 7870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7840,
											"end": 7870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7840,
											"end": 7870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7840,
											"end": 7870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "464"
										},
										{
											"begin": 4749,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 4749,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "464"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "466"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "466"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7883,
											"end": 7981,
											"name": "tag",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 7883,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 858,
											"end": 884,
											"name": "PUSH",
											"source": 16,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7883,
											"end": 7981,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7883,
											"end": 7981,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7883,
											"end": 7981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "471"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "472"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "473"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "472"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "471"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "474"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6555,
											"end": 6572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "478"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 6513,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "tag",
											"source": 2,
											"value": "478"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 2,
											"value": "474"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 6312,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "tag",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "482"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "tag",
											"source": 2,
											"value": "482"
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "485"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "tag",
											"source": 2,
											"value": "485"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1293,
											"name": "PUSH",
											"source": 6,
											"value": "CD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300"
										},
										{
											"begin": 1260,
											"end": 1293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 3453,
											"end": 3472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3453,
											"end": 3474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3474,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3485,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 3522,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3522,
											"end": 3534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 3515,
											"end": 3535,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 1899,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 1899,
											"end": 1926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1836,
											"end": 1933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 2968,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 4514,
											"end": 4561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4381,
											"end": 4578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3168,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "tag",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2009,
											"end": 2016,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 2035,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1957,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2931,
											"end": 2948,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 11,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2779,
											"end": 3114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 2040,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2040,
											"end": 2061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2061,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1684,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2366,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 11,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 2320,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "tag",
											"source": 11,
											"value": "537"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 2387,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "tag",
											"source": 11,
											"value": "538"
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 11,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6598,
											"end": 6720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "646"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 17,
											"value": "646"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "648"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 17,
											"value": "648"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "569"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "656"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 17,
											"value": "656"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 17,
											"value": "657"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "663"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 17,
											"value": "663"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "tag",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2328,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2275,
											"end": 2329,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2329,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2264,
											"end": 2329,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2209,
											"end": 2335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "tag",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2378,
											"end": 2385,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 2425,
											"end": 2430,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 2407,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "tag",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2431,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2431,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2341,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 2534,
											"end": 2539,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 2516,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "tag",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "tag",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2443,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "tag",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2617,
											"end": 2622,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2642,
											"end": 2662,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 2671,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "tag",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "tag",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2798,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2841,
											"end": 2843,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2829,
											"end": 2838,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2816,
											"end": 2839,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2812,
											"end": 2844,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2809,
											"end": 2928,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2809,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 2809,
											"end": 2928,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2847,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 2847,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 2847,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2847,
											"end": 2926,
											"name": "tag",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 2847,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2809,
											"end": 2928,
											"name": "tag",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 2809,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "675"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3028,
											"end": 3034,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3013,
											"end": 3035,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2992,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 2992,
											"end": 3045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2992,
											"end": 3045,
											"name": "tag",
											"source": 17,
											"value": "675"
										},
										{
											"begin": 2992,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2982,
											"end": 3045,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2982,
											"end": 3045,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2938,
											"end": 3055,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3094,
											"end": 3096,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3145,
											"end": 3154,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3141,
											"end": 3163,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 3120,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "tag",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3110,
											"end": 3173,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3110,
											"end": 3173,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3065,
											"end": 3183,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3190,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3196,
											"end": 3525,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3196,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3255,
											"end": 3261,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3306,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3301,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3283,
											"end": 3290,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3279,
											"end": 3302,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3275,
											"end": 3307,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3272,
											"end": 3391,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3272,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 3272,
											"end": 3391,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3310,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "679"
										},
										{
											"begin": 3310,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 3310,
											"end": 3389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3310,
											"end": 3389,
											"name": "tag",
											"source": 17,
											"value": "679"
										},
										{
											"begin": 3310,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3272,
											"end": 3391,
											"name": "tag",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 3272,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3476,
											"end": 3498,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 3455,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "tag",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3445,
											"end": 3508,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3445,
											"end": 3508,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3401,
											"end": 3518,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3196,
											"end": 3525,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3196,
											"end": 3525,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3196,
											"end": 3525,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3196,
											"end": 3525,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3196,
											"end": 3525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3531,
											"end": 3649,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 3531,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3618,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "682"
										},
										{
											"begin": 3636,
											"end": 3641,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3618,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 3618,
											"end": 3642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3618,
											"end": 3642,
											"name": "tag",
											"source": 17,
											"value": "682"
										},
										{
											"begin": 3618,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3616,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3643,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3531,
											"end": 3649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3531,
											"end": 3649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3531,
											"end": 3649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3655,
											"end": 4097,
											"name": "tag",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 3655,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3831,
											"end": 3840,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3819,
											"end": 3845,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3819,
											"end": 3845,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3855,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3908,
											"end": 3925,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3899,
											"end": 3905,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3855,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 3855,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3855,
											"end": 3926,
											"name": "tag",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 3855,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3936,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "685"
										},
										{
											"begin": 4004,
											"end": 4006,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3989,
											"end": 4007,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3980,
											"end": 3986,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3936,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 3936,
											"end": 4008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3936,
											"end": 4008,
											"name": "tag",
											"source": 17,
											"value": "685"
										},
										{
											"begin": 3936,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4018,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "686"
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4084,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4071,
											"end": 4089,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4062,
											"end": 4068,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4018,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 4018,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4018,
											"end": 4090,
											"name": "tag",
											"source": 17,
											"value": "686"
										},
										{
											"begin": 4018,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3655,
											"end": 4097,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 3655,
											"end": 4097,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3655,
											"end": 4097,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3655,
											"end": 4097,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3655,
											"end": 4097,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3655,
											"end": 4097,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3655,
											"end": 4097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4103,
											"end": 4180,
											"name": "tag",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 4103,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4140,
											"end": 4147,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4174,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4174,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4174,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4103,
											"end": 4180,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4103,
											"end": 4180,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4103,
											"end": 4180,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4103,
											"end": 4180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4186,
											"end": 4304,
											"name": "tag",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 4186,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4273,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 4291,
											"end": 4296,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4273,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 4273,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4273,
											"end": 4297,
											"name": "tag",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 4273,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4268,
											"end": 4271,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4261,
											"end": 4298,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4186,
											"end": 4304,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4186,
											"end": 4304,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4186,
											"end": 4304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "tag",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4403,
											"end": 4407,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4426,
											"end": 4444,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4418,
											"end": 4444,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4418,
											"end": 4444,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4454,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 4522,
											"end": 4523,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4520,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4507,
											"end": 4524,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4498,
											"end": 4504,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4454,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 4454,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4454,
											"end": 4525,
											"name": "tag",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 4454,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4310,
											"end": 4532,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4310,
											"end": 4532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4538,
											"end": 4660,
											"name": "tag",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 4538,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4611,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 4629,
											"end": 4634,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4611,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 4611,
											"end": 4635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4611,
											"end": 4635,
											"name": "tag",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 4611,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4604,
											"end": 4609,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4601,
											"end": 4636,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "694"
										},
										{
											"begin": 4591,
											"end": 4654,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4648,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4640,
											"end": 4652,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 4654,
											"name": "tag",
											"source": 17,
											"value": "694"
										},
										{
											"begin": 4591,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4538,
											"end": 4660,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4538,
											"end": 4660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4805,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 4666,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4712,
											"end": 4717,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4756,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4737,
											"end": 4757,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4728,
											"end": 4757,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4728,
											"end": 4757,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4766,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 4793,
											"end": 4798,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4766,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 4766,
											"end": 4799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4766,
											"end": 4799,
											"name": "tag",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 4766,
											"end": 4799,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4805,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4805,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4805,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4805,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4811,
											"end": 5140,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 4811,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4870,
											"end": 4876,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4907,
											"end": 4916,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4898,
											"end": 4905,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4894,
											"end": 4917,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 4922,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4887,
											"end": 5006,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4887,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 4887,
											"end": 5006,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4925,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 4925,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 4925,
											"end": 5004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4925,
											"end": 5004,
											"name": "tag",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 4925,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4887,
											"end": 5006,
											"name": "tag",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 4887,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5045,
											"end": 5046,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5070,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "700"
										},
										{
											"begin": 5115,
											"end": 5122,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5095,
											"end": 5104,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5091,
											"end": 5113,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5070,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 5070,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5070,
											"end": 5123,
											"name": "tag",
											"source": 17,
											"value": "700"
										},
										{
											"begin": 5070,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5060,
											"end": 5123,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5060,
											"end": 5123,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5016,
											"end": 5133,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4811,
											"end": 5140,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4811,
											"end": 5140,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4811,
											"end": 5140,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4811,
											"end": 5140,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4811,
											"end": 5140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5146,
											"end": 5368,
											"name": "tag",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 5146,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5279,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5254,
											"end": 5280,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5254,
											"end": 5280,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5290,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "702"
										},
										{
											"begin": 5358,
											"end": 5359,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5356,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5343,
											"end": 5360,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5334,
											"end": 5340,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5290,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 5290,
											"end": 5361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5290,
											"end": 5361,
											"name": "tag",
											"source": 17,
											"value": "702"
										},
										{
											"begin": 5290,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5146,
											"end": 5368,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5146,
											"end": 5368,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5146,
											"end": 5368,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5146,
											"end": 5368,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5146,
											"end": 5368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5374,
											"end": 5848,
											"name": "tag",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 5374,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5442,
											"end": 5448,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5456,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5499,
											"end": 5501,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5496,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5478,
											"end": 5485,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5474,
											"end": 5497,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5467,
											"end": 5586,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5467,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 5467,
											"end": 5586,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5505,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "705"
										},
										{
											"begin": 5505,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 5505,
											"end": 5584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5505,
											"end": 5584,
											"name": "tag",
											"source": 17,
											"value": "705"
										},
										{
											"begin": 5505,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5467,
											"end": 5586,
											"name": "tag",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 5467,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5626,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "706"
										},
										{
											"begin": 5695,
											"end": 5702,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5686,
											"end": 5692,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5675,
											"end": 5684,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 5650,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "tag",
											"source": 17,
											"value": "706"
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5703,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5596,
											"end": 5713,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5778,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "707"
										},
										{
											"begin": 5823,
											"end": 5830,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5814,
											"end": 5820,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5803,
											"end": 5812,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5799,
											"end": 5821,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5778,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 5778,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5778,
											"end": 5831,
											"name": "tag",
											"source": 17,
											"value": "707"
										},
										{
											"begin": 5778,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5768,
											"end": 5831,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5768,
											"end": 5831,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5723,
											"end": 5841,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5374,
											"end": 5848,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5374,
											"end": 5848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5374,
											"end": 5848,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5374,
											"end": 5848,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5374,
											"end": 5848,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5374,
											"end": 5848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5854,
											"end": 5914,
											"name": "tag",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 5854,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5882,
											"end": 5885,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5896,
											"end": 5908,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5896,
											"end": 5908,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5854,
											"end": 5914,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5854,
											"end": 5914,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5854,
											"end": 5914,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5854,
											"end": 5914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5920,
											"end": 6062,
											"name": "tag",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 5920,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5970,
											"end": 5979,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 6021,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "711"
										},
										{
											"begin": 6030,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "712"
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6030,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 6030,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6030,
											"end": 6054,
											"name": "tag",
											"source": 17,
											"value": "712"
										},
										{
											"begin": 6030,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6021,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 6021,
											"end": 6055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6021,
											"end": 6055,
											"name": "tag",
											"source": 17,
											"value": "711"
										},
										{
											"begin": 6021,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6003,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 6003,
											"end": 6056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6003,
											"end": 6056,
											"name": "tag",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 6003,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5990,
											"end": 6056,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5990,
											"end": 6056,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5920,
											"end": 6062,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5920,
											"end": 6062,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5920,
											"end": 6062,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5920,
											"end": 6062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6068,
											"end": 6194,
											"name": "tag",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 6068,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6118,
											"end": 6127,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 6182,
											"end": 6187,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 6151,
											"end": 6188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6188,
											"name": "tag",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 6151,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6138,
											"end": 6188,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6138,
											"end": 6188,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6068,
											"end": 6194,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6068,
											"end": 6194,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6068,
											"end": 6194,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6068,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6200,
											"end": 6351,
											"name": "tag",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 6200,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6275,
											"end": 6284,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 6339,
											"end": 6344,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6308,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 6308,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6308,
											"end": 6345,
											"name": "tag",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 6308,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6295,
											"end": 6345,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6295,
											"end": 6345,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6200,
											"end": 6351,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6200,
											"end": 6351,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6200,
											"end": 6351,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6200,
											"end": 6351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6357,
											"end": 6538,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 6357,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6469,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 6525,
											"end": 6530,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6469,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 6469,
											"end": 6531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6469,
											"end": 6531,
											"name": "tag",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 6469,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6464,
											"end": 6467,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6457,
											"end": 6532,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6357,
											"end": 6538,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6357,
											"end": 6538,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6357,
											"end": 6538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6544,
											"end": 6816,
											"name": "tag",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 6544,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6702,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6689,
											"end": 6698,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6685,
											"end": 6703,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6677,
											"end": 6703,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6677,
											"end": 6703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "720"
										},
										{
											"begin": 6806,
											"end": 6807,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6804,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6791,
											"end": 6808,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 6713,
											"end": 6809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6713,
											"end": 6809,
											"name": "tag",
											"source": 17,
											"value": "720"
										},
										{
											"begin": 6713,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6544,
											"end": 6816,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6544,
											"end": 6816,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6544,
											"end": 6816,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6544,
											"end": 6816,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6544,
											"end": 6816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 7296,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 6822,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6890,
											"end": 6896,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6904,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6935,
											"end": 6944,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 6933,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6922,
											"end": 6945,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6918,
											"end": 6950,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6915,
											"end": 7034,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6915,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "722"
										},
										{
											"begin": 6915,
											"end": 7034,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6953,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "723"
										},
										{
											"begin": 6953,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 6953,
											"end": 7032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6953,
											"end": 7032,
											"name": "tag",
											"source": 17,
											"value": "723"
										},
										{
											"begin": 6953,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6915,
											"end": 7034,
											"name": "tag",
											"source": 17,
											"value": "722"
										},
										{
											"begin": 6915,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7073,
											"end": 7074,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 7143,
											"end": 7150,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7134,
											"end": 7140,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7123,
											"end": 7132,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7119,
											"end": 7141,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7098,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 7098,
											"end": 7151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7098,
											"end": 7151,
											"name": "tag",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 7098,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7088,
											"end": 7151,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7088,
											"end": 7151,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7044,
											"end": 7161,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7200,
											"end": 7202,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 7271,
											"end": 7278,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7262,
											"end": 7268,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7251,
											"end": 7260,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7247,
											"end": 7269,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7226,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 7226,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7226,
											"end": 7279,
											"name": "tag",
											"source": 17,
											"value": "725"
										},
										{
											"begin": 7226,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7216,
											"end": 7279,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7216,
											"end": 7279,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7171,
											"end": 7289,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 7296,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 7296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 7296,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 7296,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 7296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 7296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7302,
											"end": 7419,
											"name": "tag",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 7302,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7411,
											"end": 7412,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7409,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7401,
											"end": 7413,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7425,
											"end": 7542,
											"name": "tag",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 7425,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7534,
											"end": 7535,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7532,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7524,
											"end": 7536,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7548,
											"end": 7650,
											"name": "tag",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 7548,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7589,
											"end": 7595,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7642,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7636,
											"end": 7643,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 7631,
											"end": 7633,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 7624,
											"end": 7629,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7620,
											"end": 7634,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7616,
											"end": 7644,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7606,
											"end": 7644,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7606,
											"end": 7644,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7548,
											"end": 7650,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7548,
											"end": 7650,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7548,
											"end": 7650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7548,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7656,
											"end": 7836,
											"name": "tag",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 7656,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7704,
											"end": 7781,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7701,
											"end": 7702,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7782,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7801,
											"end": 7805,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7791,
											"end": 7806,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7822,
											"end": 7823,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7842,
											"end": 8123,
											"name": "tag",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 7842,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7925,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "731"
										},
										{
											"begin": 7947,
											"end": 7951,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7925,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 7925,
											"end": 7952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7925,
											"end": 7952,
											"name": "tag",
											"source": 17,
											"value": "731"
										},
										{
											"begin": 7925,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7913,
											"end": 7953,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8055,
											"end": 8061,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8043,
											"end": 8053,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8040,
											"end": 8062,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 8019,
											"end": 8037,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8007,
											"end": 8017,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8001,
											"end": 8063,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 8086,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 7998,
											"end": 8086,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8066,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 8066,
											"end": 8084,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 8066,
											"end": 8084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8066,
											"end": 8084,
											"name": "tag",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 8066,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 8086,
											"name": "tag",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 7998,
											"end": 8086,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8106,
											"end": 8116,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8102,
											"end": 8104,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8095,
											"end": 8117,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7885,
											"end": 8123,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7842,
											"end": 8123,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7842,
											"end": 8123,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7842,
											"end": 8123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8129,
											"end": 8258,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 8129,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8163,
											"end": 8169,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8190,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 8190,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 8190,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8190,
											"end": 8210,
											"name": "tag",
											"source": 17,
											"value": "735"
										},
										{
											"begin": 8190,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8180,
											"end": 8210,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8180,
											"end": 8210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8219,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "736"
										},
										{
											"begin": 8247,
											"end": 8251,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8239,
											"end": 8245,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8219,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 8219,
											"end": 8252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8219,
											"end": 8252,
											"name": "tag",
											"source": 17,
											"value": "736"
										},
										{
											"begin": 8219,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8129,
											"end": 8258,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8129,
											"end": 8258,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8129,
											"end": 8258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8129,
											"end": 8258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8264,
											"end": 8571,
											"name": "tag",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 8264,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8325,
											"end": 8329,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8407,
											"end": 8413,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8404,
											"end": 8434,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8401,
											"end": 8457,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8401,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "738"
										},
										{
											"begin": 8401,
											"end": 8457,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "739"
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 8437,
											"end": 8455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "tag",
											"source": 17,
											"value": "739"
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8401,
											"end": 8457,
											"name": "tag",
											"source": 17,
											"value": "738"
										},
										{
											"begin": 8401,
											"end": 8457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8475,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 8497,
											"end": 8503,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8475,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 8475,
											"end": 8504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8475,
											"end": 8504,
											"name": "tag",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 8475,
											"end": 8504,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8467,
											"end": 8504,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8467,
											"end": 8504,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8559,
											"end": 8563,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8553,
											"end": 8557,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8549,
											"end": 8564,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8541,
											"end": 8564,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8541,
											"end": 8564,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8264,
											"end": 8571,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8264,
											"end": 8571,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8264,
											"end": 8571,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8264,
											"end": 8571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8577,
											"end": 8725,
											"name": "tag",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 8577,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8675,
											"end": 8681,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8670,
											"end": 8673,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8665,
											"end": 8668,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8652,
											"end": 8682,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 8716,
											"end": 8717,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8713,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8702,
											"end": 8705,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 8714,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8691,
											"end": 8718,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8577,
											"end": 8725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8577,
											"end": 8725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8577,
											"end": 8725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8577,
											"end": 8725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 9154,
											"name": "tag",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 8731,
											"end": 9154,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8808,
											"end": 8813,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 8898,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "743"
										},
										{
											"begin": 8849,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "744"
										},
										{
											"begin": 8890,
											"end": 8896,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8849,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 8849,
											"end": 8897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8849,
											"end": 8897,
											"name": "tag",
											"source": 17,
											"value": "744"
										},
										{
											"begin": 8849,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8833,
											"end": 8898,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 8833,
											"end": 8898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8833,
											"end": 8898,
											"name": "tag",
											"source": 17,
											"value": "743"
										},
										{
											"begin": 8833,
											"end": 8898,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8824,
											"end": 8898,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8824,
											"end": 8898,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8921,
											"end": 8927,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8914,
											"end": 8919,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8907,
											"end": 8928,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8959,
											"end": 8963,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8952,
											"end": 8957,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8948,
											"end": 8964,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8997,
											"end": 9000,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8988,
											"end": 8994,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8983,
											"end": 8986,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8979,
											"end": 8995,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8976,
											"end": 9001,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8973,
											"end": 9085,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8973,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 8973,
											"end": 9085,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9004,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 9004,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 9004,
											"end": 9083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9004,
											"end": 9083,
											"name": "tag",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 9004,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8973,
											"end": 9085,
											"name": "tag",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 8973,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9094,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 9141,
											"end": 9147,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9131,
											"end": 9134,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9094,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 9094,
											"end": 9148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9094,
											"end": 9148,
											"name": "tag",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 9094,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8814,
											"end": 9154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 9154,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 9154,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 9154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 9154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 9154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 9154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9511,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 9173,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9228,
											"end": 9233,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9277,
											"end": 9280,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9270,
											"end": 9274,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 9262,
											"end": 9268,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9258,
											"end": 9275,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9254,
											"end": 9281,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9244,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "749"
										},
										{
											"begin": 9244,
											"end": 9366,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9285,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 9285,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 9285,
											"end": 9364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9285,
											"end": 9364,
											"name": "tag",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 9285,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9244,
											"end": 9366,
											"name": "tag",
											"source": 17,
											"value": "749"
										},
										{
											"begin": 9244,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9402,
											"end": 9408,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9389,
											"end": 9409,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9427,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 9501,
											"end": 9504,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9493,
											"end": 9499,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9486,
											"end": 9490,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9478,
											"end": 9484,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9474,
											"end": 9491,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9427,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 9427,
											"end": 9505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9427,
											"end": 9505,
											"name": "tag",
											"source": 17,
											"value": "751"
										},
										{
											"begin": 9427,
											"end": 9505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9418,
											"end": 9505,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9418,
											"end": 9505,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9234,
											"end": 9511,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9511,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9511,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9511,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9511,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9517,
											"end": 10169,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 9517,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9594,
											"end": 9600,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9602,
											"end": 9608,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9651,
											"end": 9653,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9639,
											"end": 9648,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9630,
											"end": 9637,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9626,
											"end": 9649,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9622,
											"end": 9654,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9619,
											"end": 9738,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9619,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "753"
										},
										{
											"begin": 9619,
											"end": 9738,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9657,
											"end": 9736,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "754"
										},
										{
											"begin": 9657,
											"end": 9736,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 9657,
											"end": 9736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9657,
											"end": 9736,
											"name": "tag",
											"source": 17,
											"value": "754"
										},
										{
											"begin": 9657,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9619,
											"end": 9738,
											"name": "tag",
											"source": 17,
											"value": "753"
										},
										{
											"begin": 9619,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9777,
											"end": 9778,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 9847,
											"end": 9854,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9838,
											"end": 9844,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9827,
											"end": 9836,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9823,
											"end": 9845,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9802,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 9802,
											"end": 9855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9802,
											"end": 9855,
											"name": "tag",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 9802,
											"end": 9855,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9792,
											"end": 9855,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9792,
											"end": 9855,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9748,
											"end": 9865,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9932,
											"end": 9934,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9921,
											"end": 9930,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9917,
											"end": 9935,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9904,
											"end": 9936,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9955,
											"end": 9961,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9952,
											"end": 9982,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9949,
											"end": 10066,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9949,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 9949,
											"end": 10066,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9985,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 9985,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 9985,
											"end": 10064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9985,
											"end": 10064,
											"name": "tag",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 9985,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9949,
											"end": 10066,
											"name": "tag",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 9949,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10090,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 10144,
											"end": 10151,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10124,
											"end": 10133,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10120,
											"end": 10142,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10090,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 10090,
											"end": 10152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10090,
											"end": 10152,
											"name": "tag",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 10090,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10080,
											"end": 10152,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10080,
											"end": 10152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9875,
											"end": 10162,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9517,
											"end": 10169,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9517,
											"end": 10169,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9517,
											"end": 10169,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9517,
											"end": 10169,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9517,
											"end": 10169,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9517,
											"end": 10169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10175,
											"end": 10507,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 10175,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10296,
											"end": 10300,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10334,
											"end": 10336,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10323,
											"end": 10332,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10319,
											"end": 10337,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10311,
											"end": 10337,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10311,
											"end": 10337,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10347,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "760"
										},
										{
											"begin": 10415,
											"end": 10416,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10413,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10400,
											"end": 10417,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10391,
											"end": 10397,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10347,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 10347,
											"end": 10418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10347,
											"end": 10418,
											"name": "tag",
											"source": 17,
											"value": "760"
										},
										{
											"begin": 10347,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10428,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "761"
										},
										{
											"begin": 10496,
											"end": 10498,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10485,
											"end": 10494,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10481,
											"end": 10499,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10472,
											"end": 10478,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10428,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 10428,
											"end": 10500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10428,
											"end": 10500,
											"name": "tag",
											"source": 17,
											"value": "761"
										},
										{
											"begin": 10428,
											"end": 10500,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10175,
											"end": 10507,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 10175,
											"end": 10507,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10175,
											"end": 10507,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10175,
											"end": 10507,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10175,
											"end": 10507,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10175,
											"end": 10507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10513,
											"end": 10612,
											"name": "tag",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 10513,
											"end": 10612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10565,
											"end": 10571,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10599,
											"end": 10604,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10593,
											"end": 10605,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10583,
											"end": 10605,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10583,
											"end": 10605,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10513,
											"end": 10612,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10513,
											"end": 10612,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10513,
											"end": 10612,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10513,
											"end": 10612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10618,
											"end": 10787,
											"name": "tag",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 10618,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10702,
											"end": 10713,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10742,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10731,
											"end": 10734,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10724,
											"end": 10743,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10776,
											"end": 10780,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10771,
											"end": 10774,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10767,
											"end": 10781,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10752,
											"end": 10781,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10752,
											"end": 10781,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10618,
											"end": 10787,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10618,
											"end": 10787,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10618,
											"end": 10787,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10618,
											"end": 10787,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10618,
											"end": 10787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10793,
											"end": 10932,
											"name": "tag",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 10793,
											"end": 10932,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10882,
											"end": 10888,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10877,
											"end": 10880,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10872,
											"end": 10875,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10866,
											"end": 10889,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 10923,
											"end": 10924,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10914,
											"end": 10920,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10909,
											"end": 10912,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10905,
											"end": 10921,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10898,
											"end": 10925,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10793,
											"end": 10932,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10793,
											"end": 10932,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10793,
											"end": 10932,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10793,
											"end": 10932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10938,
											"end": 11315,
											"name": "tag",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 10938,
											"end": 11315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11026,
											"end": 11029,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11054,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "766"
										},
										{
											"begin": 11087,
											"end": 11092,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11054,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 11054,
											"end": 11093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11054,
											"end": 11093,
											"name": "tag",
											"source": 17,
											"value": "766"
										},
										{
											"begin": 11054,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11109,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11168,
											"end": 11171,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11109,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 11109,
											"end": 11180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11109,
											"end": 11180,
											"name": "tag",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 11109,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11102,
											"end": 11180,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 11102,
											"end": 11180,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11189,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "768"
										},
										{
											"begin": 11247,
											"end": 11253,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11242,
											"end": 11245,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11235,
											"end": 11239,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11228,
											"end": 11233,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11224,
											"end": 11240,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11189,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 11189,
											"end": 11254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11189,
											"end": 11254,
											"name": "tag",
											"source": 17,
											"value": "768"
										},
										{
											"begin": 11189,
											"end": 11254,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11279,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "769"
										},
										{
											"begin": 11301,
											"end": 11307,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11279,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 11279,
											"end": 11308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11279,
											"end": 11308,
											"name": "tag",
											"source": 17,
											"value": "769"
										},
										{
											"begin": 11279,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11274,
											"end": 11277,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11270,
											"end": 11309,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11263,
											"end": 11309,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11263,
											"end": 11309,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11030,
											"end": 11315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10938,
											"end": 11315,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10938,
											"end": 11315,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10938,
											"end": 11315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10938,
											"end": 11315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10938,
											"end": 11315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11321,
											"end": 11634,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 11321,
											"end": 11634,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11434,
											"end": 11438,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11474,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11457,
											"end": 11475,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11449,
											"end": 11475,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11449,
											"end": 11475,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11521,
											"end": 11530,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11515,
											"end": 11519,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11511,
											"end": 11531,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11507,
											"end": 11508,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11496,
											"end": 11505,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11492,
											"end": 11509,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11485,
											"end": 11532,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11549,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "771"
										},
										{
											"begin": 11622,
											"end": 11626,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11613,
											"end": 11619,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11549,
											"end": 11627,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 11549,
											"end": 11627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11549,
											"end": 11627,
											"name": "tag",
											"source": 17,
											"value": "771"
										},
										{
											"begin": 11549,
											"end": 11627,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11541,
											"end": 11627,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11541,
											"end": 11627,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11321,
											"end": 11634,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11321,
											"end": 11634,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11321,
											"end": 11634,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11321,
											"end": 11634,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11321,
											"end": 11634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11640,
											"end": 12259,
											"name": "tag",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 11640,
											"end": 12259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11717,
											"end": 11723,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11725,
											"end": 11731,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11733,
											"end": 11739,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11782,
											"end": 11784,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 11770,
											"end": 11779,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11761,
											"end": 11768,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11757,
											"end": 11780,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11753,
											"end": 11785,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11750,
											"end": 11869,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11750,
											"end": 11869,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "773"
										},
										{
											"begin": 11750,
											"end": 11869,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11788,
											"end": 11867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "774"
										},
										{
											"begin": 11788,
											"end": 11867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 11788,
											"end": 11867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11788,
											"end": 11867,
											"name": "tag",
											"source": 17,
											"value": "774"
										},
										{
											"begin": 11788,
											"end": 11867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11750,
											"end": 11869,
											"name": "tag",
											"source": 17,
											"value": "773"
										},
										{
											"begin": 11750,
											"end": 11869,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11908,
											"end": 11909,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11933,
											"end": 11986,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "775"
										},
										{
											"begin": 11978,
											"end": 11985,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11969,
											"end": 11975,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11958,
											"end": 11967,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11954,
											"end": 11976,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11933,
											"end": 11986,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 11933,
											"end": 11986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11933,
											"end": 11986,
											"name": "tag",
											"source": 17,
											"value": "775"
										},
										{
											"begin": 11933,
											"end": 11986,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11923,
											"end": 11986,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 11923,
											"end": 11986,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11879,
											"end": 11996,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12035,
											"end": 12037,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12061,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "776"
										},
										{
											"begin": 12106,
											"end": 12113,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12097,
											"end": 12103,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12086,
											"end": 12095,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12082,
											"end": 12104,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12061,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 12061,
											"end": 12114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12061,
											"end": 12114,
											"name": "tag",
											"source": 17,
											"value": "776"
										},
										{
											"begin": 12061,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12051,
											"end": 12114,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12051,
											"end": 12114,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12006,
											"end": 12124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12163,
											"end": 12165,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12189,
											"end": 12242,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "777"
										},
										{
											"begin": 12234,
											"end": 12241,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12225,
											"end": 12231,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12214,
											"end": 12223,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12210,
											"end": 12232,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12189,
											"end": 12242,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 12189,
											"end": 12242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12189,
											"end": 12242,
											"name": "tag",
											"source": 17,
											"value": "777"
										},
										{
											"begin": 12189,
											"end": 12242,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12179,
											"end": 12242,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12179,
											"end": 12242,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12134,
											"end": 12252,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11640,
											"end": 12259,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11640,
											"end": 12259,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11640,
											"end": 12259,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11640,
											"end": 12259,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11640,
											"end": 12259,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11640,
											"end": 12259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 13322,
											"name": "tag",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 12265,
											"end": 13322,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12377,
											"end": 12383,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12385,
											"end": 12391,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12393,
											"end": 12399,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12401,
											"end": 12407,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12409,
											"end": 12415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12458,
											"end": 12461,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 12446,
											"end": 12455,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12437,
											"end": 12444,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 12433,
											"end": 12456,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12429,
											"end": 12462,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 12426,
											"end": 12546,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12426,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "779"
										},
										{
											"begin": 12426,
											"end": 12546,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12465,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "780"
										},
										{
											"begin": 12465,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 12465,
											"end": 12544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12465,
											"end": 12544,
											"name": "tag",
											"source": 17,
											"value": "780"
										},
										{
											"begin": 12465,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12426,
											"end": 12546,
											"name": "tag",
											"source": 17,
											"value": "779"
										},
										{
											"begin": 12426,
											"end": 12546,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12585,
											"end": 12586,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12610,
											"end": 12663,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "781"
										},
										{
											"begin": 12655,
											"end": 12662,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 12646,
											"end": 12652,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12635,
											"end": 12644,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 12631,
											"end": 12653,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12610,
											"end": 12663,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 12610,
											"end": 12663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12610,
											"end": 12663,
											"name": "tag",
											"source": 17,
											"value": "781"
										},
										{
											"begin": 12610,
											"end": 12663,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12600,
											"end": 12663,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 12600,
											"end": 12663,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12556,
											"end": 12673,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12712,
											"end": 12714,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12738,
											"end": 12791,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "782"
										},
										{
											"begin": 12783,
											"end": 12790,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 12774,
											"end": 12780,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12763,
											"end": 12772,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 12759,
											"end": 12781,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12738,
											"end": 12791,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 12738,
											"end": 12791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12738,
											"end": 12791,
											"name": "tag",
											"source": 17,
											"value": "782"
										},
										{
											"begin": 12738,
											"end": 12791,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12728,
											"end": 12791,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 12728,
											"end": 12791,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12683,
											"end": 12801,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12840,
											"end": 12842,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12866,
											"end": 12919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "783"
										},
										{
											"begin": 12911,
											"end": 12918,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 12902,
											"end": 12908,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12891,
											"end": 12900,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 12887,
											"end": 12909,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12866,
											"end": 12919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 12866,
											"end": 12919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12866,
											"end": 12919,
											"name": "tag",
											"source": 17,
											"value": "783"
										},
										{
											"begin": 12866,
											"end": 12919,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12856,
											"end": 12919,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 12856,
											"end": 12919,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12811,
											"end": 12929,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12968,
											"end": 12970,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 12994,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "784"
										},
										{
											"begin": 13039,
											"end": 13046,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 13030,
											"end": 13036,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13019,
											"end": 13028,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 13015,
											"end": 13037,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12994,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 12994,
											"end": 13047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12994,
											"end": 13047,
											"name": "tag",
											"source": 17,
											"value": "784"
										},
										{
											"begin": 12994,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12984,
											"end": 13047,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 12984,
											"end": 13047,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12939,
											"end": 13057,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13096,
											"end": 13099,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 13123,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "785"
										},
										{
											"begin": 13168,
											"end": 13175,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 13159,
											"end": 13165,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13148,
											"end": 13157,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 13144,
											"end": 13166,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13123,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 13123,
											"end": 13176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13123,
											"end": 13176,
											"name": "tag",
											"source": 17,
											"value": "785"
										},
										{
											"begin": 13123,
											"end": 13176,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13113,
											"end": 13176,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13113,
											"end": 13176,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13067,
											"end": 13186,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13225,
											"end": 13228,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 13252,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "786"
										},
										{
											"begin": 13297,
											"end": 13304,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 13288,
											"end": 13294,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13277,
											"end": 13286,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 13273,
											"end": 13295,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13252,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 13252,
											"end": 13305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13252,
											"end": 13305,
											"name": "tag",
											"source": 17,
											"value": "786"
										},
										{
											"begin": 13252,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13242,
											"end": 13305,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13242,
											"end": 13305,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13196,
											"end": 13315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 13322,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 13322,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 13322,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 13322,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 13322,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 13322,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 13322,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 13322,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 13322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13328,
											"end": 13480,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 13328,
											"end": 13480,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13404,
											"end": 13413,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13437,
											"end": 13474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "788"
										},
										{
											"begin": 13468,
											"end": 13473,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13437,
											"end": 13474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 13437,
											"end": 13474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13437,
											"end": 13474,
											"name": "tag",
											"source": 17,
											"value": "788"
										},
										{
											"begin": 13437,
											"end": 13474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13424,
											"end": 13474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13424,
											"end": 13474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13328,
											"end": 13480,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13328,
											"end": 13480,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13328,
											"end": 13480,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13328,
											"end": 13480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13486,
											"end": 13669,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 13486,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13599,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "790"
										},
										{
											"begin": 13656,
											"end": 13661,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13599,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 13599,
											"end": 13662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13599,
											"end": 13662,
											"name": "tag",
											"source": 17,
											"value": "790"
										},
										{
											"begin": 13599,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13594,
											"end": 13597,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13587,
											"end": 13663,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13486,
											"end": 13669,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13486,
											"end": 13669,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13486,
											"end": 13669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13675,
											"end": 13949,
											"name": "tag",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 13675,
											"end": 13949,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13794,
											"end": 13798,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13832,
											"end": 13834,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13821,
											"end": 13830,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13817,
											"end": 13835,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13809,
											"end": 13835,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13809,
											"end": 13835,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13845,
											"end": 13942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "792"
										},
										{
											"begin": 13939,
											"end": 13940,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13928,
											"end": 13937,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13924,
											"end": 13941,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13915,
											"end": 13921,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13845,
											"end": 13942,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 13845,
											"end": 13942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13845,
											"end": 13942,
											"name": "tag",
											"source": 17,
											"value": "792"
										},
										{
											"begin": 13845,
											"end": 13942,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13675,
											"end": 13949,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13675,
											"end": 13949,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13675,
											"end": 13949,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13675,
											"end": 13949,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13675,
											"end": 13949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13955,
											"end": 14073,
											"name": "tag",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 13955,
											"end": 14073,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14042,
											"end": 14066,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "794"
										},
										{
											"begin": 14060,
											"end": 14065,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14042,
											"end": 14066,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 14042,
											"end": 14066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14042,
											"end": 14066,
											"name": "tag",
											"source": 17,
											"value": "794"
										},
										{
											"begin": 14042,
											"end": 14066,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14037,
											"end": 14040,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14030,
											"end": 14067,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13955,
											"end": 14073,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13955,
											"end": 14073,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13955,
											"end": 14073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14079,
											"end": 14521,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 14079,
											"end": 14521,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14228,
											"end": 14232,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14266,
											"end": 14268,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 14255,
											"end": 14264,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14243,
											"end": 14269,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14243,
											"end": 14269,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14279,
											"end": 14350,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "796"
										},
										{
											"begin": 14347,
											"end": 14348,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14336,
											"end": 14345,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14332,
											"end": 14349,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14323,
											"end": 14329,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14279,
											"end": 14350,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 14279,
											"end": 14350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14279,
											"end": 14350,
											"name": "tag",
											"source": 17,
											"value": "796"
										},
										{
											"begin": 14279,
											"end": 14350,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14360,
											"end": 14432,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "797"
										},
										{
											"begin": 14428,
											"end": 14430,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14417,
											"end": 14426,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14413,
											"end": 14431,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14404,
											"end": 14410,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14360,
											"end": 14432,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 14360,
											"end": 14432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14360,
											"end": 14432,
											"name": "tag",
											"source": 17,
											"value": "797"
										},
										{
											"begin": 14360,
											"end": 14432,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14442,
											"end": 14514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "798"
										},
										{
											"begin": 14510,
											"end": 14512,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14499,
											"end": 14508,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14495,
											"end": 14513,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14486,
											"end": 14492,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14442,
											"end": 14514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 14442,
											"end": 14514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14442,
											"end": 14514,
											"name": "tag",
											"source": 17,
											"value": "798"
										},
										{
											"begin": 14442,
											"end": 14514,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14079,
											"end": 14521,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 14079,
											"end": 14521,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 14079,
											"end": 14521,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14079,
											"end": 14521,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14079,
											"end": 14521,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14079,
											"end": 14521,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14079,
											"end": 14521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14527,
											"end": 14859,
											"name": "tag",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 14527,
											"end": 14859,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14648,
											"end": 14652,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14686,
											"end": 14688,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14675,
											"end": 14684,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14671,
											"end": 14689,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14663,
											"end": 14689,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14663,
											"end": 14689,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14699,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "800"
										},
										{
											"begin": 14767,
											"end": 14768,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14756,
											"end": 14765,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14752,
											"end": 14769,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14743,
											"end": 14749,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14699,
											"end": 14770,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 14699,
											"end": 14770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14699,
											"end": 14770,
											"name": "tag",
											"source": 17,
											"value": "800"
										},
										{
											"begin": 14699,
											"end": 14770,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14780,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "801"
										},
										{
											"begin": 14848,
											"end": 14850,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14846,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14833,
											"end": 14851,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14824,
											"end": 14830,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14780,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 14780,
											"end": 14852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14780,
											"end": 14852,
											"name": "tag",
											"source": 17,
											"value": "801"
										},
										{
											"begin": 14780,
											"end": 14852,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14527,
											"end": 14859,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 14527,
											"end": 14859,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14527,
											"end": 14859,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14527,
											"end": 14859,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14527,
											"end": 14859,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14527,
											"end": 14859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14865,
											"end": 14981,
											"name": "tag",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 14865,
											"end": 14981,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14935,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "803"
										},
										{
											"begin": 14950,
											"end": 14955,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14935,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 14935,
											"end": 14956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14935,
											"end": 14956,
											"name": "tag",
											"source": 17,
											"value": "803"
										},
										{
											"begin": 14935,
											"end": 14956,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14928,
											"end": 14933,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14925,
											"end": 14957,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 14915,
											"end": 14975,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "804"
										},
										{
											"begin": 14915,
											"end": 14975,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14971,
											"end": 14972,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 14969,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14961,
											"end": 14973,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14915,
											"end": 14975,
											"name": "tag",
											"source": 17,
											"value": "804"
										},
										{
											"begin": 14915,
											"end": 14975,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14865,
											"end": 14981,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14865,
											"end": 14981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14987,
											"end": 15124,
											"name": "tag",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 14987,
											"end": 15124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15041,
											"end": 15046,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15072,
											"end": 15078,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15066,
											"end": 15079,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15088,
											"end": 15118,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "806"
										},
										{
											"begin": 15112,
											"end": 15117,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15088,
											"end": 15118,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 15088,
											"end": 15118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15088,
											"end": 15118,
											"name": "tag",
											"source": 17,
											"value": "806"
										},
										{
											"begin": 15088,
											"end": 15118,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14987,
											"end": 15124,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14987,
											"end": 15124,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14987,
											"end": 15124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14987,
											"end": 15124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14987,
											"end": 15124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15130,
											"end": 15475,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 15130,
											"end": 15475,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15197,
											"end": 15203,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15246,
											"end": 15248,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15234,
											"end": 15243,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15225,
											"end": 15232,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15221,
											"end": 15244,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 15217,
											"end": 15249,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 15214,
											"end": 15333,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15214,
											"end": 15333,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "808"
										},
										{
											"begin": 15214,
											"end": 15333,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15252,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "809"
										},
										{
											"begin": 15252,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 15252,
											"end": 15331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15252,
											"end": 15331,
											"name": "tag",
											"source": 17,
											"value": "809"
										},
										{
											"begin": 15252,
											"end": 15331,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15214,
											"end": 15333,
											"name": "tag",
											"source": 17,
											"value": "808"
										},
										{
											"begin": 15214,
											"end": 15333,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15372,
											"end": 15373,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15397,
											"end": 15458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "810"
										},
										{
											"begin": 15450,
											"end": 15457,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15441,
											"end": 15447,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15430,
											"end": 15439,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15426,
											"end": 15448,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15397,
											"end": 15458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 15397,
											"end": 15458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15397,
											"end": 15458,
											"name": "tag",
											"source": 17,
											"value": "810"
										},
										{
											"begin": 15397,
											"end": 15458,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15387,
											"end": 15458,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15387,
											"end": 15458,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15343,
											"end": 15468,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15130,
											"end": 15475,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15130,
											"end": 15475,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15130,
											"end": 15475,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15130,
											"end": 15475,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15130,
											"end": 15475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15481,
											"end": 15704,
											"name": "tag",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 15481,
											"end": 15704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15621,
											"end": 15655,
											"name": "PUSH",
											"source": 17,
											"value": "45544820616D6F756E74206D7573742062652067726561746572207468616E20"
										},
										{
											"begin": 15617,
											"end": 15618,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15609,
											"end": 15615,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15605,
											"end": 15619,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15598,
											"end": 15656,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15690,
											"end": 15696,
											"name": "PUSH",
											"source": 17,
											"value": "7A65726F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15685,
											"end": 15687,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15677,
											"end": 15683,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15673,
											"end": 15688,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15666,
											"end": 15697,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15481,
											"end": 15704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15481,
											"end": 15704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15710,
											"end": 16076,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 15710,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15852,
											"end": 15855,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15873,
											"end": 15940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "813"
										},
										{
											"begin": 15937,
											"end": 15939,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 15932,
											"end": 15935,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15873,
											"end": 15940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 15873,
											"end": 15940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15873,
											"end": 15940,
											"name": "tag",
											"source": 17,
											"value": "813"
										},
										{
											"begin": 15873,
											"end": 15940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15866,
											"end": 15940,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15866,
											"end": 15940,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15949,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "814"
										},
										{
											"begin": 16038,
											"end": 16041,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15949,
											"end": 16042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 15949,
											"end": 16042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15949,
											"end": 16042,
											"name": "tag",
											"source": 17,
											"value": "814"
										},
										{
											"begin": 15949,
											"end": 16042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16067,
											"end": 16069,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 16062,
											"end": 16065,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16058,
											"end": 16070,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16051,
											"end": 16070,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15710,
											"end": 16076,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15710,
											"end": 16076,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15710,
											"end": 16076,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15710,
											"end": 16076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "tag",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16248,
											"end": 16252,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16286,
											"end": 16288,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16275,
											"end": 16284,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16271,
											"end": 16289,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16263,
											"end": 16289,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16263,
											"end": 16289,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16335,
											"end": 16344,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16329,
											"end": 16333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16325,
											"end": 16345,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16321,
											"end": 16322,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16310,
											"end": 16319,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16306,
											"end": 16323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16299,
											"end": 16346,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "816"
										},
										{
											"begin": 16489,
											"end": 16493,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 16363,
											"end": 16494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "tag",
											"source": 17,
											"value": "816"
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16355,
											"end": 16494,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16355,
											"end": 16494,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16082,
											"end": 16501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16507,
											"end": 16650,
											"name": "tag",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 16507,
											"end": 16650,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16564,
											"end": 16569,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16595,
											"end": 16601,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16589,
											"end": 16602,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 16580,
											"end": 16602,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16580,
											"end": 16602,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16611,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "818"
										},
										{
											"begin": 16638,
											"end": 16643,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16611,
											"end": 16644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 16611,
											"end": 16644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16611,
											"end": 16644,
											"name": "tag",
											"source": 17,
											"value": "818"
										},
										{
											"begin": 16611,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16507,
											"end": 16650,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16507,
											"end": 16650,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16507,
											"end": 16650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16507,
											"end": 16650,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16507,
											"end": 16650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16656,
											"end": 17007,
											"name": "tag",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 16656,
											"end": 17007,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16726,
											"end": 16732,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16775,
											"end": 16777,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16772,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16754,
											"end": 16761,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16750,
											"end": 16773,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16746,
											"end": 16778,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 16743,
											"end": 16862,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 16743,
											"end": 16862,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "820"
										},
										{
											"begin": 16743,
											"end": 16862,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16781,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "821"
										},
										{
											"begin": 16781,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 16781,
											"end": 16860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16781,
											"end": 16860,
											"name": "tag",
											"source": 17,
											"value": "821"
										},
										{
											"begin": 16781,
											"end": 16860,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16743,
											"end": 16862,
											"name": "tag",
											"source": 17,
											"value": "820"
										},
										{
											"begin": 16743,
											"end": 16862,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16901,
											"end": 16902,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16926,
											"end": 16990,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "822"
										},
										{
											"begin": 16982,
											"end": 16989,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16973,
											"end": 16979,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16962,
											"end": 16971,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16958,
											"end": 16980,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16926,
											"end": 16990,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 16926,
											"end": 16990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16926,
											"end": 16990,
											"name": "tag",
											"source": 17,
											"value": "822"
										},
										{
											"begin": 16926,
											"end": 16990,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16916,
											"end": 16990,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16916,
											"end": 16990,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16872,
											"end": 17000,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16656,
											"end": 17007,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16656,
											"end": 17007,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16656,
											"end": 17007,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16656,
											"end": 17007,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16656,
											"end": 17007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17013,
											"end": 17188,
											"name": "tag",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 17013,
											"end": 17188,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17153,
											"end": 17180,
											"name": "PUSH",
											"source": 17,
											"value": "4E4654206E6F74206F776E656420627920636F6E747261637400000000000000"
										},
										{
											"begin": 17149,
											"end": 17150,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17141,
											"end": 17147,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17137,
											"end": 17151,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17130,
											"end": 17181,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17013,
											"end": 17188,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17013,
											"end": 17188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17194,
											"end": 17560,
											"name": "tag",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 17194,
											"end": 17560,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17336,
											"end": 17339,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17357,
											"end": 17424,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "825"
										},
										{
											"begin": 17421,
											"end": 17423,
											"name": "PUSH",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 17416,
											"end": 17419,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17357,
											"end": 17424,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 17357,
											"end": 17424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17357,
											"end": 17424,
											"name": "tag",
											"source": 17,
											"value": "825"
										},
										{
											"begin": 17357,
											"end": 17424,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17350,
											"end": 17424,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17350,
											"end": 17424,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17433,
											"end": 17526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "826"
										},
										{
											"begin": 17522,
											"end": 17525,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17433,
											"end": 17526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 17433,
											"end": 17526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17433,
											"end": 17526,
											"name": "tag",
											"source": 17,
											"value": "826"
										},
										{
											"begin": 17433,
											"end": 17526,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17551,
											"end": 17553,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17546,
											"end": 17549,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17542,
											"end": 17554,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17535,
											"end": 17554,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17535,
											"end": 17554,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17194,
											"end": 17560,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17194,
											"end": 17560,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17194,
											"end": 17560,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17194,
											"end": 17560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17566,
											"end": 17985,
											"name": "tag",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 17566,
											"end": 17985,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17732,
											"end": 17736,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17770,
											"end": 17772,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17759,
											"end": 17768,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17755,
											"end": 17773,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17747,
											"end": 17773,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17747,
											"end": 17773,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17819,
											"end": 17828,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17813,
											"end": 17817,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17809,
											"end": 17829,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17805,
											"end": 17806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17794,
											"end": 17803,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17790,
											"end": 17807,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17783,
											"end": 17830,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17847,
											"end": 17978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "828"
										},
										{
											"begin": 17973,
											"end": 17977,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17847,
											"end": 17978,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 17847,
											"end": 17978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17847,
											"end": 17978,
											"name": "tag",
											"source": 17,
											"value": "828"
										},
										{
											"begin": 17847,
											"end": 17978,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17839,
											"end": 17978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17839,
											"end": 17978,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17566,
											"end": 17985,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17566,
											"end": 17985,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17566,
											"end": 17985,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17566,
											"end": 17985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17991,
											"end": 18171,
											"name": "tag",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 17991,
											"end": 18171,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18039,
											"end": 18116,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18036,
											"end": 18037,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18029,
											"end": 18117,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18136,
											"end": 18140,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 18133,
											"end": 18134,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 18126,
											"end": 18141,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18160,
											"end": 18164,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 18157,
											"end": 18158,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18150,
											"end": 18165,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 18177,
											"end": 18371,
											"name": "tag",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 18177,
											"end": 18371,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18217,
											"end": 18221,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18237,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "831"
										},
										{
											"begin": 18255,
											"end": 18256,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18237,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 18237,
											"end": 18257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18237,
											"end": 18257,
											"name": "tag",
											"source": 17,
											"value": "831"
										},
										{
											"begin": 18237,
											"end": 18257,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18232,
											"end": 18257,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18271,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "832"
										},
										{
											"begin": 18289,
											"end": 18290,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18271,
											"end": 18291,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 18271,
											"end": 18291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18271,
											"end": 18291,
											"name": "tag",
											"source": 17,
											"value": "832"
										},
										{
											"begin": 18271,
											"end": 18291,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18266,
											"end": 18291,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18266,
											"end": 18291,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18315,
											"end": 18316,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18312,
											"end": 18313,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18308,
											"end": 18317,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 18300,
											"end": 18317,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18300,
											"end": 18317,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18339,
											"end": 18340,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18333,
											"end": 18337,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18330,
											"end": 18341,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 18327,
											"end": 18364,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 18327,
											"end": 18364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "833"
										},
										{
											"begin": 18327,
											"end": 18364,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18344,
											"end": 18362,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "834"
										},
										{
											"begin": 18344,
											"end": 18362,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 18344,
											"end": 18362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18344,
											"end": 18362,
											"name": "tag",
											"source": 17,
											"value": "834"
										},
										{
											"begin": 18344,
											"end": 18362,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18327,
											"end": 18364,
											"name": "tag",
											"source": 17,
											"value": "833"
										},
										{
											"begin": 18327,
											"end": 18364,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18177,
											"end": 18371,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18177,
											"end": 18371,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18177,
											"end": 18371,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18177,
											"end": 18371,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18177,
											"end": 18371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18377,
											"end": 18554,
											"name": "tag",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 18377,
											"end": 18554,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18517,
											"end": 18546,
											"name": "PUSH",
											"source": 17,
											"value": "536C69707061676520746F6C6572616E63652065786365656465640000000000"
										},
										{
											"begin": 18513,
											"end": 18514,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18505,
											"end": 18511,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18501,
											"end": 18515,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18494,
											"end": 18547,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18377,
											"end": 18554,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18377,
											"end": 18554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18560,
											"end": 18926,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 18560,
											"end": 18926,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18702,
											"end": 18705,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18723,
											"end": 18790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "837"
										},
										{
											"begin": 18787,
											"end": 18789,
											"name": "PUSH",
											"source": 17,
											"value": "1B"
										},
										{
											"begin": 18782,
											"end": 18785,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18723,
											"end": 18790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 18723,
											"end": 18790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18723,
											"end": 18790,
											"name": "tag",
											"source": 17,
											"value": "837"
										},
										{
											"begin": 18723,
											"end": 18790,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18716,
											"end": 18790,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18716,
											"end": 18790,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18799,
											"end": 18892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "838"
										},
										{
											"begin": 18888,
											"end": 18891,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18799,
											"end": 18892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 18799,
											"end": 18892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18799,
											"end": 18892,
											"name": "tag",
											"source": 17,
											"value": "838"
										},
										{
											"begin": 18799,
											"end": 18892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18917,
											"end": 18919,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18912,
											"end": 18915,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18908,
											"end": 18920,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18901,
											"end": 18920,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18901,
											"end": 18920,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18560,
											"end": 18926,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18560,
											"end": 18926,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18560,
											"end": 18926,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18560,
											"end": 18926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18932,
											"end": 19351,
											"name": "tag",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 18932,
											"end": 19351,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19098,
											"end": 19102,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19136,
											"end": 19138,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19125,
											"end": 19134,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19121,
											"end": 19139,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19113,
											"end": 19139,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19113,
											"end": 19139,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19185,
											"end": 19194,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19179,
											"end": 19183,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19175,
											"end": 19195,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 19171,
											"end": 19172,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19160,
											"end": 19169,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19156,
											"end": 19173,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19149,
											"end": 19196,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19213,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "840"
										},
										{
											"begin": 19339,
											"end": 19343,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19213,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 19213,
											"end": 19344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19213,
											"end": 19344,
											"name": "tag",
											"source": 17,
											"value": "840"
										},
										{
											"begin": 19213,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19205,
											"end": 19344,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19205,
											"end": 19344,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18932,
											"end": 19351,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18932,
											"end": 19351,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18932,
											"end": 19351,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18932,
											"end": 19351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19357,
											"end": 19529,
											"name": "tag",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 19357,
											"end": 19529,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19497,
											"end": 19521,
											"name": "PUSH",
											"source": 17,
											"value": "496E73756666696369656E74206C697175696469747900000000000000000000"
										},
										{
											"begin": 19493,
											"end": 19494,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19485,
											"end": 19491,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19481,
											"end": 19495,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19474,
											"end": 19522,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19357,
											"end": 19529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19357,
											"end": 19529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19535,
											"end": 19901,
											"name": "tag",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 19535,
											"end": 19901,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19677,
											"end": 19680,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19698,
											"end": 19765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "843"
										},
										{
											"begin": 19762,
											"end": 19764,
											"name": "PUSH",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 19757,
											"end": 19760,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19698,
											"end": 19765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 19698,
											"end": 19765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19698,
											"end": 19765,
											"name": "tag",
											"source": 17,
											"value": "843"
										},
										{
											"begin": 19698,
											"end": 19765,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19691,
											"end": 19765,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19691,
											"end": 19765,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19774,
											"end": 19867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "844"
										},
										{
											"begin": 19863,
											"end": 19866,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19774,
											"end": 19867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 19774,
											"end": 19867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19774,
											"end": 19867,
											"name": "tag",
											"source": 17,
											"value": "844"
										},
										{
											"begin": 19774,
											"end": 19867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19892,
											"end": 19894,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19887,
											"end": 19890,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 19895,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19876,
											"end": 19895,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19876,
											"end": 19895,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19535,
											"end": 19901,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19535,
											"end": 19901,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19535,
											"end": 19901,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19535,
											"end": 19901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19907,
											"end": 20326,
											"name": "tag",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 19907,
											"end": 20326,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20073,
											"end": 20077,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20111,
											"end": 20113,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20100,
											"end": 20109,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20096,
											"end": 20114,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20088,
											"end": 20114,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20088,
											"end": 20114,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20160,
											"end": 20169,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20154,
											"end": 20158,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20150,
											"end": 20170,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 20146,
											"end": 20147,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20135,
											"end": 20144,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20131,
											"end": 20148,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20124,
											"end": 20171,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20188,
											"end": 20319,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "846"
										},
										{
											"begin": 20314,
											"end": 20318,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20188,
											"end": 20319,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 20188,
											"end": 20319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20188,
											"end": 20319,
											"name": "tag",
											"source": 17,
											"value": "846"
										},
										{
											"begin": 20188,
											"end": 20319,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20180,
											"end": 20319,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20180,
											"end": 20319,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19907,
											"end": 20326,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19907,
											"end": 20326,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19907,
											"end": 20326,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19907,
											"end": 20326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20332,
											"end": 20523,
											"name": "tag",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 20332,
											"end": 20523,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20372,
											"end": 20375,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20391,
											"end": 20411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "848"
										},
										{
											"begin": 20409,
											"end": 20410,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20391,
											"end": 20411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 20391,
											"end": 20411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20391,
											"end": 20411,
											"name": "tag",
											"source": 17,
											"value": "848"
										},
										{
											"begin": 20391,
											"end": 20411,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20386,
											"end": 20411,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20386,
											"end": 20411,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20425,
											"end": 20445,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "849"
										},
										{
											"begin": 20443,
											"end": 20444,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20425,
											"end": 20445,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 20425,
											"end": 20445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20425,
											"end": 20445,
											"name": "tag",
											"source": 17,
											"value": "849"
										},
										{
											"begin": 20425,
											"end": 20445,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20420,
											"end": 20445,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20420,
											"end": 20445,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20468,
											"end": 20469,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20465,
											"end": 20466,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20461,
											"end": 20470,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20454,
											"end": 20470,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20454,
											"end": 20470,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20489,
											"end": 20492,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 20486,
											"end": 20487,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20483,
											"end": 20493,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 20480,
											"end": 20516,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20480,
											"end": 20516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "850"
										},
										{
											"begin": 20480,
											"end": 20516,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20496,
											"end": 20514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "851"
										},
										{
											"begin": 20496,
											"end": 20514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 20496,
											"end": 20514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20496,
											"end": 20514,
											"name": "tag",
											"source": 17,
											"value": "851"
										},
										{
											"begin": 20496,
											"end": 20514,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20480,
											"end": 20516,
											"name": "tag",
											"source": 17,
											"value": "850"
										},
										{
											"begin": 20480,
											"end": 20516,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20332,
											"end": 20523,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20332,
											"end": 20523,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20332,
											"end": 20523,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20332,
											"end": 20523,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20332,
											"end": 20523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20529,
											"end": 20754,
											"name": "tag",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 20529,
											"end": 20754,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20669,
											"end": 20703,
											"name": "PUSH",
											"source": 17,
											"value": "546F6B656E20616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 20665,
											"end": 20666,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20657,
											"end": 20663,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20653,
											"end": 20667,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20646,
											"end": 20704,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20738,
											"end": 20746,
											"name": "PUSH",
											"source": 17,
											"value": "6E207A65726F0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20733,
											"end": 20735,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20725,
											"end": 20731,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20721,
											"end": 20736,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20714,
											"end": 20747,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20529,
											"end": 20754,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20529,
											"end": 20754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20760,
											"end": 21126,
											"name": "tag",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 20760,
											"end": 21126,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20902,
											"end": 20905,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20923,
											"end": 20990,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "854"
										},
										{
											"begin": 20987,
											"end": 20989,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 20982,
											"end": 20985,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20923,
											"end": 20990,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 20923,
											"end": 20990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20923,
											"end": 20990,
											"name": "tag",
											"source": 17,
											"value": "854"
										},
										{
											"begin": 20923,
											"end": 20990,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20916,
											"end": 20990,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20916,
											"end": 20990,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20999,
											"end": 21092,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "855"
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20999,
											"end": 21092,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 20999,
											"end": 21092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20999,
											"end": 21092,
											"name": "tag",
											"source": 17,
											"value": "855"
										},
										{
											"begin": 20999,
											"end": 21092,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21117,
											"end": 21119,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 21112,
											"end": 21115,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21108,
											"end": 21120,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21101,
											"end": 21120,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21101,
											"end": 21120,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20760,
											"end": 21126,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20760,
											"end": 21126,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20760,
											"end": 21126,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20760,
											"end": 21126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21132,
											"end": 21551,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 21132,
											"end": 21551,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21298,
											"end": 21302,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21336,
											"end": 21338,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21325,
											"end": 21334,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21321,
											"end": 21339,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21313,
											"end": 21339,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21313,
											"end": 21339,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21385,
											"end": 21394,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21379,
											"end": 21383,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21375,
											"end": 21395,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21371,
											"end": 21372,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21360,
											"end": 21369,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21356,
											"end": 21373,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21349,
											"end": 21396,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21413,
											"end": 21544,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "857"
										},
										{
											"begin": 21539,
											"end": 21543,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21413,
											"end": 21544,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 21413,
											"end": 21544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21413,
											"end": 21544,
											"name": "tag",
											"source": 17,
											"value": "857"
										},
										{
											"begin": 21413,
											"end": 21544,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21405,
											"end": 21544,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21405,
											"end": 21544,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21132,
											"end": 21551,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21132,
											"end": 21551,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21132,
											"end": 21551,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21132,
											"end": 21551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21557,
											"end": 21725,
											"name": "tag",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 21557,
											"end": 21725,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21697,
											"end": 21717,
											"name": "PUSH",
											"source": 17,
											"value": "496E76616C696420706F6F6C2073746174650000000000000000000000000000"
										},
										{
											"begin": 21693,
											"end": 21694,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21685,
											"end": 21691,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21681,
											"end": 21695,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21674,
											"end": 21718,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21557,
											"end": 21725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21557,
											"end": 21725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22097,
											"name": "tag",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 21731,
											"end": 22097,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21873,
											"end": 21876,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21894,
											"end": 21961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "860"
										},
										{
											"begin": 21958,
											"end": 21960,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 21953,
											"end": 21956,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21894,
											"end": 21961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 21894,
											"end": 21961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21894,
											"end": 21961,
											"name": "tag",
											"source": 17,
											"value": "860"
										},
										{
											"begin": 21894,
											"end": 21961,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21887,
											"end": 21961,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21887,
											"end": 21961,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21970,
											"end": 22063,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "861"
										},
										{
											"begin": 22059,
											"end": 22062,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21970,
											"end": 22063,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 21970,
											"end": 22063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21970,
											"end": 22063,
											"name": "tag",
											"source": 17,
											"value": "861"
										},
										{
											"begin": 21970,
											"end": 22063,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22088,
											"end": 22090,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22083,
											"end": 22086,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22079,
											"end": 22091,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22072,
											"end": 22091,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22072,
											"end": 22091,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22097,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22097,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22097,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21731,
											"end": 22097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22103,
											"end": 22522,
											"name": "tag",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 22103,
											"end": 22522,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22269,
											"end": 22273,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22307,
											"end": 22309,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22296,
											"end": 22305,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22292,
											"end": 22310,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22284,
											"end": 22310,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22284,
											"end": 22310,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22356,
											"end": 22365,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22350,
											"end": 22354,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22346,
											"end": 22366,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22342,
											"end": 22343,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22331,
											"end": 22340,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22327,
											"end": 22344,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22320,
											"end": 22367,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22384,
											"end": 22515,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "863"
										},
										{
											"begin": 22510,
											"end": 22514,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22384,
											"end": 22515,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 22384,
											"end": 22515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22384,
											"end": 22515,
											"name": "tag",
											"source": 17,
											"value": "863"
										},
										{
											"begin": 22384,
											"end": 22515,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22376,
											"end": 22515,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22376,
											"end": 22515,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22103,
											"end": 22522,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22103,
											"end": 22522,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22103,
											"end": 22522,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22103,
											"end": 22522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22528,
											"end": 22938,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 22528,
											"end": 22938,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22568,
											"end": 22575,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22591,
											"end": 22611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "865"
										},
										{
											"begin": 22609,
											"end": 22610,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22591,
											"end": 22611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 22591,
											"end": 22611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22591,
											"end": 22611,
											"name": "tag",
											"source": 17,
											"value": "865"
										},
										{
											"begin": 22591,
											"end": 22611,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22586,
											"end": 22611,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22586,
											"end": 22611,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22625,
											"end": 22645,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "866"
										},
										{
											"begin": 22643,
											"end": 22644,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22625,
											"end": 22645,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 22625,
											"end": 22645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22625,
											"end": 22645,
											"name": "tag",
											"source": 17,
											"value": "866"
										},
										{
											"begin": 22625,
											"end": 22645,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22620,
											"end": 22645,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22620,
											"end": 22645,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22680,
											"end": 22681,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22677,
											"end": 22678,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22673,
											"end": 22682,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 22702,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "867"
										},
										{
											"begin": 22720,
											"end": 22731,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22702,
											"end": 22732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 22702,
											"end": 22732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22702,
											"end": 22732,
											"name": "tag",
											"source": 17,
											"value": "867"
										},
										{
											"begin": 22702,
											"end": 22732,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22691,
											"end": 22732,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22691,
											"end": 22732,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22881,
											"end": 22882,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22872,
											"end": 22879,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22868,
											"end": 22883,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 22865,
											"end": 22866,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22862,
											"end": 22884,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 22842,
											"end": 22843,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22835,
											"end": 22844,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22815,
											"end": 22898,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 22792,
											"end": 22931,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "868"
										},
										{
											"begin": 22792,
											"end": 22931,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22911,
											"end": 22929,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "869"
										},
										{
											"begin": 22911,
											"end": 22929,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 22911,
											"end": 22929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22911,
											"end": 22929,
											"name": "tag",
											"source": 17,
											"value": "869"
										},
										{
											"begin": 22911,
											"end": 22929,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22792,
											"end": 22931,
											"name": "tag",
											"source": 17,
											"value": "868"
										},
										{
											"begin": 22792,
											"end": 22931,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22576,
											"end": 22938,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22528,
											"end": 22938,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22528,
											"end": 22938,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22528,
											"end": 22938,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22528,
											"end": 22938,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22528,
											"end": 22938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22944,
											"end": 23124,
											"name": "tag",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 22944,
											"end": 23124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22992,
											"end": 23069,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22989,
											"end": 22990,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22982,
											"end": 23070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23089,
											"end": 23093,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 23086,
											"end": 23087,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 23079,
											"end": 23094,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23113,
											"end": 23117,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 23110,
											"end": 23111,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23103,
											"end": 23118,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 23130,
											"end": 23315,
											"name": "tag",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 23130,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23170,
											"end": 23171,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23187,
											"end": 23207,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "872"
										},
										{
											"begin": 23205,
											"end": 23206,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23187,
											"end": 23207,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 23187,
											"end": 23207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23187,
											"end": 23207,
											"name": "tag",
											"source": 17,
											"value": "872"
										},
										{
											"begin": 23187,
											"end": 23207,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23182,
											"end": 23207,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23182,
											"end": 23207,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23221,
											"end": 23241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "873"
										},
										{
											"begin": 23239,
											"end": 23240,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23221,
											"end": 23241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 23221,
											"end": 23241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23221,
											"end": 23241,
											"name": "tag",
											"source": 17,
											"value": "873"
										},
										{
											"begin": 23221,
											"end": 23241,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23216,
											"end": 23241,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23216,
											"end": 23241,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23260,
											"end": 23261,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23250,
											"end": 23285,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "874"
										},
										{
											"begin": 23250,
											"end": 23285,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23265,
											"end": 23283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "875"
										},
										{
											"begin": 23265,
											"end": 23283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 23265,
											"end": 23283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23265,
											"end": 23283,
											"name": "tag",
											"source": 17,
											"value": "875"
										},
										{
											"begin": 23265,
											"end": 23283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23250,
											"end": 23285,
											"name": "tag",
											"source": 17,
											"value": "874"
										},
										{
											"begin": 23250,
											"end": 23285,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23307,
											"end": 23308,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23304,
											"end": 23305,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23300,
											"end": 23309,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 23295,
											"end": 23309,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23295,
											"end": 23309,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23130,
											"end": 23315,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 23130,
											"end": 23315,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23130,
											"end": 23315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23130,
											"end": 23315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23130,
											"end": 23315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23321,
											"end": 23494,
											"name": "tag",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 23321,
											"end": 23494,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23461,
											"end": 23486,
											"name": "PUSH",
											"source": 17,
											"value": "496E73756666696369656E742045544820616D6F756E74000000000000000000"
										},
										{
											"begin": 23457,
											"end": 23458,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23449,
											"end": 23455,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23445,
											"end": 23459,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23438,
											"end": 23487,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23321,
											"end": 23494,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23321,
											"end": 23494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23500,
											"end": 23866,
											"name": "tag",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 23500,
											"end": 23866,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23642,
											"end": 23645,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23663,
											"end": 23730,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "878"
										},
										{
											"begin": 23727,
											"end": 23729,
											"name": "PUSH",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 23722,
											"end": 23725,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23663,
											"end": 23730,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 23663,
											"end": 23730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23663,
											"end": 23730,
											"name": "tag",
											"source": 17,
											"value": "878"
										},
										{
											"begin": 23663,
											"end": 23730,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23656,
											"end": 23730,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23656,
											"end": 23730,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23739,
											"end": 23832,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "879"
										},
										{
											"begin": 23828,
											"end": 23831,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23739,
											"end": 23832,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 23739,
											"end": 23832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23739,
											"end": 23832,
											"name": "tag",
											"source": 17,
											"value": "879"
										},
										{
											"begin": 23739,
											"end": 23832,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23857,
											"end": 23859,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23852,
											"end": 23855,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23848,
											"end": 23860,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23841,
											"end": 23860,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23841,
											"end": 23860,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23500,
											"end": 23866,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23500,
											"end": 23866,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23500,
											"end": 23866,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23500,
											"end": 23866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23872,
											"end": 24291,
											"name": "tag",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 23872,
											"end": 24291,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24038,
											"end": 24042,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24076,
											"end": 24078,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24065,
											"end": 24074,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24061,
											"end": 24079,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24053,
											"end": 24079,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24053,
											"end": 24079,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24125,
											"end": 24134,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24119,
											"end": 24123,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24115,
											"end": 24135,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 24111,
											"end": 24112,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24100,
											"end": 24109,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24096,
											"end": 24113,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24089,
											"end": 24136,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24153,
											"end": 24284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "881"
										},
										{
											"begin": 24279,
											"end": 24283,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24153,
											"end": 24284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 24153,
											"end": 24284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24153,
											"end": 24284,
											"name": "tag",
											"source": 17,
											"value": "881"
										},
										{
											"begin": 24153,
											"end": 24284,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24145,
											"end": 24284,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24145,
											"end": 24284,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23872,
											"end": 24291,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23872,
											"end": 24291,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23872,
											"end": 24291,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23872,
											"end": 24291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24297,
											"end": 24382,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 24297,
											"end": 24382,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24342,
											"end": 24349,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24371,
											"end": 24376,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24360,
											"end": 24376,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24360,
											"end": 24376,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24297,
											"end": 24382,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24297,
											"end": 24382,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24297,
											"end": 24382,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24297,
											"end": 24382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24388,
											"end": 24489,
											"name": "tag",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 24388,
											"end": 24489,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24424,
											"end": 24431,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24464,
											"end": 24482,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24457,
											"end": 24462,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24453,
											"end": 24483,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 24442,
											"end": 24483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24442,
											"end": 24483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24388,
											"end": 24489,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24388,
											"end": 24489,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24388,
											"end": 24489,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24388,
											"end": 24489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24495,
											"end": 24651,
											"name": "tag",
											"source": 17,
											"value": "625"
										},
										{
											"begin": 24495,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24552,
											"end": 24561,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24585,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "885"
										},
										{
											"begin": 24602,
											"end": 24644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "886"
										},
										{
											"begin": 24611,
											"end": 24643,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "887"
										},
										{
											"begin": 24637,
											"end": 24642,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24611,
											"end": 24643,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 24611,
											"end": 24643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24611,
											"end": 24643,
											"name": "tag",
											"source": 17,
											"value": "887"
										},
										{
											"begin": 24611,
											"end": 24643,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24602,
											"end": 24644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 24602,
											"end": 24644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24602,
											"end": 24644,
											"name": "tag",
											"source": 17,
											"value": "886"
										},
										{
											"begin": 24602,
											"end": 24644,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24585,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 24585,
											"end": 24645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24585,
											"end": 24645,
											"name": "tag",
											"source": 17,
											"value": "885"
										},
										{
											"begin": 24585,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24572,
											"end": 24645,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24572,
											"end": 24645,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24495,
											"end": 24651,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24495,
											"end": 24651,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24495,
											"end": 24651,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24495,
											"end": 24651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24657,
											"end": 24802,
											"name": "tag",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 24657,
											"end": 24802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24751,
											"end": 24795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "889"
										},
										{
											"begin": 24789,
											"end": 24794,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24751,
											"end": 24795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "625"
										},
										{
											"begin": 24751,
											"end": 24795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24751,
											"end": 24795,
											"name": "tag",
											"source": 17,
											"value": "889"
										},
										{
											"begin": 24751,
											"end": 24795,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24746,
											"end": 24749,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24739,
											"end": 24796,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24657,
											"end": 24802,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24657,
											"end": 24802,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24657,
											"end": 24802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24808,
											"end": 25044,
											"name": "tag",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 24808,
											"end": 25044,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24908,
											"end": 24912,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24946,
											"end": 24948,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24935,
											"end": 24944,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24931,
											"end": 24949,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24923,
											"end": 24949,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24923,
											"end": 24949,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24959,
											"end": 25037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "891"
										},
										{
											"begin": 25034,
											"end": 25035,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25023,
											"end": 25032,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25019,
											"end": 25036,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25010,
											"end": 25016,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24959,
											"end": 25037,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 24959,
											"end": 25037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24959,
											"end": 25037,
											"name": "tag",
											"source": 17,
											"value": "891"
										},
										{
											"begin": 24959,
											"end": 25037,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24808,
											"end": 25044,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 24808,
											"end": 25044,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24808,
											"end": 25044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24808,
											"end": 25044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24808,
											"end": 25044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25050,
											"end": 25216,
											"name": "tag",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 25050,
											"end": 25216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25190,
											"end": 25208,
											"name": "PUSH",
											"source": 17,
											"value": "4E6F74206F776E6572206F66204E465400000000000000000000000000000000"
										},
										{
											"begin": 25186,
											"end": 25187,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25178,
											"end": 25184,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25174,
											"end": 25188,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25167,
											"end": 25209,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25050,
											"end": 25216,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25050,
											"end": 25216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25222,
											"end": 25588,
											"name": "tag",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 25222,
											"end": 25588,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25364,
											"end": 25367,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25385,
											"end": 25452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "894"
										},
										{
											"begin": 25449,
											"end": 25451,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 25444,
											"end": 25447,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25385,
											"end": 25452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 25385,
											"end": 25452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25385,
											"end": 25452,
											"name": "tag",
											"source": 17,
											"value": "894"
										},
										{
											"begin": 25385,
											"end": 25452,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25378,
											"end": 25452,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25378,
											"end": 25452,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25461,
											"end": 25554,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "895"
										},
										{
											"begin": 25550,
											"end": 25553,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25461,
											"end": 25554,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 25461,
											"end": 25554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25461,
											"end": 25554,
											"name": "tag",
											"source": 17,
											"value": "895"
										},
										{
											"begin": 25461,
											"end": 25554,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25579,
											"end": 25581,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25574,
											"end": 25577,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25570,
											"end": 25582,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25563,
											"end": 25582,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25563,
											"end": 25582,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25222,
											"end": 25588,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25222,
											"end": 25588,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25222,
											"end": 25588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25222,
											"end": 25588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25594,
											"end": 26013,
											"name": "tag",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 25594,
											"end": 26013,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25760,
											"end": 25764,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25798,
											"end": 25800,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25787,
											"end": 25796,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25783,
											"end": 25801,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25775,
											"end": 25801,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25775,
											"end": 25801,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25847,
											"end": 25856,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25841,
											"end": 25845,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25837,
											"end": 25857,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 25833,
											"end": 25834,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25822,
											"end": 25831,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25818,
											"end": 25835,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25811,
											"end": 25858,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25875,
											"end": 26006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "897"
										},
										{
											"begin": 26001,
											"end": 26005,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25875,
											"end": 26006,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 25875,
											"end": 26006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25875,
											"end": 26006,
											"name": "tag",
											"source": 17,
											"value": "897"
										},
										{
											"begin": 25875,
											"end": 26006,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25867,
											"end": 26006,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25867,
											"end": 26006,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25594,
											"end": 26013,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25594,
											"end": 26013,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25594,
											"end": 26013,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25594,
											"end": 26013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26019,
											"end": 26189,
											"name": "tag",
											"source": 17,
											"value": "629"
										},
										{
											"begin": 26019,
											"end": 26189,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26159,
											"end": 26181,
											"name": "PUSH",
											"source": 17,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 26155,
											"end": 26156,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26147,
											"end": 26153,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26143,
											"end": 26157,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26136,
											"end": 26182,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26019,
											"end": 26189,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26019,
											"end": 26189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26195,
											"end": 26561,
											"name": "tag",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 26195,
											"end": 26561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26337,
											"end": 26340,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26358,
											"end": 26425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "900"
										},
										{
											"begin": 26422,
											"end": 26424,
											"name": "PUSH",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 26417,
											"end": 26420,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26358,
											"end": 26425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 26358,
											"end": 26425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26358,
											"end": 26425,
											"name": "tag",
											"source": 17,
											"value": "900"
										},
										{
											"begin": 26358,
											"end": 26425,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26351,
											"end": 26425,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26351,
											"end": 26425,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26434,
											"end": 26527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "901"
										},
										{
											"begin": 26523,
											"end": 26526,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26434,
											"end": 26527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "629"
										},
										{
											"begin": 26434,
											"end": 26527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26434,
											"end": 26527,
											"name": "tag",
											"source": 17,
											"value": "901"
										},
										{
											"begin": 26434,
											"end": 26527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26552,
											"end": 26554,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 26547,
											"end": 26550,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26543,
											"end": 26555,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26536,
											"end": 26555,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26536,
											"end": 26555,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26195,
											"end": 26561,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26195,
											"end": 26561,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26195,
											"end": 26561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26195,
											"end": 26561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26567,
											"end": 26986,
											"name": "tag",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 26567,
											"end": 26986,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26733,
											"end": 26737,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26771,
											"end": 26773,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 26760,
											"end": 26769,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26756,
											"end": 26774,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26748,
											"end": 26774,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26820,
											"end": 26829,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26814,
											"end": 26818,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26810,
											"end": 26830,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 26806,
											"end": 26807,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26795,
											"end": 26804,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26791,
											"end": 26808,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26784,
											"end": 26831,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26848,
											"end": 26979,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "903"
										},
										{
											"begin": 26974,
											"end": 26978,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26848,
											"end": 26979,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 26848,
											"end": 26979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26848,
											"end": 26979,
											"name": "tag",
											"source": 17,
											"value": "903"
										},
										{
											"begin": 26848,
											"end": 26979,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26840,
											"end": 26979,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26840,
											"end": 26979,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26567,
											"end": 26986,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26567,
											"end": 26986,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26567,
											"end": 26986,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26567,
											"end": 26986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26992,
											"end": 27214,
											"name": "tag",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 26992,
											"end": 27214,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27085,
											"end": 27089,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27123,
											"end": 27125,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27112,
											"end": 27121,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27108,
											"end": 27126,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27100,
											"end": 27126,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27100,
											"end": 27126,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27136,
											"end": 27207,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "905"
										},
										{
											"begin": 27204,
											"end": 27205,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27193,
											"end": 27202,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 27189,
											"end": 27206,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27180,
											"end": 27186,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27136,
											"end": 27207,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 27136,
											"end": 27207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27136,
											"end": 27207,
											"name": "tag",
											"source": 17,
											"value": "905"
										},
										{
											"begin": 27136,
											"end": 27207,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26992,
											"end": 27214,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 26992,
											"end": 27214,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26992,
											"end": 27214,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26992,
											"end": 27214,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26992,
											"end": 27214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27220,
											"end": 27363,
											"name": "tag",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 27220,
											"end": 27363,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27277,
											"end": 27282,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27308,
											"end": 27314,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27302,
											"end": 27315,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 27293,
											"end": 27315,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27293,
											"end": 27315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27324,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "907"
										},
										{
											"begin": 27351,
											"end": 27356,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27324,
											"end": 27357,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 27324,
											"end": 27357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27324,
											"end": 27357,
											"name": "tag",
											"source": 17,
											"value": "907"
										},
										{
											"begin": 27324,
											"end": 27357,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27220,
											"end": 27363,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 27220,
											"end": 27363,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27220,
											"end": 27363,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27220,
											"end": 27363,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27220,
											"end": 27363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27369,
											"end": 27720,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 27369,
											"end": 27720,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27439,
											"end": 27445,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27488,
											"end": 27490,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27476,
											"end": 27485,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27467,
											"end": 27474,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27463,
											"end": 27486,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 27459,
											"end": 27491,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 27456,
											"end": 27575,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 27456,
											"end": 27575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "909"
										},
										{
											"begin": 27456,
											"end": 27575,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 27494,
											"end": 27573,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "910"
										},
										{
											"begin": 27494,
											"end": 27573,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 27494,
											"end": 27573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27494,
											"end": 27573,
											"name": "tag",
											"source": 17,
											"value": "910"
										},
										{
											"begin": 27494,
											"end": 27573,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27456,
											"end": 27575,
											"name": "tag",
											"source": 17,
											"value": "909"
										},
										{
											"begin": 27456,
											"end": 27575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27614,
											"end": 27615,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27639,
											"end": 27703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "911"
										},
										{
											"begin": 27695,
											"end": 27702,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27686,
											"end": 27692,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27675,
											"end": 27684,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 27671,
											"end": 27693,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27639,
											"end": 27703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 27639,
											"end": 27703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27639,
											"end": 27703,
											"name": "tag",
											"source": 17,
											"value": "911"
										},
										{
											"begin": 27639,
											"end": 27703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27629,
											"end": 27703,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27629,
											"end": 27703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27585,
											"end": 27713,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27369,
											"end": 27720,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 27369,
											"end": 27720,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27369,
											"end": 27720,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27369,
											"end": 27720,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27369,
											"end": 27720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27726,
											"end": 28058,
											"name": "tag",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 27726,
											"end": 28058,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27847,
											"end": 27851,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27885,
											"end": 27887,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 27874,
											"end": 27883,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27870,
											"end": 27888,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27862,
											"end": 27888,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27862,
											"end": 27888,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27898,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "913"
										},
										{
											"begin": 27966,
											"end": 27967,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27955,
											"end": 27964,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 27951,
											"end": 27968,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27942,
											"end": 27948,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 27898,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 27898,
											"end": 27969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27898,
											"end": 27969,
											"name": "tag",
											"source": 17,
											"value": "913"
										},
										{
											"begin": 27898,
											"end": 27969,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27979,
											"end": 28051,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "914"
										},
										{
											"begin": 28047,
											"end": 28049,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 28036,
											"end": 28045,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 28032,
											"end": 28050,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 28023,
											"end": 28029,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27979,
											"end": 28051,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 27979,
											"end": 28051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27979,
											"end": 28051,
											"name": "tag",
											"source": 17,
											"value": "914"
										},
										{
											"begin": 27979,
											"end": 28051,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27726,
											"end": 28058,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 27726,
											"end": 28058,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 27726,
											"end": 28058,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27726,
											"end": 28058,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27726,
											"end": 28058,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27726,
											"end": 28058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28064,
											"end": 28162,
											"name": "tag",
											"source": 17,
											"value": "632"
										},
										{
											"begin": 28064,
											"end": 28162,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28115,
											"end": 28121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28149,
											"end": 28154,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28143,
											"end": 28155,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 28133,
											"end": 28155,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 28133,
											"end": 28155,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28064,
											"end": 28162,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28064,
											"end": 28162,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 28064,
											"end": 28162,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28064,
											"end": 28162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28168,
											"end": 28315,
											"name": "tag",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 28168,
											"end": 28315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28269,
											"end": 28280,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28306,
											"end": 28309,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28291,
											"end": 28309,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 28291,
											"end": 28309,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28168,
											"end": 28315,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 28168,
											"end": 28315,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28168,
											"end": 28315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28168,
											"end": 28315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28168,
											"end": 28315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28321,
											"end": 28707,
											"name": "tag",
											"source": 17,
											"value": "634"
										},
										{
											"begin": 28321,
											"end": 28707,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28425,
											"end": 28428,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28453,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "918"
										},
										{
											"begin": 28485,
											"end": 28490,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28453,
											"end": 28491,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "632"
										},
										{
											"begin": 28453,
											"end": 28491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28453,
											"end": 28491,
											"name": "tag",
											"source": 17,
											"value": "918"
										},
										{
											"begin": 28453,
											"end": 28491,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28507,
											"end": 28595,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "919"
										},
										{
											"begin": 28588,
											"end": 28594,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28583,
											"end": 28586,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 28507,
											"end": 28595,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 28507,
											"end": 28595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28507,
											"end": 28595,
											"name": "tag",
											"source": 17,
											"value": "919"
										},
										{
											"begin": 28507,
											"end": 28595,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28500,
											"end": 28595,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 28500,
											"end": 28595,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28604,
											"end": 28669,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "920"
										},
										{
											"begin": 28662,
											"end": 28668,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28657,
											"end": 28660,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 28650,
											"end": 28654,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 28643,
											"end": 28648,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 28639,
											"end": 28655,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 28604,
											"end": 28669,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 28604,
											"end": 28669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28604,
											"end": 28669,
											"name": "tag",
											"source": 17,
											"value": "920"
										},
										{
											"begin": 28604,
											"end": 28669,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28694,
											"end": 28700,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 28689,
											"end": 28692,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 28685,
											"end": 28701,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 28678,
											"end": 28701,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28678,
											"end": 28701,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28429,
											"end": 28707,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28321,
											"end": 28707,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 28321,
											"end": 28707,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28321,
											"end": 28707,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28321,
											"end": 28707,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28321,
											"end": 28707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28713,
											"end": 28984,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 28713,
											"end": 28984,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28843,
											"end": 28846,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28865,
											"end": 28958,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "922"
										},
										{
											"begin": 28954,
											"end": 28957,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28945,
											"end": 28951,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 28865,
											"end": 28958,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "634"
										},
										{
											"begin": 28865,
											"end": 28958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28865,
											"end": 28958,
											"name": "tag",
											"source": 17,
											"value": "922"
										},
										{
											"begin": 28865,
											"end": 28958,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28858,
											"end": 28958,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28858,
											"end": 28958,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28975,
											"end": 28978,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28968,
											"end": 28978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 28968,
											"end": 28978,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28713,
											"end": 28984,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 28713,
											"end": 28984,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28713,
											"end": 28984,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28713,
											"end": 28984,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28713,
											"end": 28984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"FEE_RATE()": "2d11c58a",
							"LIQUIDITY_MANAGER_ROLE()": "242f0551",
							"PAUSER_ROLE()": "e63ab1e9",
							"UPGRADER_ROLE()": "f72c0d8b",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"addLiquidity(address,uint256)": "56688700",
							"cqtNFT()": "da069683",
							"cqtToken()": "34aab064",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,address,address,address,address,address)": "cc2a9a5b",
							"liquidityPools(address)": "0b0fd47e",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"removeLiquidity(address,uint256)": "a201ccf6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"swapETHForNFT(uint256,uint256)": "49f0346e",
							"swapETHForTokens(address,uint256)": "51422e97",
							"swapNFTForETH(uint256,uint256)": "d9a37ad2",
							"swapTokensForETH(address,uint256,uint256)": "e15cc8da",
							"unpause()": "3f4ba83a",
							"updateLiquidityPool(address,uint256,uint256)": "c7088313",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"withdrawETH(uint256)": "f14210a6",
							"withdrawNFT(uint256)": "023245d7",
							"withdrawTokens(address,uint256)": "06b091f9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"NFTSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"TokenSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDITY_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cqtNFT\",\"outputs\":[{\"internalType\":\"contract IERC721Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cqtToken\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cqtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cqtNFTAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minETH\",\"type\":\"uint256\"}],\"name\":\"swapETHForNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTokens\",\"type\":\"uint256\"}],\"name\":\"swapETHForTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minETH\",\"type\":\"uint256\"}],\"name\":\"swapNFTForETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minETH\",\"type\":\"uint256\"}],\"name\":\"swapTokensForETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newEthAmount\",\"type\":\"uint256\"}],\"name\":\"updateLiquidityPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"jacquedegraff@creodamo.com\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestSwap.sol\":\"CryptoQuestSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestSwap.sol\":{\"keccak256\":\"0xb224d7e4d694f4b943c6c2d38d6e4d963605d918e5dd5be0e157d062ee4db43e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22668c5457fc591b4e04333362f30840083e91a222e7d04fa0962b8f81bca5f6\",\"dweb:/ipfs/QmaXvDZUr3qiWScZrS6zCf9RvWgEyjNfc652EGFBkKSGc7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2085,
								"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
								"label": "cqtToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20Upgradeable)876"
							},
							{
								"astId": 2088,
								"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
								"label": "cqtNFT",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721Upgradeable)992"
							},
							{
								"astId": 2104,
								"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
								"label": "liquidityPools",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(LiquidityPool)2099_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20Upgradeable)876": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721Upgradeable)992": {
								"encoding": "inplace",
								"label": "contract IERC721Upgradeable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(LiquidityPool)2099_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoQuestSwap.LiquidityPool)",
								"numberOfBytes": "32",
								"value": "t_struct(LiquidityPool)2099_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(LiquidityPool)2099_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestSwap.LiquidityPool",
								"members": [
									{
										"astId": 2090,
										"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
										"label": "tokenAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2092,
										"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
										"label": "ethAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2094,
										"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
										"label": "totalLiquidity",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2098,
										"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
										"label": "liquidity",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1038
						],
						"ERC165Upgradeable": [
							1254
						],
						"IAccessControl": [
							1349
						],
						"Initializable": [
							616
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1350,
							"src": "134:81:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1349,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1039,
							"src": "216:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1038,
										"src": "224:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1255,
							"src": "284:79:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1254,
										"src": "292:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 617,
							"src": "364:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "372:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "2136:13:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1038,
										"src": "2151:18:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1349,
										"src": "2171:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1254,
										"src": "2187:17:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								1254,
								2047,
								1349,
								1038,
								616
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2237:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 21,
												"keyName": "account",
												"keyNameLocation": "2253:7:0",
												"keyType": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2287:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 23,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2211:100:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2317:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "2488:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 33,
												"keyName": "role",
												"keyNameLocation": "2504:4:0",
												"keyType": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2512:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2512:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$25_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2450:85:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2658:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2877:87:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:0",
													"nodeType": "YulBlock",
													"src": "2896:62:0",
													"statements": [
														{
															"nativeSrc": "2910:38:0",
															"nodeType": "YulAssignment",
															"src": "2910:38:0",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:0",
																"nodeType": "YulIdentifier",
																"src": "2920:28:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "2887:71:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2845:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2845:20:0"
													},
													"referencedDeclaration": 35,
													"src": "2845:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:0"
									},
									"scope": 362,
									"src": "2787:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "3202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 51,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 129,
														"src": "3191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 57,
									"name": "onlyRole",
									"nameLocation": "3158:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:0"
									},
									"src": "3149:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3289:7:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3272:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:0"
									},
									"scope": 362,
									"src": "3231:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3370:7:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3353:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 362,
									"src": "3302:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1253
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3534:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3551:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "3571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1349_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1349_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 79,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1349",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 86,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3626:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 84,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$362_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1253,
															"src": "3602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 77,
												"id": 89,
												"nodeType": "Return",
												"src": "3544:94:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:0"
									},
									"scope": 362,
									"src": "3443:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1316
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3815:124:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "3825:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 101,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3825:20:0"
															},
															"referencedDeclaration": 35,
															"src": "3825:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 107,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "3901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 110,
															"indexExpression": {
																"id": 109,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3901:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "3894:38:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:0"
									},
									"scope": 362,
									"src": "3732:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4204:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "4231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 150,
														"src": "4214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4168:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:0"
									},
									"scope": 362,
									"src": "4148:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4454:124:0",
										"statements": [
											{
												"condition": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 138,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "4477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 137,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "4464:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "4493:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "4547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "4556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 142,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "4514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "4507:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 362,
									"src": "4381:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1324
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4833:117:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4843:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "4843:20:0"
															},
															"referencedDeclaration": 35,
															"src": "4843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "4876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 164,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:0",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "4919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$25_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "4919:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "4912:31:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:0"
									},
									"scope": 362,
									"src": "4759:191:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1332
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5311:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:0"
									},
									"scope": 362,
									"src": "5246:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1340
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5757:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 199,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 198,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5728:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:0"
									},
									"scope": 362,
									"src": "5662:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1348
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6427:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6441:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 218,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "6437:102:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "6477:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "6498:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 223,
															"nodeType": "RevertStatement",
															"src": "6491:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6567:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6384:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:0"
									},
									"scope": 362,
									"src": "6348:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6791:245:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6801:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "6801:20:0"
															},
															"referencedDeclaration": 35,
															"src": "6801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6870:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6911:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "6898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 252,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6935:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "6926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6953:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7000:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "6977:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "6972:57:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6755:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:0"
									},
									"scope": 362,
									"src": "6718:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "7353:304:0",
										"statements": [
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "7363:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 278,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7363:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7363:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7396:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:0"
											},
											{
												"condition": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 286,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "7451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 284,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7614:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 311,
															"nodeType": "Return",
															"src": "7628:12:0"
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "7432:219:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "7461:147:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 289,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 280,
																					"src": "7475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7475:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"id": 291,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7544:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "7559:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "7532:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 306,
															"nodeType": "EmitStatement",
															"src": "7527:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 308,
															"nodeType": "Return",
															"src": "7586:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7347:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:0"
									},
									"scope": 362,
									"src": "7270:387:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7976:304:0",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8015:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "7986:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 325,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7986:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7986:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7986:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 328,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8019:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7986:59:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "8067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "8059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8059:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "8237:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 324,
															"id": 357,
															"nodeType": "Return",
															"src": "8251:12:0"
														}
													]
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "8055:219:0",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "8083:148:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 335,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "8097:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8099:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "8097:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"id": 337,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "8106:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8097:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8112:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "8097:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8097:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8097:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "8097:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8167:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 348,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8173:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 349,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "8182:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8182:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 346,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "8155:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8155:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "EmitStatement",
															"src": "8150:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8216:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 324,
															"id": 354,
															"nodeType": "Return",
															"src": "8209:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "7663:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7901:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7913:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7935:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:31:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7970:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7970:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:6:0"
									},
									"scope": 362,
									"src": "7892:388:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "2090:6192:0",
							"usedErrors": [
								379,
								382,
								1276,
								1279
							],
							"usedEvents": [
								387,
								1288,
								1297,
								1306
							]
						}
					],
					"src": "108:8175:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							616
						]
					},
					"id": 617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 373,
									"members": [
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 368,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 371,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 616,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 616,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 379,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 382,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 387,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 391,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 390,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 373,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 398,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 402,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"expression": {
														"id": 404,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 412,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 420,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 430,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 432,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 440,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 446,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 455,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 456,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 463,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 470,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 475,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 373,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 483,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 485,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 493,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 499,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 506,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 512,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 517,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 472,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 523,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 525,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 529,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 616,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 373,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 548,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 550,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 552,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 563,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 369,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 566,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 575,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 574,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 573,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 616,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 587,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 616,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 601,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 616,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 611,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 376,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 613,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 373,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 373,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 616,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 617,
							"src": "2349:6560:1",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1662
						],
						"IERC1822Proxiable": [
							1359
						],
						"Initializable": [
							616
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1360,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 619,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1359,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1663,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 621,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1662,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 617,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 623,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "1023:13:2"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 628,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1359,
										"src": "1038:17:2"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 798,
							"linearizedBaseContracts": [
								798,
								1359,
								616
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 636,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 631,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 634,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 633,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 632,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 640,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 638,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 643,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 648,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2643:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 651,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2653:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:2"
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:2"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 656,
									"name": "onlyProxy",
									"nameLocation": "2631:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:2"
									},
									"src": "2622:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2914:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 659,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2924:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:2"
											},
											{
												"id": 662,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 664,
									"name": "notDelegated",
									"nameLocation": "2899:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:2"
									},
									"src": "2890:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3028:7:2",
										"statements": []
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 666,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3011:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:2"
									},
									"scope": 798,
									"src": "2968:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3111:7:2",
										"statements": []
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 673,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 672,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3094:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:2"
									},
									"scope": 798,
									"src": "3041:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3783:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 684,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "3800:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1662_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1389,
													"src": "3800:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 683,
												"id": 686,
												"nodeType": "Return",
												"src": "3793:39:2"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:2",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 664,
												"src": "3752:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:2"
									},
									"scope": 798,
									"src": "3705:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "4263:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4291:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 698,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4273:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4341:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4360:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 702,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4319:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:2"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "4253:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4184:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:2"
									},
									"scope": 798,
									"src": "4158:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4644:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 714,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 716,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 718,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "4749:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1662_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1420,
																"src": "4749:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 721,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "4654:251:2",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "4844:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 724,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "4865:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "4858:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:2"
									},
									"scope": 798,
									"src": "4599:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "5080:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 736,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 738,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5111:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "5090:145:2",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "5119:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 740,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "5195:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 742,
															"nodeType": "RevertStatement",
															"src": "5188:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:2"
									},
									"scope": 798,
									"src": "5028:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5651:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:2"
									},
									"scope": 798,
									"src": "5624:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "6137:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 785,
															"nodeType": "Block",
															"src": "6227:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "6245:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 769,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1662,
																				"src": "6253:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1662_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1389,
																			"src": "6253:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 777,
																	"nodeType": "IfStatement",
																	"src": "6241:120:2",
																	"trueBody": {
																		"id": 776,
																		"nodeType": "Block",
																		"src": "6287:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 773,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "6341:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 772,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 648,
																						"src": "6312:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 775,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 781,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6404:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 782,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "6423:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 778,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1662,
																				"src": "6374:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1662_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1481,
																			"src": "6374:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 784,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:2"
																}
															]
														},
														"errorName": "",
														"id": 786,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 767,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "6213:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:2"
														},
														"src": "6204:235:2"
													},
													{
														"block": {
															"id": 793,
															"nodeType": "Block",
															"src": "6446:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 790,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6555:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 787,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1662,
																				"src": "6513:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1662_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1394,
																			"src": "6513:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 792,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:2"
																}
															]
														},
														"errorName": "",
														"id": 794,
														"nodeType": "TryCatchClause",
														"src": "6440:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6169:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 760,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "6151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1359_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1359",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1358,
														"src": "6151:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 795,
												"nodeType": "TryStatement",
												"src": "6147:437:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6083:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:2"
									},
									"scope": 798,
									"src": "6052:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 799,
							"src": "986:5606:2",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1394,
								1407,
								1685,
								1688
							],
							"usedEvents": [
								387,
								1373
							]
						}
					],
					"src": "115:6478:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							876
						]
					},
					"id": 877,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 801,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 876,
							"linearizedBaseContracts": [
								876
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 810,
									"name": "Transfer",
									"nameLocation": "405:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "414:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "436:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "456:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:3"
									},
									"src": "399:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 819,
									"name": "Approval",
									"nameLocation": "636:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "645:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "668:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:3"
									},
									"src": "630:78:3"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "831:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:3"
									},
									"scope": 876,
									"src": "785:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "942:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:3"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "982:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:3"
									},
									"scope": 876,
									"src": "923:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1234:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:3"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 876,
									"src": "1204:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 876,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2302:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2319:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:3"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2353:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:3"
									},
									"scope": 876,
									"src": "2285:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2679:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2693:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2705:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:3"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2739:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:3"
									},
									"scope": 876,
									"src": "2657:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 877,
							"src": "202:2545:3",
							"usedErrors": [],
							"usedEvents": [
								810,
								819
							]
						}
					],
					"src": "106:2642:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1266
						],
						"IERC721Upgradeable": [
							992
						]
					},
					"id": 993,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 878,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 993,
							"sourceUnit": 1267,
							"src": "133:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 881,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"293:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1266,
										"src": "293:18:4"
									},
									"id": 882,
									"nodeType": "InheritanceSpecifier",
									"src": "293:18:4"
								}
							],
							"canonicalName": "IERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 880,
								"nodeType": "StructuredDocumentation",
								"src": "193:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 992,
							"linearizedBaseContracts": [
								992,
								1266
							],
							"name": "IERC721Upgradeable",
							"nameLocation": "271:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "318:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 891,
									"name": "Transfer",
									"nameLocation": "417:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "442:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "426:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "464:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "448:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "484:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "468:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:67:4"
									},
									"src": "411:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "499:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 900,
									"name": "Approval",
									"nameLocation": "604:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "629:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "613:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "652:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "636:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "662:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:74:4"
									},
									"src": "598:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "693:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 909,
									"name": "ApprovalForAll",
									"nameLocation": "821:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "852:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "836:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "859:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "890:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "885:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:64:4"
									},
									"src": "815:85:4"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "906:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "996:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1014:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1006:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:15:4"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1052:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1044:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:17:4"
									},
									"scope": 992,
									"src": "987:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "1067:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1212:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1228:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1220:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:17:4"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1268:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1260:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:15:4"
									},
									"scope": 992,
									"src": "1203:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "1281:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1851:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1876:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1868:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1890:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1882:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1902:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1894:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1911:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:64:4"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:0:4"
									},
									"scope": 992,
									"src": "1842:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "1947:687:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2648:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2673:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "2665:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2687:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "2679:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "2691:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:43:4"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2716:0:4"
									},
									"scope": 992,
									"src": "2639:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "2723:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3469:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3490:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3482:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3504:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3496:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3496:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3516:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3508:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:43:4"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3533:0:4"
									},
									"scope": 992,
									"src": "3460:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "3540:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4006:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4022:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "4014:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4014:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4034:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "4026:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4013:29:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:0:4"
									},
									"scope": 992,
									"src": "3997:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "4058:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4381:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4407:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4399:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4422:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4417:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4417:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:33:4"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4440:0:4"
									},
									"scope": 992,
									"src": "4372:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "4447:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4600:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4620:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "4612:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:17:4"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4660:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "4652:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:18:4"
									},
									"scope": 992,
									"src": "4591:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "4676:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4828:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4853:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "4845:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4845:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4868:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "4860:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4844:33:4"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "4901:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4901:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:6:4"
									},
									"scope": 992,
									"src": "4819:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 993,
							"src": "261:4648:4",
							"usedErrors": [],
							"usedEvents": [
								891,
								900,
								909
							]
						}
					],
					"src": "108:4802:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1038
						],
						"Initializable": [
							616
						]
					},
					"id": 1039,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 994,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 996,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1039,
							"sourceUnit": 617,
							"src": "126:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 995,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "134:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 998,
										"name": "Initializable",
										"nameLocations": [
											"728:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "728:13:5"
									},
									"id": 999,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 997,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1038,
							"linearizedBaseContracts": [
								1038,
								616
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "800:7:5",
										"statements": []
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1001,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "783:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:5"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:5"
									},
									"scope": 1038,
									"src": "748:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "875:7:5",
										"statements": []
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1008,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1007,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "858:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:5"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:5"
									},
									"scope": 1038,
									"src": "813:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "949:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1016,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1018,
												"nodeType": "Return",
												"src": "959:17:5"
											}
										]
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "940:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:5"
									},
									"scope": 1038,
									"src": "887:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "1056:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1025,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1024,
												"id": 1027,
												"nodeType": "Return",
												"src": "1066:15:5"
											}
										]
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:5"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1040:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:5"
									},
									"scope": 1038,
									"src": "989:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "1166:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1033,
												"id": 1035,
												"nodeType": "Return",
												"src": "1176:8:5"
											}
										]
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:5"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1157:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:5"
									},
									"scope": 1038,
									"src": "1094:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1039,
							"src": "688:505:5",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "101:1093:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1038
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							1214
						]
					},
					"id": 1215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1040,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1215,
							"sourceUnit": 1039,
							"src": "128:67:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1041,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1038,
										"src": "136:18:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1215,
							"sourceUnit": 617,
							"src": "196:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1043,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "204:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1046,
										"name": "Initializable",
										"nameLocations": [
											"742:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "742:13:6"
									},
									"id": 1047,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:6"
								},
								{
									"baseName": {
										"id": 1048,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1038,
										"src": "757:18:6"
									},
									"id": 1049,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:6"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1045,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:6",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1214,
							"linearizedBaseContracts": [
								1214,
								1038,
								616
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:6",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 1053,
									"members": [
										{
											"constant": false,
											"id": 1052,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1053,
											"src": "886:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1051,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:6",
									"nodeType": "StructDefinition",
									"scope": 1214,
									"src": "853:52:6",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1056,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:6",
									"nodeType": "VariableDeclaration",
									"scope": 1214,
									"src": "1023:117:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1054,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 1055,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "1227:82:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:6",
													"nodeType": "YulBlock",
													"src": "1246:57:6",
													"statements": [
														{
															"nativeSrc": "1260:33:6",
															"nodeType": "YulAssignment",
															"src": "1260:33:6",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:6",
																"nodeType": "YulIdentifier",
																"src": "1270:23:6"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1060,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1056,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:6",
														"valueSize": 1
													}
												],
												"id": 1062,
												"nodeType": "InlineAssembly",
												"src": "1237:66:6"
											}
										]
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:6"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1200:25:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 1059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1058,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1053,
														"src": "1200:15:6"
													},
													"referencedDeclaration": 1053,
													"src": "1200:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:6"
									},
									"scope": 1214,
									"src": "1147:162:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:6",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1069,
									"name": "Paused",
									"nameLocation": "1399:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "1406:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:6"
									},
									"src": "1393:30:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:6",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1074,
									"name": "Unpaused",
									"nameLocation": "1510:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1519:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:6"
									},
									"src": "1504:32:6"
								},
								{
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:6",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1077,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:6"
									},
									"src": "1623:22:6"
								},
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:6",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1080,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:6"
									},
									"src": "1736:22:6"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "1889:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1086,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "1899:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "1899:27:6"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "1764:67:6",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1084,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1083,
												"name": "onlyInitializing",
												"nameLocations": [
													"1872:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1872:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:16:6"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1845:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:6"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:6"
									},
									"scope": 1214,
									"src": "1836:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "2002:93:6",
										"statements": [
											{
												"assignments": [
													1097
												],
												"declarations": [
													{
														"constant": false,
														"id": 1097,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2036:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "2012:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1096,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1095,
																"name": "PausableStorage",
																"nameLocations": [
																	"2012:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1053,
																"src": "2012:15:6"
															},
															"referencedDeclaration": 1053,
															"src": "2012:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1098,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "2040:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1053_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:6"
											},
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1101,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "2071:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2073:7:6",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "2071:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2071:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "2071:17:6"
											}
										]
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1093,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1092,
												"name": "onlyInitializing",
												"nameLocations": [
													"1985:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1985:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:16:6"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1948:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:6"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:6"
									},
									"scope": 1214,
									"src": "1939:156:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "2306:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1111,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "2316:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "2316:19:6"
											},
											{
												"id": 1114,
												"nodeType": "PlaceholderStatement",
												"src": "2345:1:6"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "2101:175:6",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1116,
									"name": "whenNotPaused",
									"nameLocation": "2290:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:6"
									},
									"src": "2281:72:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "2553:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1119,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "2563:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "2563:16:6"
											},
											{
												"id": 1122,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:6"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "2359:167:6",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1124,
									"name": "whenPaused",
									"nameLocation": "2540:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:6"
									},
									"src": "2531:66:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "2745:92:6",
										"statements": [
											{
												"assignments": [
													1132
												],
												"declarations": [
													{
														"constant": false,
														"id": 1132,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2779:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1139,
														"src": "2755:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1131,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1130,
																"name": "PausableStorage",
																"nameLocations": [
																	"2755:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1053,
																"src": "2755:15:6"
															},
															"referencedDeclaration": 1053,
															"src": "2755:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1133,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "2783:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1053_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:49:6"
											},
											{
												"expression": {
													"expression": {
														"id": 1136,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "2821:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:7:6",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1052,
													"src": "2821:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1138,
												"nodeType": "Return",
												"src": "2814:16:6"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "2603:84:6",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2701:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:6"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "2739:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:6"
									},
									"scope": 1214,
									"src": "2692:145:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "2956:77:6",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1144,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "2970:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "2966:61:6",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "2980:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1146,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "3001:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1148,
															"nodeType": "RevertStatement",
															"src": "2994:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "2843:57:6",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2914:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:6"
									},
									"scope": 1214,
									"src": "2905:128:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "3153:78:6",
										"statements": [
											{
												"condition": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3167:9:6",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1156,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "3168:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3168:8:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1163,
												"nodeType": "IfStatement",
												"src": "3163:62:6",
												"trueBody": {
													"id": 1162,
													"nodeType": "Block",
													"src": "3178:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1159,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "3199:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1161,
															"nodeType": "RevertStatement",
															"src": "3192:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "3039:61:6",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "3114:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3128:2:6"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:6"
									},
									"scope": 1214,
									"src": "3105:126:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "3415:127:6",
										"statements": [
											{
												"assignments": [
													1173
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3449:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "3425:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1172,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1171,
																"name": "PausableStorage",
																"nameLocations": [
																	"3425:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1053,
																"src": "3425:15:6"
															},
															"referencedDeclaration": 1053,
															"src": "3425:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1176,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1174,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "3453:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1053_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3425:49:6"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1177,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "3484:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3486:7:6",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "3484:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3484:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "3484:16:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1184,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "3522:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1183,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "3515:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "EmitStatement",
												"src": "3510:25:6"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "3237:124:6",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1169,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1168,
												"name": "whenNotPaused",
												"nameLocations": [
													"3401:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "3401:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3401:13:6"
										}
									],
									"name": "_pause",
									"nameLocation": "3375:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:6"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:0:6"
									},
									"scope": 1214,
									"src": "3366:176:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "3722:130:6",
										"statements": [
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3756:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1212,
														"src": "3732:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1196,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1195,
																"name": "PausableStorage",
																"nameLocations": [
																	"3732:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1053,
																"src": "3732:15:6"
															},
															"referencedDeclaration": 1053,
															"src": "3732:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1198,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "3760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1053_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:49:6"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1201,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "3791:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3793:7:6",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "3791:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3803:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3791:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "3791:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1208,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "3832:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1207,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "3823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1211,
												"nodeType": "EmitStatement",
												"src": "3818:27:6"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "3548:121:6",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1193,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1192,
												"name": "whenPaused",
												"nameLocations": [
													"3711:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1124,
												"src": "3711:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:10:6"
										}
									],
									"name": "_unpause",
									"nameLocation": "3683:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:6"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:6"
									},
									"scope": 1214,
									"src": "3674:178:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1215,
							"src": "701:3153:6",
							"usedErrors": [
								379,
								382,
								1077,
								1080
							],
							"usedEvents": [
								387,
								1069,
								1074
							]
						}
					],
					"src": "102:3753:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1254
						],
						"IERC165": [
							2047
						],
						"Initializable": [
							616
						]
					},
					"id": 1255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1218,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 2048,
							"src": "140:80:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1217,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2047,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 617,
							"src": "221:66:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1219,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "229:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1222,
										"name": "Initializable",
										"nameLocations": [
											"807:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "807:13:7"
									},
									"id": 1223,
									"nodeType": "InheritanceSpecifier",
									"src": "807:13:7"
								},
								{
									"baseName": {
										"id": 1224,
										"name": "IERC165",
										"nameLocations": [
											"822:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2047,
										"src": "822:7:7"
									},
									"id": 1225,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:7"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1221,
								"nodeType": "StructuredDocumentation",
								"src": "289:478:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1254,
							"linearizedBaseContracts": [
								1254,
								2047,
								616
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "786:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "887:7:7",
										"statements": []
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1227,
												"name": "onlyInitializing",
												"nameLocations": [
													"870:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "870:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "870:16:7"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "845:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:7"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:7"
									},
									"scope": 1254,
									"src": "836:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "961:7:7",
										"statements": []
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1234,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1233,
												"name": "onlyInitializing",
												"nameLocations": [
													"944:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "944:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "944:16:7"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "909:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:7"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:7"
									},
									"scope": 1254,
									"src": "900:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2046
									],
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "1116:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "1133:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1247,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "1153:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2047_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2047_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1246,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1148:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1148:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2047",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1162:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1148:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1133:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1251,
												"nodeType": "Return",
												"src": "1126:47:7"
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "973:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1043:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1068:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1061:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:20:7"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1110:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:6:7"
									},
									"scope": 1254,
									"src": "1034:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1255,
							"src": "768:414:7",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "114:1069:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1266
						]
					},
					"id": 1267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1257,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1266,
							"linearizedBaseContracts": [
								1266
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "812:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:8"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "855:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:8"
									},
									"scope": 1266,
									"src": "785:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1267,
							"src": "405:458:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1349
						]
					},
					"id": 1350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1269,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:9",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1349,
							"linearizedBaseContracts": [
								1349
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:9",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1276,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "356:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "373:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:9"
									},
									"src": "317:76:9"
								},
								{
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:9",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1279,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:9"
									},
									"src": "552:37:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:9",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1288,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "877:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1281,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "899:33:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "934:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:9"
									},
									"src": "854:110:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:9",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1297,
									"name": "RoleGranted",
									"nameLocation": "1193:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1205:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1227:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1252:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:9"
									},
									"src": "1187:89:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:9",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1306,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1580:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1602:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1627:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:9"
									},
									"src": "1562:89:9"
								},
								{
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:9",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1755:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1769:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:9"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1809:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:9"
									},
									"scope": 1349,
									"src": "1738:77:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:9",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "2032:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:9"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "2069:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:9"
									},
									"scope": 1349,
									"src": "2010:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:9",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2347:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2361:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:9"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:9"
									},
									"scope": 1349,
									"src": "2328:59:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:9",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2641:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2655:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:9"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:9"
									},
									"scope": 1349,
									"src": "2621:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:9",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "3205:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "3219:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:9"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:9"
									},
									"scope": 1349,
									"src": "3183:73:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1350,
							"src": "225:3033:9",
							"usedErrors": [
								1276,
								1279
							],
							"usedEvents": [
								1288,
								1297,
								1306
							]
						}
					],
					"src": "109:3150:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1359
						]
					},
					"id": 1360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1352,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:10",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1359,
							"linearizedBaseContracts": [
								1359
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:10",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:10"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "868:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:10"
									},
									"scope": 1359,
									"src": "820:57:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1360,
							"src": "343:536:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1925
						],
						"ERC1967Utils": [
							1662
						],
						"IBeacon": [
							1672
						],
						"StorageSlot": [
							2035
						]
					},
					"id": 1663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1663,
							"sourceUnit": 1673,
							"src": "140:46:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1362,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1672,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1663,
							"sourceUnit": 1926,
							"src": "187:48:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1364,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1925,
										"src": "195:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1663,
							"sourceUnit": 2036,
							"src": "236:56:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1366,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2035,
										"src": "244:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1368,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:11",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1662,
							"linearizedBaseContracts": [
								1662
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:11",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1373,
									"name": "Upgraded",
									"nameLocation": "739:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "748:30:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:11"
									},
									"src": "733:47:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:11",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1380,
									"name": "AdminChanged",
									"nameLocation": "864:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "877:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "900:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:11"
									},
									"src": "858:60:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:11",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1385,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "1009:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:11"
									},
									"src": "988:45:11"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:11",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1389,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1662,
									"src": "1279:114:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1387,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1388,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:11",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1394,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1509:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:11"
									},
									"src": "1474:59:11"
								},
								{
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:11",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1399,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "1630:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:11"
									},
									"src": "1604:41:11"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:11",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1404,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "1744:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:11"
									},
									"src": "1717:43:11"
								},
								{
									"documentation": {
										"id": 1405,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:11",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1407,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:11"
									},
									"src": "1853:26:11"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "2018:77:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1415,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "2062:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1413,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "2035:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1957,
															"src": "2035:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1930,
													"src": "2035:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1412,
												"id": 1418,
												"nodeType": "Return",
												"src": "2028:60:11"
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:11",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:11"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2009:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:11"
									},
									"scope": 1662,
									"src": "1957:138:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "2249:218:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1426,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "2263:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1436,
												"nodeType": "IfStatement",
												"src": "2259:119:11",
												"trueBody": {
													"id": 1435,
													"nodeType": "Block",
													"src": "2299:79:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1432,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "2349:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1431,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "2320:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1434,
															"nodeType": "RevertStatement",
															"src": "2313:54:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1440,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "2414:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1437,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "2387:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1957,
																"src": "2387:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1930,
														"src": "2387:53:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1443,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "2443:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:11"
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:11",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "2214:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:11"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:11"
									},
									"scope": 1662,
									"src": "2186:281:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "2860:254:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1456,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "2889:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1455,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "2870:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1460,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "2931:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1459,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2922:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "EmitStatement",
												"src": "2917:32:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1463,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "2964:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1478,
													"nodeType": "Block",
													"src": "3065:43:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1475,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "3079:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1477,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:11"
														}
													]
												},
												"id": 1479,
												"nodeType": "IfStatement",
												"src": "2960:148:11",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "2981:78:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1470,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "3024:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1471,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "3043:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1467,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "2995:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1925_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:11",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1844,
																	"src": "2995:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:11",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "2805:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "2832:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:11"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:11"
									},
									"scope": 1662,
									"src": "2779:335:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:11",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1485,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1662,
									"src": "3335:105:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1483,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1484,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "3844:68:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1493,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "3888:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1491,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "3861:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1957,
															"src": "3861:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1930,
													"src": "3861:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1490,
												"id": 1496,
												"nodeType": "Return",
												"src": "3854:51:11"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:11",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:11"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3835:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:11"
									},
									"scope": 1662,
									"src": "3792:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "4039:172:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1504,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "4053:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1505,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"nodeType": "IfStatement",
												"src": "4049:91:11",
												"trueBody": {
													"id": 1517,
													"nodeType": "Block",
													"src": "4077:63:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1511,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1510,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "4098:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1516,
															"nodeType": "RevertStatement",
															"src": "4091:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1522,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "4176:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1519,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "4149:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1957,
																"src": "4149:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1930,
														"src": "4149:44:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1525,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "4196:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:11"
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:11",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "4013:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:11"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:11"
									},
									"scope": 1662,
									"src": "3994:217:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "4379:85:11",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1536,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "4407:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1538,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "4419:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1535,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "4394:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "EmitStatement",
												"src": "4389:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1542,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "4448:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1541,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "4438:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:11"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:11",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4352:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:11"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:11"
									},
									"scope": 1662,
									"src": "4331:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:11",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1550,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1662,
									"src": "4741:106:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1548,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1549,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "4963:69:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1558,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "5007:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1556,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "4980:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1957,
															"src": "4980:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1930,
													"src": "4980:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1561,
												"nodeType": "Return",
												"src": "4973:52:11"
											}
										]
									},
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:11",
										"text": " @dev Returns the current beacon."
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:11"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "4954:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:11"
									},
									"scope": 1662,
									"src": "4910:122:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "5161:390:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1569,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "5175:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1579,
												"nodeType": "IfStatement",
												"src": "5171:95:11",
												"trueBody": {
													"id": 1578,
													"nodeType": "Block",
													"src": "5203:63:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1575,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "5245:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1574,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5224:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1577,
															"nodeType": "RevertStatement",
															"src": "5217:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1583,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "5303:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1580,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "5276:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1957,
																"src": "5276:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1930,
														"src": "5276:45:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1586,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "5324:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:11"
											},
											{
												"assignments": [
													1590
												],
												"declarations": [
													{
														"constant": false,
														"id": 1590,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:11",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "5344:28:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1589,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1596,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1592,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "5383:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1591,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "5375:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1672_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1672",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:11",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1671,
														"src": "5375:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1597,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "5424:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1607,
												"nodeType": "IfStatement",
												"src": "5420:125:11",
												"trueBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "5463:82:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1603,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "5513:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1602,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "5484:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1605,
															"nodeType": "RevertStatement",
															"src": "5477:57:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:11",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "5134:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:11"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:11"
									},
									"scope": 1662,
									"src": "5114:437:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "6155:254:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1618,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "6176:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1617,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "6165:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1622,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "6216:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1621,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "6201:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "EmitStatement",
												"src": "6196:30:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "6241:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1644,
													"nodeType": "Block",
													"src": "6360:43:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1641,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "6374:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1643,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:11"
														}
													]
												},
												"id": 1645,
												"nodeType": "IfStatement",
												"src": "6237:166:11",
												"trueBody": {
													"id": 1640,
													"nodeType": "Block",
													"src": "6258:96:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1633,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1612,
																						"src": "6309:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1632,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1672,
																					"src": "6301:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1672_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1672",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:11",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1671,
																			"src": "6301:33:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1637,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "6338:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1629,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "6272:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1925_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:11",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1844,
																	"src": "6272:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1639,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:11",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "6108:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "6127:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:11"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:11"
									},
									"scope": 1662,
									"src": "6076:333:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "6634:86:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1651,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1659,
												"nodeType": "IfStatement",
												"src": "6644:70:11",
												"trueBody": {
													"id": 1658,
													"nodeType": "Block",
													"src": "6663:51:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1655,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "6684:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1657,
															"nodeType": "RevertStatement",
															"src": "6677:26:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:11",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:11"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:11"
									},
									"scope": 1662,
									"src": "6598:122:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1663,
							"src": "449:6273:11",
							"usedErrors": [
								1394,
								1399,
								1404,
								1407
							],
							"usedEvents": [
								1373,
								1380,
								1385
							]
						}
					],
					"src": "114:6609:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1672
						]
					},
					"id": 1673,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1665,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:12",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1672,
							"linearizedBaseContracts": [
								1672
							],
							"name": "IBeacon",
							"nameLocation": "224:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:12",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:12"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "460:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:12"
									},
									"scope": 1672,
									"src": "411:58:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1673,
							"src": "214:257:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1925
						]
					},
					"id": 1926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1675,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:13",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1925,
							"linearizedBaseContracts": [
								1925
							],
							"name": "Address",
							"nameLocation": "203:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:13",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1680,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "349:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:13"
									},
									"src": "316:50:13"
								},
								{
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:13",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1685,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "475:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:13"
									},
									"src": "452:39:13"
								},
								{
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:13",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1688,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:13"
									},
									"src": "591:24:13"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "1602:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1698,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1925",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1925",
																		"typeString": "library Address"
																	}
																],
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1701,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "1640:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1711,
												"nodeType": "IfStatement",
												"src": "1612:109:13",
												"trueBody": {
													"id": 1710,
													"nodeType": "Block",
													"src": "1648:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1706,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1925",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1925",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1704,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1703,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "1669:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1709,
															"nodeType": "RevertStatement",
															"src": "1662:48:13"
														}
													]
												}
											},
											{
												"assignments": [
													1713,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1713,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "1732:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1712,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1720,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1714,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "1750:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1716,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "1772:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:13"
											},
											{
												"condition": {
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:13",
													"subExpression": {
														"id": 1721,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "1798:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1727,
												"nodeType": "IfStatement",
												"src": "1793:63:13",
												"trueBody": {
													"id": 1726,
													"nodeType": "Block",
													"src": "1807:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1723,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "1828:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1725,
															"nodeType": "RevertStatement",
															"src": "1821:24:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:13",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "1550:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "1577:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:13"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:13"
									},
									"scope": 1925,
									"src": "1531:331:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "2794:62:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1740,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "2833:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1741,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "2841:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1739,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "2811:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1738,
												"id": 1744,
												"nodeType": "Return",
												"src": "2804:45:13"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:13",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2727:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2743:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1733,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:13"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2780:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:13"
									},
									"scope": 1925,
									"src": "2705:151:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "3293:279:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1760,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1925",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1925",
																		"typeString": "library Address"
																	}
																],
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1758,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1763,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "3331:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1773,
												"nodeType": "IfStatement",
												"src": "3303:108:13",
												"trueBody": {
													"id": 1772,
													"nodeType": "Block",
													"src": "3338:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1768,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1925",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1925",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1766,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1765,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "3359:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1771,
															"nodeType": "RevertStatement",
															"src": "3352:48:13"
														}
													]
												}
											},
											{
												"assignments": [
													1775,
													1777
												],
												"declarations": [
													{
														"constant": false,
														"id": 1775,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "3421:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1774,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1777,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "3435:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1776,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1784,
												"initialValue": {
													"arguments": [
														{
															"id": 1782,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "3488:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1778,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1749,
																"src": "3462:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1780,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1753,
																"src": "3481:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1786,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "3537:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1787,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "3545:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1788,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "3554:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1785,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "3510:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1757,
												"id": 1790,
												"nodeType": "Return",
												"src": "3503:62:13"
											}
										]
									},
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3211:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3227:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3246:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:13"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3279:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:13"
									},
									"scope": 1925,
									"src": "3180:392:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "3811:154:13",
										"statements": [
											{
												"assignments": [
													1803,
													1805
												],
												"declarations": [
													{
														"constant": false,
														"id": 1803,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "3822:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1802,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1805,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "3836:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1804,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1810,
												"initialValue": {
													"arguments": [
														{
															"id": 1808,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "3881:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1806,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "3863:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:13",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1812,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "3930:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1813,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "3938:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1814,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "3947:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1811,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "3903:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1801,
												"id": 1816,
												"nodeType": "Return",
												"src": "3896:62:13"
											}
										]
									},
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "3739:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "3755:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:13"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "3797:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:13"
									},
									"scope": 1925,
									"src": "3711:254:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "4203:156:13",
										"statements": [
											{
												"assignments": [
													1829,
													1831
												],
												"declarations": [
													{
														"constant": false,
														"id": 1829,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "4214:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1828,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "4228:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1830,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1836,
												"initialValue": {
													"arguments": [
														{
															"id": 1834,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "4275:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1832,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "4255:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:13",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1838,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "4324:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1839,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "4332:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1840,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "4341:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1837,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "4297:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1827,
												"id": 1842,
												"nodeType": "Return",
												"src": "4290:62:13"
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "4136:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "4152:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1822,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:13"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "4189:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1825,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:13"
									},
									"scope": 1925,
									"src": "4106:253:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "4783:424:13",
										"statements": [
											{
												"condition": {
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:13",
													"subExpression": {
														"id": 1856,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "4798:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1881,
													"nodeType": "Block",
													"src": "4857:344:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1863,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1851,
																			"src": "5045:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1867,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1847,
																				"src": "5071:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:13",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1878,
															"nodeType": "IfStatement",
															"src": "5041:119:13",
															"trueBody": {
																"id": 1877,
																"nodeType": "Block",
																"src": "5096:64:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1874,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1847,
																					"src": "5138:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1873,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1685,
																				"src": "5121:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1876,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:13"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1879,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "5180:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1855,
															"id": 1880,
															"nodeType": "Return",
															"src": "5173:17:13"
														}
													]
												},
												"id": 1882,
												"nodeType": "IfStatement",
												"src": "4793:408:13",
												"trueBody": {
													"id": 1862,
													"nodeType": "Block",
													"src": "4807:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1859,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1851,
																		"src": "4829:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1858,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "4821:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1861,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:13",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4670:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4694:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1848,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4716:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:13"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4769:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1853,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:13"
									},
									"scope": 1925,
									"src": "4625:582:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "5509:122:13",
										"statements": [
											{
												"condition": {
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:13",
													"subExpression": {
														"id": 1894,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "5524:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1903,
													"nodeType": "Block",
													"src": "5583:42:13",
													"statements": [
														{
															"expression": {
																"id": 1901,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "5604:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1893,
															"id": 1902,
															"nodeType": "Return",
															"src": "5597:17:13"
														}
													]
												},
												"id": 1904,
												"nodeType": "IfStatement",
												"src": "5519:106:13",
												"trueBody": {
													"id": 1900,
													"nodeType": "Block",
													"src": "5533:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1897,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "5555:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1896,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "5547:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1899,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:13",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "5433:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "5447:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1888,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:13"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "5495:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1891,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:13"
									},
									"scope": 1925,
									"src": "5407:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "5798:461:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1912,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "5874:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1921,
													"nodeType": "Block",
													"src": "6204:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1918,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "6225:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1920,
															"nodeType": "RevertStatement",
															"src": "6218:24:13"
														}
													]
												},
												"id": 1922,
												"nodeType": "IfStatement",
												"src": "5870:383:13",
												"trueBody": {
													"id": 1917,
													"nodeType": "Block",
													"src": "5897:301:13",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:13",
																"nodeType": "YulBlock",
																"src": "6055:133:13",
																"statements": [
																	{
																		"nativeSrc": "6073:40:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:13"
																			},
																			"nativeSrc": "6096:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:13"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:13",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:13",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:13",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:13"
																					},
																					"nativeSrc": "6137:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:13"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:13"
																			},
																			"nativeSrc": "6130:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:13"
																		},
																		"nativeSrc": "6130:44:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:13"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1909,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1909,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:13",
																	"valueSize": 1
																}
															],
															"id": 1916,
															"nodeType": "InlineAssembly",
															"src": "6046:142:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:13",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5760:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:13"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:13"
									},
									"scope": 1925,
									"src": "5743:516:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1926,
							"src": "195:6066:13",
							"usedErrors": [
								1680,
								1685,
								1688
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2035
						]
					},
					"id": 2036,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1928,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:14",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2035,
							"linearizedBaseContracts": [
								2035
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1931,
									"members": [
										{
											"constant": false,
											"id": 1930,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1931,
											"src": "1300:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1929,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1271:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1934,
									"members": [
										{
											"constant": false,
											"id": 1933,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1934,
											"src": "1355:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1932,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1326:46:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1937,
									"members": [
										{
											"constant": false,
											"id": 1936,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1937,
											"src": "1407:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1935,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1378:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1940,
									"members": [
										{
											"constant": false,
											"id": 1939,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1940,
											"src": "1462:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1938,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1433:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1943,
									"members": [
										{
											"constant": false,
											"id": 1942,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1943,
											"src": "1516:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1941,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1488:47:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1946,
									"members": [
										{
											"constant": false,
											"id": 1945,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1946,
											"src": "1568:11:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1944,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1541:45:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1956,
										"nodeType": "Block",
										"src": "1768:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:14",
													"nodeType": "YulBlock",
													"src": "1830:38:14",
													"statements": [
														{
															"nativeSrc": "1844:14:14",
															"nodeType": "YulAssignment",
															"src": "1844:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:14",
																"nodeType": "YulIdentifier",
																"src": "1854:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1953,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1949,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:14",
														"valueSize": 1
													}
												],
												"id": 1955,
												"nodeType": "InlineAssembly",
												"src": "1821:47:14"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:14",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "1708:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:14"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "1745:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1952,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1951,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1931,
														"src": "1745:11:14"
													},
													"referencedDeclaration": 1931,
													"src": "1745:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:14"
									},
									"scope": 2035,
									"src": "1684:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "2056:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:14",
													"nodeType": "YulBlock",
													"src": "2118:38:14",
													"statements": [
														{
															"nativeSrc": "2132:14:14",
															"nodeType": "YulAssignment",
															"src": "2132:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:14",
																"nodeType": "YulIdentifier",
																"src": "2142:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1964,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1960,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:14",
														"valueSize": 1
													}
												],
												"id": 1966,
												"nodeType": "InlineAssembly",
												"src": "2109:47:14"
											}
										]
									},
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:14",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "1996:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1959,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:14"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2033:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1934_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1962,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1934,
														"src": "2033:11:14"
													},
													"referencedDeclaration": 1934,
													"src": "2033:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1934_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:14"
									},
									"scope": 2035,
									"src": "1972:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1978,
										"nodeType": "Block",
										"src": "2344:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:14",
													"nodeType": "YulBlock",
													"src": "2406:38:14",
													"statements": [
														{
															"nativeSrc": "2420:14:14",
															"nodeType": "YulAssignment",
															"src": "2420:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:14",
																"nodeType": "YulIdentifier",
																"src": "2430:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1975,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1971,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:14",
														"valueSize": 1
													}
												],
												"id": 1977,
												"nodeType": "InlineAssembly",
												"src": "2397:47:14"
											}
										]
									},
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:14",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2284:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1970,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:14"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2321:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1937_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1974,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1973,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1937,
														"src": "2321:11:14"
													},
													"referencedDeclaration": 1937,
													"src": "2321:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1937_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:14"
									},
									"scope": 2035,
									"src": "2260:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "2632:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:14",
													"nodeType": "YulBlock",
													"src": "2694:38:14",
													"statements": [
														{
															"nativeSrc": "2708:14:14",
															"nodeType": "YulAssignment",
															"src": "2708:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:14",
																"nodeType": "YulIdentifier",
																"src": "2718:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1986,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1982,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:14",
														"valueSize": 1
													}
												],
												"id": 1988,
												"nodeType": "InlineAssembly",
												"src": "2685:47:14"
											}
										]
									},
									"documentation": {
										"id": 1980,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:14",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "2572:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1981,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:14"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "2609:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1940_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1985,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1984,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1940,
														"src": "2609:11:14"
													},
													"referencedDeclaration": 1940,
													"src": "2609:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1940_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:14"
									},
									"scope": 2035,
									"src": "2548:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "2917:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:14",
													"nodeType": "YulBlock",
													"src": "2979:38:14",
													"statements": [
														{
															"nativeSrc": "2993:14:14",
															"nodeType": "YulAssignment",
															"src": "2993:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:14",
																"nodeType": "YulIdentifier",
																"src": "3003:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1997,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1993,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:14",
														"valueSize": 1
													}
												],
												"id": 1999,
												"nodeType": "InlineAssembly",
												"src": "2970:47:14"
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:14",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2858:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1992,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:14"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2895:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1943_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1996,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1995,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1943,
														"src": "2895:10:14"
													},
													"referencedDeclaration": 1943,
													"src": "2895:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1943_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:14"
									},
									"scope": 2035,
									"src": "2835:188:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "3225:112:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:14",
													"nodeType": "YulBlock",
													"src": "3287:44:14",
													"statements": [
														{
															"nativeSrc": "3301:20:14",
															"nodeType": "YulAssignment",
															"src": "3301:20:14",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:14",
																"nodeType": "YulIdentifier",
																"src": "3311:10:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2008,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2004,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2010,
												"nodeType": "InlineAssembly",
												"src": "3278:53:14"
											}
										]
									},
									"documentation": {
										"id": 2002,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:14",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3158:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2003,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:14"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3203:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1943_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2006,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1943,
														"src": "3203:10:14"
													},
													"referencedDeclaration": 1943,
													"src": "3203:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1943_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:14"
									},
									"scope": 2035,
									"src": "3135:202:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "3513:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:14",
													"nodeType": "YulBlock",
													"src": "3575:38:14",
													"statements": [
														{
															"nativeSrc": "3589:14:14",
															"nodeType": "YulAssignment",
															"src": "3589:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:14",
																"nodeType": "YulIdentifier",
																"src": "3599:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2019,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2015,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:14",
														"valueSize": 1
													}
												],
												"id": 2021,
												"nodeType": "InlineAssembly",
												"src": "3566:47:14"
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:14",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "3455:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2014,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:14"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "3492:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1946_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2017,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "3492:9:14"
													},
													"referencedDeclaration": 1946,
													"src": "3492:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1946_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:14"
									},
									"scope": 2035,
									"src": "3433:186:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "3816:112:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:14",
													"nodeType": "YulBlock",
													"src": "3878:44:14",
													"statements": [
														{
															"nativeSrc": "3892:20:14",
															"nodeType": "YulAssignment",
															"src": "3892:20:14",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:14",
																"nodeType": "YulIdentifier",
																"src": "3902:10:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2030,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2026,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2032,
												"nodeType": "InlineAssembly",
												"src": "3869:53:14"
											}
										]
									},
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:14",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "3751:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:14"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "3795:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1946_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2029,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2028,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "3795:9:14"
													},
													"referencedDeclaration": 1946,
													"src": "3795:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1946_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:14"
									},
									"scope": 2035,
									"src": "3729:199:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2036,
							"src": "1245:2685:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2047
						]
					},
					"id": 2048,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2037,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2038,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2047,
							"linearizedBaseContracts": [
								2047
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2039,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2040,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2047,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2048,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"src/smartcontracts/CryptoQuestSwap.sol": {
				"ast": {
					"absolutePath": "src/smartcontracts/CryptoQuestSwap.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1038
						],
						"CryptoQuestSwap": [
							2991
						],
						"ERC165Upgradeable": [
							1254
						],
						"ERC1967Utils": [
							1662
						],
						"IAccessControl": [
							1349
						],
						"IERC165Upgradeable": [
							1266
						],
						"IERC1822Proxiable": [
							1359
						],
						"IERC20Upgradeable": [
							876
						],
						"IERC721Upgradeable": [
							992
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							1214
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 2992,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2049,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 2050,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 877,
							"src": "107:79:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"id": 2051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 993,
							"src": "187:81:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"id": 2052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 1215,
							"src": "269:75:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2053,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 363,
							"src": "345:81:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 2054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 617,
							"src": "427:75:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 799,
							"src": "503:77:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2057,
										"name": "Initializable",
										"nameLocations": [
											"666:13:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "666:13:16"
									},
									"id": 2058,
									"nodeType": "InheritanceSpecifier",
									"src": "666:13:16"
								},
								{
									"baseName": {
										"id": 2059,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"681:19:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1214,
										"src": "681:19:16"
									},
									"id": 2060,
									"nodeType": "InheritanceSpecifier",
									"src": "681:19:16"
								},
								{
									"baseName": {
										"id": 2061,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"702:24:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "702:24:16"
									},
									"id": 2062,
									"nodeType": "InheritanceSpecifier",
									"src": "702:24:16"
								},
								{
									"baseName": {
										"id": 2063,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"728:15:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "728:15:16"
									},
									"id": 2064,
									"nodeType": "InheritanceSpecifier",
									"src": "728:15:16"
								}
							],
							"canonicalName": "CryptoQuestSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2056,
								"nodeType": "StructuredDocumentation",
								"src": "582:56:16",
								"text": "@custom:security-contact jacquedegraff@creodamo.com"
							},
							"fullyImplemented": true,
							"id": 2991,
							"linearizedBaseContracts": [
								2991,
								798,
								1359,
								362,
								1254,
								2047,
								1349,
								1214,
								1038,
								616
							],
							"name": "CryptoQuestSwap",
							"nameLocation": "647:15:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 2069,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "774:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "750:62:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2065,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "750:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 2067,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "798:13:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 2066,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "788:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2068,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "788:24:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f72c0d8b",
									"id": 2074,
									"mutability": "constant",
									"name": "UPGRADER_ROLE",
									"nameLocation": "842:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "818:66:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2070,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "818:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "55504752414445525f524f4c45",
												"id": 2072,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "868:15:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												},
												"value": "UPGRADER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												}
											],
											"id": 2071,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "858:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2073,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "858:26:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "242f0551",
									"id": 2079,
									"mutability": "constant",
									"name": "LIQUIDITY_MANAGER_ROLE",
									"nameLocation": "914:22:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "890:84:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2075,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "890:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4c49515549444954595f4d414e414745525f524f4c45",
												"id": 2077,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "949:24:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f",
													"typeString": "literal_string \"LIQUIDITY_MANAGER_ROLE\""
												},
												"value": "LIQUIDITY_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f",
													"typeString": "literal_string \"LIQUIDITY_MANAGER_ROLE\""
												}
											],
											"id": 2076,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "939:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2078,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "939:35:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2d11c58a",
									"id": 2082,
									"mutability": "constant",
									"name": "FEE_RATE",
									"nameLocation": "1005:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "981:36:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2080,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 2081,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1016:1:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "34aab064",
									"id": 2085,
									"mutability": "mutable",
									"name": "cqtToken",
									"nameLocation": "1061:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "1036:33:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 2084,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2083,
											"name": "IERC20Upgradeable",
											"nameLocations": [
												"1036:17:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 876,
											"src": "1036:17:16"
										},
										"referencedDeclaration": 876,
										"src": "1036:17:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "da069683",
									"id": 2088,
									"mutability": "mutable",
									"name": "cqtNFT",
									"nameLocation": "1101:6:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "1075:32:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
										"typeString": "contract IERC721Upgradeable"
									},
									"typeName": {
										"id": 2087,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2086,
											"name": "IERC721Upgradeable",
											"nameLocations": [
												"1075:18:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 992,
											"src": "1075:18:16"
										},
										"referencedDeclaration": 992,
										"src": "1075:18:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
											"typeString": "contract IERC721Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestSwap.LiquidityPool",
									"id": 2099,
									"members": [
										{
											"constant": false,
											"id": 2090,
											"mutability": "mutable",
											"name": "tokenAmount",
											"nameLocation": "1153:11:16",
											"nodeType": "VariableDeclaration",
											"scope": 2099,
											"src": "1145:19:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2089,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1145:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2092,
											"mutability": "mutable",
											"name": "ethAmount",
											"nameLocation": "1182:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 2099,
											"src": "1174:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2091,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1174:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2094,
											"mutability": "mutable",
											"name": "totalLiquidity",
											"nameLocation": "1209:14:16",
											"nodeType": "VariableDeclaration",
											"scope": 2099,
											"src": "1201:22:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2093,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1201:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2098,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "1261:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 2099,
											"src": "1233:37:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 2097,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1233:27:16",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LiquidityPool",
									"nameLocation": "1121:13:16",
									"nodeType": "StructDefinition",
									"scope": 2991,
									"src": "1114:163:16",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0b0fd47e",
									"id": 2104,
									"mutability": "mutable",
									"name": "liquidityPools",
									"nameLocation": "1324:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "1283:55:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
										"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool)"
									},
									"typeName": {
										"id": 2103,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2100,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1291:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1283:33:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
											"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2102,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2101,
												"name": "LiquidityPool",
												"nameLocations": [
													"1302:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2099,
												"src": "1302:13:16"
											},
											"referencedDeclaration": 2099,
											"src": "1302:13:16",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
												"typeString": "struct CryptoQuestSwap.LiquidityPool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f7",
									"id": 2116,
									"name": "LiquidityAdded",
									"nameLocation": "1351:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1382:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1366:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1408:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1392:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1423:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1415:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "1444:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1436:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1463:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1455:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:108:16"
									},
									"src": "1345:129:16"
								},
								{
									"anonymous": false,
									"eventSelector": "bc7d19d505c7ec4db83f3b51f19fb98c4c8a99922e7839d1ee608dfbee29501b",
									"id": 2128,
									"name": "LiquidityRemoved",
									"nameLocation": "1485:16:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1518:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1502:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1544:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1528:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1559:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1551:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "1580:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1572:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1599:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1591:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1591:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:108:16"
									},
									"src": "1479:131:16"
								},
								{
									"anonymous": false,
									"eventSelector": "30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66",
									"id": 2138,
									"name": "TokenSwapped",
									"nameLocation": "1621:12:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"indexed": true,
												"mutability": "mutable",
												"name": "swapper",
												"nameLocation": "1650:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1634:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1634:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1675:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1659:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1690:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1682:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "1711:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1703:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:88:16"
									},
									"src": "1615:107:16"
								},
								{
									"anonymous": false,
									"eventSelector": "9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e65",
									"id": 2148,
									"name": "NFTSwapped",
									"nameLocation": "1733:10:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"indexed": true,
												"mutability": "mutable",
												"name": "swapper",
												"nameLocation": "1760:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "1744:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1785:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "1769:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1814:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "1798:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "1831:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "1823:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:98:16"
									},
									"src": "1727:115:16"
								},
								{
									"body": {
										"id": 2155,
										"nodeType": "Block",
										"src": "1915:39:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2152,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "1925:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1925:22:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2154,
												"nodeType": "ExpressionStatement",
												"src": "1925:22:16"
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "1848:48:16",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2156,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:2:16"
									},
									"returnParameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1915:0:16"
									},
									"scope": 2991,
									"src": "1901:53:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2214,
										"nodeType": "Block",
										"src": "2183:411:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2173,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "2193:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2193:17:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2175,
												"nodeType": "ExpressionStatement",
												"src": "2193:17:16"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2176,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2220:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2220:22:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2178,
												"nodeType": "ExpressionStatement",
												"src": "2220:22:16"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2179,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "2252:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2252:24:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "2252:24:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2183,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2298:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2184,
															"name": "defaultAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "2318:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2182,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2287:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2287:44:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2186,
												"nodeType": "ExpressionStatement",
												"src": "2287:44:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2188,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "2352:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2189,
															"name": "pauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2365:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2187,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2341:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "2341:31:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2193,
															"name": "UPGRADER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "2393:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2194,
															"name": "upgrader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "2408:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2192,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2382:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2382:35:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "2382:35:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2198,
															"name": "LIQUIDITY_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "2438:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2199,
															"name": "liquidityManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "2462:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2197,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2427:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:52:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2201,
												"nodeType": "ExpressionStatement",
												"src": "2427:52:16"
											},
											{
												"expression": {
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2202,
														"name": "cqtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "2490:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2204,
																"name": "cqtTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "2519:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2203,
															"name": "IERC20Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "2501:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																"typeString": "type(contract IERC20Upgradeable)"
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2501:34:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2490:45:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 2207,
												"nodeType": "ExpressionStatement",
												"src": "2490:45:16"
											},
											{
												"expression": {
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2208,
														"name": "cqtNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2088,
														"src": "2545:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
															"typeString": "contract IERC721Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2210,
																"name": "cqtNFTAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "2573:13:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2209,
															"name": "IERC721Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2554:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$992_$",
																"typeString": "type(contract IERC721Upgradeable)"
															}
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2554:33:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
															"typeString": "contract IERC721Upgradeable"
														}
													},
													"src": "2545:42:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
														"typeString": "contract IERC721Upgradeable"
													}
												},
												"id": 2213,
												"nodeType": "ExpressionStatement",
												"src": "2545:42:16"
											}
										]
									},
									"functionSelector": "cc2a9a5b",
									"id": 2215,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2170,
												"name": "initializer",
												"nameLocations": [
													"2164:11:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 470,
												"src": "2164:11:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2164:11:16"
										}
									],
									"name": "initialize",
									"nameLocation": "1969:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "defaultAdmin",
												"nameLocation": "1997:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "1989:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "pauser",
												"nameLocation": "2027:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "2019:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "upgrader",
												"nameLocation": "2051:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "2043:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "liquidityManager",
												"nameLocation": "2077:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "2069:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "cqtTokenAddress",
												"nameLocation": "2111:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "2103:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "cqtNFTAddress",
												"nameLocation": "2144:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "2136:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:184:16"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2183:0:16"
									},
									"scope": 2991,
									"src": "1960:634:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "2646:25:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2221,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "2656:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:8:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "2656:8:16"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2218,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2069,
													"src": "2633:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2217,
												"name": "onlyRole",
												"nameLocations": [
													"2624:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2624:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2624:21:16"
										}
									],
									"name": "pause",
									"nameLocation": "2609:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:2:16"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2646:0:16"
									},
									"scope": 2991,
									"src": "2600:71:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "2725:27:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2231,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "2735:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2735:10:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2233,
												"nodeType": "ExpressionStatement",
												"src": "2735:10:16"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2228,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2069,
													"src": "2712:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2227,
												"name": "onlyRole",
												"nameLocations": [
													"2703:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2703:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2703:21:16"
										}
									],
									"name": "unpause",
									"nameLocation": "2686:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:16"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2725:0:16"
									},
									"scope": 2991,
									"src": "2677:75:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2391,
										"nodeType": "Block",
										"src": "2865:1142:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2247,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2239,
																"src": "2883:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2897:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2883:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2900:40:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															},
															"value": "Token amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															}
														],
														"id": 2246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2875:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2875:66:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2252,
												"nodeType": "ExpressionStatement",
												"src": "2875:66:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2254,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2959:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2963:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2959:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2971:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2959:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2974:38:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															},
															"value": "ETH amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															}
														],
														"id": 2253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2951:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2951:62:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "2951:62:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3062:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3066:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3062:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2269,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3082:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																],
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3074:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2267,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3074:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3074:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2271,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "3089:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2262,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2237,
																	"src": "3042:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2261,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "3024:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3024:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3049:12:16",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 875,
														"src": "3024:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3024:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2273,
												"nodeType": "ExpressionStatement",
												"src": "3024:77:16"
											},
											{
												"assignments": [
													2276
												],
												"declarations": [
													{
														"constant": false,
														"id": 2276,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "3134:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2391,
														"src": "3112:26:16",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
															"typeString": "struct CryptoQuestSwap.LiquidityPool"
														},
														"typeName": {
															"id": 2275,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2274,
																"name": "LiquidityPool",
																"nameLocations": [
																	"3112:13:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2099,
																"src": "3112:13:16"
															},
															"referencedDeclaration": 2099,
															"src": "3112:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2280,
												"initialValue": {
													"baseExpression": {
														"id": 2277,
														"name": "liquidityPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "3141:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
															"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
														}
													},
													"id": 2279,
													"indexExpression": {
														"id": 2278,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2237,
														"src": "3156:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3141:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
														"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3112:50:16"
											},
											{
												"assignments": [
													2282
												],
												"declarations": [
													{
														"constant": false,
														"id": 2282,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "3180:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2391,
														"src": "3172:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3172:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2283,
												"nodeType": "VariableDeclarationStatement",
												"src": "3172:17:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2284,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "3204:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2285,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3209:14:16",
														"memberName": "totalLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2094,
														"src": "3204:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3227:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3204:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2362,
													"nodeType": "Block",
													"src": "3368:431:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2307,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2276,
																					"src": "3390:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																						"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																					}
																				},
																				"id": 2308,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3395:9:16",
																				"memberName": "ethAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2092,
																				"src": "3390:14:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3407:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3390:18:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2311,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2276,
																					"src": "3412:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																						"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																					}
																				},
																				"id": 2312,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3417:11:16",
																				"memberName": "tokenAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2090,
																				"src": "3412:16:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3431:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3412:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3390:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420706f6f6c207374617465",
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3434:20:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9",
																			"typeString": "literal_string \"Invalid pool state\""
																		},
																		"value": "Invalid pool state"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9",
																			"typeString": "literal_string \"Invalid pool state\""
																		}
																	],
																	"id": 2306,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3382:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3382:73:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2318,
															"nodeType": "ExpressionStatement",
															"src": "3382:73:16"
														},
														{
															"assignments": [
																2320
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2320,
																	"mutability": "mutable",
																	"name": "ethAmountRatio",
																	"nameLocation": "3478:14:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 2362,
																	"src": "3470:22:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2319,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3470:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2329,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2321,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2276,
																					"src": "3496:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																						"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																					}
																				},
																				"id": 2322,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3501:9:16",
																				"memberName": "ethAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2092,
																				"src": "3496:14:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2323,
																				"name": "tokenAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2239,
																				"src": "3513:11:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3496:28:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3495:30:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 2326,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3528:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3533:11:16",
																	"memberName": "tokenAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "3528:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3495:49:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3470:74:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2331,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3566:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3570:5:16",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "3566:9:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2333,
																			"name": "ethAmountRatio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "3579:14:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3566:27:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742045544820616d6f756e74",
																		"id": 2335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3595:25:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91",
																			"typeString": "literal_string \"Insufficient ETH amount\""
																		},
																		"value": "Insufficient ETH amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91",
																			"typeString": "literal_string \"Insufficient ETH amount\""
																		}
																	],
																	"id": 2330,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3558:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3558:63:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2337,
															"nodeType": "ExpressionStatement",
															"src": "3558:63:16"
														},
														{
															"expression": {
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2338,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3636:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3641:11:16",
																	"memberName": "tokenAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "3636:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2341,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "3656:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3636:31:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2343,
															"nodeType": "ExpressionStatement",
															"src": "3636:31:16"
														},
														{
															"expression": {
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2344,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3681:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3686:9:16",
																	"memberName": "ethAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2092,
																	"src": "3681:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 2347,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3699:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3703:5:16",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3699:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3681:27:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2350,
															"nodeType": "ExpressionStatement",
															"src": "3681:27:16"
														},
														{
															"expression": {
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2351,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "3722:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2352,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2276,
																						"src": "3735:4:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																							"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																						}
																					},
																					"id": 2353,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3740:14:16",
																					"memberName": "totalLiquidity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2094,
																					"src": "3735:19:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2354,
																					"name": "tokenAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2239,
																					"src": "3757:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3735:33:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2356,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3734:35:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"expression": {
																			"id": 2357,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "3772:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																				"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																			}
																		},
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3777:11:16",
																		"memberName": "tokenAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2090,
																		"src": "3772:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3734:54:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3722:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2361,
															"nodeType": "ExpressionStatement",
															"src": "3722:66:16"
														}
													]
												},
												"id": 2363,
												"nodeType": "IfStatement",
												"src": "3200:599:16",
												"trueBody": {
													"id": 2305,
													"nodeType": "Block",
													"src": "3230:132:16",
													"statements": [
														{
															"expression": {
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2288,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3244:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3249:11:16",
																	"memberName": "tokenAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "3244:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2291,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "3263:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3244:30:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2293,
															"nodeType": "ExpressionStatement",
															"src": "3244:30:16"
														},
														{
															"expression": {
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2294,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3288:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3293:9:16",
																	"memberName": "ethAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2092,
																	"src": "3288:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2297,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3305:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3309:5:16",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3305:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3288:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2300,
															"nodeType": "ExpressionStatement",
															"src": "3288:26:16"
														},
														{
															"expression": {
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2301,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "3328:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2302,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "3340:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3328:23:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2304,
															"nodeType": "ExpressionStatement",
															"src": "3328:23:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2364,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "3809:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2366,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3814:14:16",
														"memberName": "totalLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2094,
														"src": "3809:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2367,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "3832:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3809:32:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2369,
												"nodeType": "ExpressionStatement",
												"src": "3809:32:16"
											},
											{
												"expression": {
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2370,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "3851:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3856:9:16",
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2098,
															"src": "3851:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2375,
														"indexExpression": {
															"expression": {
																"id": 2372,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3866:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3870:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3866:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3851:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2376,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "3881:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:39:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2378,
												"nodeType": "ExpressionStatement",
												"src": "3851:39:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2380,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3921:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3925:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3921:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "3933:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2383,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "3940:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3953:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3957:5:16",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3953:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2386,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "3964:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2379,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "3906:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3906:68:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2388,
												"nodeType": "EmitStatement",
												"src": "3901:73:16"
											},
											{
												"expression": {
													"id": 2389,
													"name": "liquidity",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2282,
													"src": "3991:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2245,
												"id": 2390,
												"nodeType": "Return",
												"src": "3984:16:16"
											}
										]
									},
									"functionSelector": "56688700",
									"id": 2392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2241,
												"name": "whenNotPaused",
												"nameLocations": [
													"2833:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "2833:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2833:13:16"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "2767:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2788:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "2780:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2803:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "2795:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:36:16"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "2856:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2855:9:16"
									},
									"scope": 2991,
									"src": "2758:1249:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2499,
										"nodeType": "Block",
										"src": "4144:674:16",
										"statements": [
											{
												"assignments": [
													2407
												],
												"declarations": [
													{
														"constant": false,
														"id": 2407,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4176:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2499,
														"src": "4154:26:16",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
															"typeString": "struct CryptoQuestSwap.LiquidityPool"
														},
														"typeName": {
															"id": 2406,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2405,
																"name": "LiquidityPool",
																"nameLocations": [
																	"4154:13:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2099,
																"src": "4154:13:16"
															},
															"referencedDeclaration": 2099,
															"src": "4154:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2411,
												"initialValue": {
													"baseExpression": {
														"id": 2408,
														"name": "liquidityPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "4183:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
															"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
														}
													},
													"id": 2410,
													"indexExpression": {
														"id": 2409,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "4198:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4183:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
														"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4154:50:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 2413,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2407,
																		"src": "4222:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4227:9:16",
																	"memberName": "liquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2098,
																	"src": "4222:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2417,
																"indexExpression": {
																	"expression": {
																		"id": 2415,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4237:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4241:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4237:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4222:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2418,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2396,
																"src": "4252:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4222:39:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4263:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 2412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4214:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:74:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2422,
												"nodeType": "ExpressionStatement",
												"src": "4214:74:16"
											},
											{
												"expression": {
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2423,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2401,
														"src": "4299:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2424,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "4314:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																				"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																			}
																		},
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4319:11:16",
																		"memberName": "tokenAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2090,
																		"src": "4314:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2426,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2396,
																		"src": "4333:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4314:28:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2428,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4313:30:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"expression": {
																"id": 2429,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "4346:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4351:14:16",
															"memberName": "totalLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2094,
															"src": "4346:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4313:52:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4299:66:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2433,
												"nodeType": "ExpressionStatement",
												"src": "4299:66:16"
											},
											{
												"expression": {
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2434,
														"name": "ethAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "4375:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2435,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "4388:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																				"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																			}
																		},
																		"id": 2436,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4393:9:16",
																		"memberName": "ethAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2092,
																		"src": "4388:14:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2437,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2396,
																		"src": "4405:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4388:26:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2439,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4387:28:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"expression": {
																"id": 2440,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "4418:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4423:14:16",
															"memberName": "totalLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2094,
															"src": "4418:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4387:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4375:62:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2444,
												"nodeType": "ExpressionStatement",
												"src": "4375:62:16"
											},
											{
												"expression": {
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2445,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "4448:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2447,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4453:11:16",
														"memberName": "tokenAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2090,
														"src": "4448:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2448,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2401,
														"src": "4468:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4448:31:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2450,
												"nodeType": "ExpressionStatement",
												"src": "4448:31:16"
											},
											{
												"expression": {
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2451,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "4489:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2453,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4494:9:16",
														"memberName": "ethAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2092,
														"src": "4489:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2454,
														"name": "ethAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "4507:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4489:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2456,
												"nodeType": "ExpressionStatement",
												"src": "4489:27:16"
											},
											{
												"expression": {
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2457,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "4526:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2459,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4531:14:16",
														"memberName": "totalLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2094,
														"src": "4526:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2460,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2396,
														"src": "4549:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4526:32:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2462,
												"nodeType": "ExpressionStatement",
												"src": "4526:32:16"
											},
											{
												"expression": {
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2463,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "4568:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4573:9:16",
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2098,
															"src": "4568:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2468,
														"indexExpression": {
															"expression": {
																"id": 2465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4583:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4587:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4583:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4568:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2469,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2396,
														"src": "4598:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4568:39:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2471,
												"nodeType": "ExpressionStatement",
												"src": "4568:39:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2476,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4652:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4656:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4652:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2478,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "4664:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2473,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "4636:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2472,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "4618:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4618:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4643:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "4618:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:58:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2480,
												"nodeType": "ExpressionStatement",
												"src": "4618:58:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2487,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "4715:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4694:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4698:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4694:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4686:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2481,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4686:8:16",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4686:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4706:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4686:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:39:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2489,
												"nodeType": "ExpressionStatement",
												"src": "4686:39:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4758:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4762:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4758:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2493,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2394,
															"src": "4770:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2494,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "4777:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2495,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "4790:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2496,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2396,
															"src": "4801:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2490,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "4741:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4741:70:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2498,
												"nodeType": "EmitStatement",
												"src": "4736:75:16"
											}
										]
									},
									"functionSelector": "a201ccf6",
									"id": 2500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2398,
												"name": "whenNotPaused",
												"nameLocations": [
													"4081:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "4081:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "4081:13:16"
										}
									],
									"name": "removeLiquidity",
									"nameLocation": "4022:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4046:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4038:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4061:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4053:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:34:16"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "4112:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4104:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4104:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "4133:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4125:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4103:40:16"
									},
									"scope": 2991,
									"src": "4013:805:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "4915:612:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2510,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4933:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4937:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4933:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4945:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4933:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4948:38:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															},
															"value": "ETH amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															}
														],
														"id": 2509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4925:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4925:62:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2516,
												"nodeType": "ExpressionStatement",
												"src": "4925:62:16"
											},
											{
												"assignments": [
													2519
												],
												"declarations": [
													{
														"constant": false,
														"id": 2519,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5019:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2586,
														"src": "4997:26:16",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
															"typeString": "struct CryptoQuestSwap.LiquidityPool"
														},
														"typeName": {
															"id": 2518,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2517,
																"name": "LiquidityPool",
																"nameLocations": [
																	"4997:13:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2099,
																"src": "4997:13:16"
															},
															"referencedDeclaration": 2099,
															"src": "4997:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2523,
												"initialValue": {
													"baseExpression": {
														"id": 2520,
														"name": "liquidityPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "5026:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
															"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
														}
													},
													"id": 2522,
													"indexExpression": {
														"id": 2521,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2502,
														"src": "5041:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5026:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
														"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4997:50:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2525,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2519,
																		"src": "5065:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5070:9:16",
																	"memberName": "ethAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2092,
																	"src": "5065:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5082:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5065:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2529,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2519,
																		"src": "5087:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5092:11:16",
																	"memberName": "tokenAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "5087:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5106:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5087:20:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5065:42:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5109:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 2524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5057:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5057:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2536,
												"nodeType": "ExpressionStatement",
												"src": "5057:77:16"
											},
											{
												"assignments": [
													2538
												],
												"declarations": [
													{
														"constant": false,
														"id": 2538,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "5153:11:16",
														"nodeType": "VariableDeclaration",
														"scope": 2586,
														"src": "5145:19:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5145:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2547,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2540,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5183:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5187:5:16",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5183:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2542,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2519,
																"src": "5194:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2543,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5199:9:16",
															"memberName": "ethAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2092,
															"src": "5194:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2544,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2519,
																"src": "5210:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5215:11:16",
															"memberName": "tokenAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2090,
															"src": "5210:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2539,
														"name": "getOutputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2883,
														"src": "5167:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5167:60:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5145:82:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2549,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2538,
																"src": "5245:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2550,
																"name": "minTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2504,
																"src": "5260:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5245:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520746f6c6572616e6365206578636565646564",
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5271:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															},
															"value": "Slippage tolerance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															}
														],
														"id": 2548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5237:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:64:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2554,
												"nodeType": "ExpressionStatement",
												"src": "5237:64:16"
											},
											{
												"expression": {
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2555,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "5312:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2557,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5317:9:16",
														"memberName": "ethAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2092,
														"src": "5312:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 2558,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5330:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5334:5:16",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5330:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5312:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2561,
												"nodeType": "ExpressionStatement",
												"src": "5312:27:16"
											},
											{
												"expression": {
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2562,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "5349:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2564,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5354:11:16",
														"memberName": "tokenAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2090,
														"src": "5349:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2565,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2538,
														"src": "5369:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5349:31:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2567,
												"nodeType": "ExpressionStatement",
												"src": "5349:31:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2572,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5425:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5429:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5425:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2574,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2538,
															"src": "5437:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2569,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "5409:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2568,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "5391:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5391:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5416:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "5391:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5391:58:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2576,
												"nodeType": "ExpressionStatement",
												"src": "5391:58:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2578,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5478:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5482:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5478:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2580,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "5490:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2581,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2538,
															"src": "5497:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2582,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5510:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5514:5:16",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5510:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2577,
														"name": "TokenSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "5465:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5465:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2585,
												"nodeType": "EmitStatement",
												"src": "5460:60:16"
											}
										]
									},
									"functionSelector": "51422e97",
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2506,
												"name": "whenNotPaused",
												"nameLocations": [
													"4901:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "4901:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "4901:13:16"
										}
									],
									"name": "swapETHForTokens",
									"nameLocation": "4833:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4858:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "4850:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4850:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "minTokens",
												"nameLocation": "4873:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "4865:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4865:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4849:34:16"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4915:0:16"
									},
									"scope": 2991,
									"src": "4824:703:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2684,
										"nodeType": "Block",
										"src": "5634:679:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2599,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2591,
																"src": "5652:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5666:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5652:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5669:40:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															},
															"value": "Token amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															}
														],
														"id": 2598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5644:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5644:66:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2604,
												"nodeType": "ExpressionStatement",
												"src": "5644:66:16"
											},
											{
												"assignments": [
													2607
												],
												"declarations": [
													{
														"constant": false,
														"id": 2607,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5742:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2684,
														"src": "5720:26:16",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
															"typeString": "struct CryptoQuestSwap.LiquidityPool"
														},
														"typeName": {
															"id": 2606,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2605,
																"name": "LiquidityPool",
																"nameLocations": [
																	"5720:13:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2099,
																"src": "5720:13:16"
															},
															"referencedDeclaration": 2099,
															"src": "5720:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2611,
												"initialValue": {
													"baseExpression": {
														"id": 2608,
														"name": "liquidityPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "5749:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
															"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
														}
													},
													"id": 2610,
													"indexExpression": {
														"id": 2609,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2589,
														"src": "5764:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5749:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
														"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5720:50:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2613,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2607,
																		"src": "5788:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5793:9:16",
																	"memberName": "ethAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2092,
																	"src": "5788:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5805:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5788:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2617,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2607,
																		"src": "5810:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5815:11:16",
																	"memberName": "tokenAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "5810:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5829:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5810:20:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5788:42:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5832:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 2612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5780:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5780:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2624,
												"nodeType": "ExpressionStatement",
												"src": "5780:77:16"
											},
											{
												"assignments": [
													2626
												],
												"declarations": [
													{
														"constant": false,
														"id": 2626,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "5876:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2684,
														"src": "5868:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5868:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2634,
												"initialValue": {
													"arguments": [
														{
															"id": 2628,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "5904:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2629,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2607,
																"src": "5917:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5922:11:16",
															"memberName": "tokenAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2090,
															"src": "5917:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2631,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2607,
																"src": "5935:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5940:9:16",
															"memberName": "ethAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2092,
															"src": "5935:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2627,
														"name": "getOutputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2883,
														"src": "5888:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5888:62:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5868:82:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2636,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2626,
																"src": "5968:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2637,
																"name": "minETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "5981:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5968:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520746f6c6572616e6365206578636565646564",
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5989:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															},
															"value": "Slippage tolerance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															}
														],
														"id": 2635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5960:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5960:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2641,
												"nodeType": "ExpressionStatement",
												"src": "5960:59:16"
											},
											{
												"expression": {
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2642,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "6030:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2644,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6035:11:16",
														"memberName": "tokenAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2090,
														"src": "6030:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2645,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2591,
														"src": "6050:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6030:31:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "6030:31:16"
											},
											{
												"expression": {
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2648,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "6071:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2650,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6076:9:16",
														"memberName": "ethAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2092,
														"src": "6071:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2651,
														"name": "ethAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2626,
														"src": "6089:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6071:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2653,
												"nodeType": "ExpressionStatement",
												"src": "6071:27:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2658,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6147:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6151:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6147:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2662,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6167:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																],
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6159:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2660,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6159:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6159:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2664,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "6174:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2655,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2589,
																	"src": "6127:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2654,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "6109:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6109:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6134:12:16",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 875,
														"src": "6109:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2666,
												"nodeType": "ExpressionStatement",
												"src": "6109:77:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2673,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2626,
															"src": "6225:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2669,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6204:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6208:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6204:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6196:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6196:8:16",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6196:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6216:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6196:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6196:39:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2675,
												"nodeType": "ExpressionStatement",
												"src": "6196:39:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2677,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6264:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6268:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6264:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2679,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2589,
															"src": "6276:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2680,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "6283:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2681,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2626,
															"src": "6296:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2676,
														"name": "TokenSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "6251:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6251:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2683,
												"nodeType": "EmitStatement",
												"src": "6246:60:16"
											}
										]
									},
									"functionSelector": "e15cc8da",
									"id": 2685,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2596,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2595,
												"name": "whenNotPaused",
												"nameLocations": [
													"5620:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "5620:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "5620:13:16"
										}
									],
									"name": "swapTokensForETH",
									"nameLocation": "5542:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5567:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "5559:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5559:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "5582:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "5574:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5574:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "minETH",
												"nameLocation": "5603:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "5595:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5595:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5558:52:16"
									},
									"returnParameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5634:0:16"
									},
									"scope": 2991,
									"src": "5533:780:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2770,
										"nodeType": "Block",
										"src": "6406:554:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2695,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6424:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6428:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "6424:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6436:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6424:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6439:38:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															},
															"value": "ETH amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															}
														],
														"id": 2694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6416:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6416:62:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2701,
												"nodeType": "ExpressionStatement",
												"src": "6416:62:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2705,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2687,
																		"src": "6511:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2703,
																		"name": "cqtNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2088,
																		"src": "6496:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																			"typeString": "contract IERC721Upgradeable"
																		}
																	},
																	"id": 2704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6503:7:16",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 925,
																	"src": "6496:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2709,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6531:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																			"typeString": "contract CryptoQuestSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																			"typeString": "contract CryptoQuestSwap"
																		}
																	],
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6523:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2707,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6523:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6523:13:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6496:40:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654206e6f74206f776e656420627920636f6e7472616374",
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6538:27:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a",
																"typeString": "literal_string \"NFT not owned by contract\""
															},
															"value": "NFT not owned by contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a",
																"typeString": "literal_string \"NFT not owned by contract\""
															}
														],
														"id": 2702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6488:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6488:78:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2714,
												"nodeType": "ExpressionStatement",
												"src": "6488:78:16"
											},
											{
												"assignments": [
													2716
												],
												"declarations": [
													{
														"constant": false,
														"id": 2716,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "6585:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2770,
														"src": "6577:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6577:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2730,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2718,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6613:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6617:5:16",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6613:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2722,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6632:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																				"typeString": "contract CryptoQuestSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																				"typeString": "contract CryptoQuestSwap"
																			}
																		],
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6624:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2720,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6624:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6624:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6638:7:16",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "6624:21:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 2725,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6648:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6652:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "6648:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6624:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6659:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2717,
														"name": "getOutputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2883,
														"src": "6597:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6597:64:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6577:84:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2732,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "6708:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2733,
																"name": "minETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2689,
																"src": "6721:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6708:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520746f6c6572616e6365206578636565646564",
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6729:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															},
															"value": "Slippage tolerance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															}
														],
														"id": 2731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6700:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2737,
												"nodeType": "ExpressionStatement",
												"src": "6700:59:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2744,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2716,
															"src": "6799:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2740,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6778:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6782:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6778:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6770:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6770:8:16",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6770:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6790:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6770:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6770:39:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2746,
												"nodeType": "ExpressionStatement",
												"src": "6770:39:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2752,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6851:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																],
																"id": 2751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6843:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6843:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6843:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2754,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6858:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6862:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6858:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2756,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2687,
															"src": "6870:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2747,
															"name": "cqtNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "6819:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																"typeString": "contract IERC721Upgradeable"
															}
														},
														"id": 2749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6826:16:16",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "6819:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6819:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2758,
												"nodeType": "ExpressionStatement",
												"src": "6819:59:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6905:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6909:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6905:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2764,
																	"name": "cqtNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "6925:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																		"typeString": "contract IERC721Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																		"typeString": "contract IERC721Upgradeable"
																	}
																],
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6917:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6917:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6917:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2766,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2687,
															"src": "6934:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2767,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2716,
															"src": "6943:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2759,
														"name": "NFTSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "6894:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2769,
												"nodeType": "EmitStatement",
												"src": "6889:64:16"
											}
										]
									},
									"functionSelector": "49f0346e",
									"id": 2771,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2692,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2691,
												"name": "whenNotPaused",
												"nameLocations": [
													"6392:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "6392:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "6392:13:16"
										}
									],
									"name": "swapETHForNFT",
									"nameLocation": "6328:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6350:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "6342:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6342:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "minETH",
												"nameLocation": "6367:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "6359:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6341:33:16"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6406:0:16"
									},
									"scope": 2991,
									"src": "6319:641:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2842,
										"nodeType": "Block",
										"src": "7045:448:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2783,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "7078:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2781,
																		"name": "cqtNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2088,
																		"src": "7063:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																			"typeString": "contract IERC721Upgradeable"
																		}
																	},
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7070:7:16",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 925,
																	"src": "7063:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7063:23:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2785,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7090:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7094:6:16",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7090:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7063:37:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572206f66204e4654",
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7102:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721",
																"typeString": "literal_string \"Not owner of NFT\""
															},
															"value": "Not owner of NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721",
																"typeString": "literal_string \"Not owner of NFT\""
															}
														],
														"id": 2780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7055:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7055:66:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "7055:66:16"
											},
											{
												"assignments": [
													2792
												],
												"declarations": [
													{
														"constant": false,
														"id": 2792,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "7140:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2842,
														"src": "7132:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2791,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7132:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2802,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7168:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "31",
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7171:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2798,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7182:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																			"typeString": "contract CryptoQuestSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																			"typeString": "contract CryptoQuestSwap"
																		}
																	],
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7174:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2796,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7174:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7174:13:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7188:7:16",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7174:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2793,
														"name": "getOutputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2883,
														"src": "7152:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7152:44:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7132:64:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2804,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2792,
																"src": "7241:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2805,
																"name": "minETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "7254:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7241:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520746f6c6572616e6365206578636565646564",
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7262:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															},
															"value": "Slippage tolerance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															}
														],
														"id": 2803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7233:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7233:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2809,
												"nodeType": "ExpressionStatement",
												"src": "7233:59:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2813,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7327:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7331:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7327:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2817,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7347:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																],
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7339:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7339:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7339:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2819,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "7354:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2810,
															"name": "cqtNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "7303:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																"typeString": "contract IERC721Upgradeable"
															}
														},
														"id": 2812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7310:16:16",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "7303:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7303:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2821,
												"nodeType": "ExpressionStatement",
												"src": "7303:59:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2828,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "7401:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2824,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7380:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7384:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7380:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7372:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2822,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7372:8:16",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7372:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7392:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7372:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7372:39:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2830,
												"nodeType": "ExpressionStatement",
												"src": "7372:39:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2832,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7438:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7442:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7438:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2836,
																	"name": "cqtNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "7458:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																		"typeString": "contract IERC721Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																		"typeString": "contract IERC721Upgradeable"
																	}
																],
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7450:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7450:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7450:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2838,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "7467:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2839,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "7476:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2831,
														"name": "NFTSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "7427:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7427:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2841,
												"nodeType": "EmitStatement",
												"src": "7422:64:16"
											}
										]
									},
									"functionSelector": "d9a37ad2",
									"id": 2843,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2778,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2777,
												"name": "whenNotPaused",
												"nameLocations": [
													"7031:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "7031:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "7031:13:16"
										}
									],
									"name": "swapNFTForETH",
									"nameLocation": "6975:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6997:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "6989:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6989:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "minETH",
												"nameLocation": "7014:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "7006:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7006:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6988:33:16"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7045:0:16"
									},
									"scope": 2991,
									"src": "6966:527:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2882,
										"nodeType": "Block",
										"src": "7622:255:16",
										"statements": [
											{
												"assignments": [
													2855
												],
												"declarations": [
													{
														"constant": false,
														"id": 2855,
														"mutability": "mutable",
														"name": "inputAmountWithFee",
														"nameLocation": "7640:18:16",
														"nodeType": "VariableDeclaration",
														"scope": 2882,
														"src": "7632:26:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2854,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7632:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2862,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2856,
														"name": "inputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "7661:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030",
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7676:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2858,
																	"name": "FEE_RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "7683:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7676:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2860,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7675:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7661:31:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7632:60:16"
											},
											{
												"assignments": [
													2864
												],
												"declarations": [
													{
														"constant": false,
														"id": 2864,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "7710:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2882,
														"src": "7702:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7702:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2868,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2865,
														"name": "inputAmountWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "7722:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2866,
														"name": "outputReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2849,
														"src": "7743:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7722:34:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7702:54:16"
											},
											{
												"assignments": [
													2870
												],
												"declarations": [
													{
														"constant": false,
														"id": 2870,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "7774:11:16",
														"nodeType": "VariableDeclaration",
														"scope": 2882,
														"src": "7766:19:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2869,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2877,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2871,
																	"name": "inputReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "7789:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 2872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7804:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "7789:19:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2874,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7788:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2875,
														"name": "inputAmountWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "7812:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7788:42:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:64:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2878,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2864,
														"src": "7847:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2879,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2870,
														"src": "7859:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7847:23:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2853,
												"id": 2881,
												"nodeType": "Return",
												"src": "7840:30:16"
											}
										]
									},
									"id": 2883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOutputAmount",
									"nameLocation": "7508:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "inputAmount",
												"nameLocation": "7532:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "7524:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7524:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "inputReserve",
												"nameLocation": "7553:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "7545:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "outputReserve",
												"nameLocation": "7575:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "7567:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7567:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7523:66:16"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "7613:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7613:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7612:9:16"
									},
									"scope": 2991,
									"src": "7499:378:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 2892,
										"nodeType": "Block",
										"src": "7979:2:16",
										"statements": []
									},
									"id": 2893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2888,
													"name": "UPGRADER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2074,
													"src": "7955:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2889,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2887,
												"name": "onlyRole",
												"nameLocations": [
													"7946:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "7946:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "7946:23:16"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "7892:17:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2890,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7970:8:16"
									},
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "7918:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "7910:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7910:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7909:27:16"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7979:0:16"
									},
									"scope": 2991,
									"src": "7883:98:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2919,
										"nodeType": "Block",
										"src": "8119:123:16",
										"statements": [
											{
												"expression": {
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2905,
																"name": "liquidityPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "8129:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
																	"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
																}
															},
															"id": 2907,
															"indexExpression": {
																"id": 2906,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "8144:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8129:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
															}
														},
														"id": 2908,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8151:11:16",
														"memberName": "tokenAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2090,
														"src": "8129:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2909,
														"name": "newTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "8165:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8129:50:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2911,
												"nodeType": "ExpressionStatement",
												"src": "8129:50:16"
											},
											{
												"expression": {
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2912,
																"name": "liquidityPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "8189:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
																	"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
																}
															},
															"id": 2914,
															"indexExpression": {
																"id": 2913,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "8204:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8189:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
															}
														},
														"id": 2915,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8211:9:16",
														"memberName": "ethAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2092,
														"src": "8189:31:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2916,
														"name": "newEthAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2899,
														"src": "8223:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8189:46:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2918,
												"nodeType": "ExpressionStatement",
												"src": "8189:46:16"
											}
										]
									},
									"functionSelector": "c7088313",
									"id": 2920,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2902,
													"name": "LIQUIDITY_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2079,
													"src": "8095:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2903,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2901,
												"name": "onlyRole",
												"nameLocations": [
													"8086:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "8086:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "8086:32:16"
										}
									],
									"name": "updateLiquidityPool",
									"nameLocation": "7996:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8024:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "8016:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "newTokenAmount",
												"nameLocation": "8039:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "8031:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8031:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "newEthAmount",
												"nameLocation": "8063:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "8055:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8055:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8015:61:16"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8119:0:16"
									},
									"scope": 2991,
									"src": "7987:255:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2948,
										"nodeType": "Block",
										"src": "8323:127:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2931,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8349:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																				"typeString": "contract CryptoQuestSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																				"typeString": "contract CryptoQuestSwap"
																			}
																		],
																		"id": 2930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8341:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2929,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8341:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8341:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8355:7:16",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8341:21:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2934,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2922,
																"src": "8366:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8341:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 2936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8374:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 2928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8333:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8333:64:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2938,
												"nodeType": "ExpressionStatement",
												"src": "8333:64:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2945,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "8436:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2941,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8415:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8419:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8415:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8407:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2939,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8407:8:16",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8407:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8427:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8407:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8407:36:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2947,
												"nodeType": "ExpressionStatement",
												"src": "8407:36:16"
											}
										]
									},
									"functionSelector": "f14210a6",
									"id": 2949,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2925,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "8303:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2926,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2924,
												"name": "onlyRole",
												"nameLocations": [
													"8294:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "8294:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "8294:28:16"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "8257:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8277:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "8269:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8269:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8268:16:16"
									},
									"returnParameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8323:0:16"
									},
									"scope": 2991,
									"src": "8248:202:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2968,
										"nodeType": "Block",
										"src": "8549:70:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2963,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8593:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8597:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8593:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2965,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2953,
															"src": "8605:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2960,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2951,
																	"src": "8577:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2959,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "8559:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8559:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8584:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "8559:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8559:53:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2967,
												"nodeType": "ExpressionStatement",
												"src": "8559:53:16"
											}
										]
									},
									"functionSelector": "06b091f9",
									"id": 2969,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2956,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "8529:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2957,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2955,
												"name": "onlyRole",
												"nameLocations": [
													"8520:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "8520:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "8520:28:16"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "8465:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8488:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "8480:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8480:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8503:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "8495:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8495:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8479:31:16"
									},
									"returnParameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8549:0:16"
									},
									"scope": 2991,
									"src": "8456:163:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2989,
										"nodeType": "Block",
										"src": "8701:76:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2982,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8743:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																],
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8735:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2980,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8735:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8735:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2984,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8750:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8754:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8750:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2971,
															"src": "8762:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2977,
															"name": "cqtNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "8711:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																"typeString": "contract IERC721Upgradeable"
															}
														},
														"id": 2979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8718:16:16",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "8711:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8711:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2988,
												"nodeType": "ExpressionStatement",
												"src": "8711:59:16"
											}
										]
									},
									"functionSelector": "023245d7",
									"id": 2990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2974,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "8681:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2975,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2973,
												"name": "onlyRole",
												"nameLocations": [
													"8672:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "8672:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "8672:28:16"
										}
									],
									"name": "withdrawNFT",
									"nameLocation": "8634:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8654:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "8646:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8646:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8645:17:16"
									},
									"returnParameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8701:0:16"
									},
									"scope": 2991,
									"src": "8625:152:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2992,
							"src": "638:8141:16",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1077,
								1080,
								1276,
								1279,
								1394,
								1407,
								1685,
								1688
							],
							"usedEvents": [
								387,
								1069,
								1074,
								1288,
								1297,
								1306,
								1373,
								2116,
								2128,
								2138,
								2148
							]
						}
					],
					"src": "81:8699:16"
				},
				"id": 16
			}
		}
	}
}