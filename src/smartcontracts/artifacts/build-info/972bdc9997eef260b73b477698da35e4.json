{
	"id": "972bdc9997eef260b73b477698da35e4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\n/// @custom:security-contact jacquedegraff@creodamo.com\ncontract CryptoQuestTheShardsOfGenesisStaking is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n\n    struct Stake {\n        uint256 tokenId;\n        address owner;\n        uint256 stakeTime;\n        uint256 unstakeTime;\n        uint256 reward;\n        uint256 rarity;\n    }\n\n    mapping(uint256 => Stake) public stakes;\n    address public cqtToken;\n    address public cqnftToken;\n    address public cqnft1155Token;\n    uint256 public rewardRate;\n    uint256 public minimumStakingPeriod;\n\n    event Staked(uint256 tokenId, address owner, uint256 stakeTime);\n    event Unstaked(uint256 tokenId, address owner, uint256 unstakeTime, uint256 reward);\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(PAUSER_ROLE, msg.sender);\n        _grantRole(UPGRADER_ROLE, msg.sender);\n    }\n\n    function initialize(\n        address _cqtToken,\n        address _cqnftToken,\n        address _cqnft1155Token,\n        uint256 _rewardRate,\n        uint256 _minimumStakingPeriod\n    ) initializer public {\n        __AccessControl_init();\n        __Pausable_init();\n        __UUPSUpgradeable_init();\n\n        cqtToken = _cqtToken;\n        cqnftToken = _cqnftToken;\n        cqnft1155Token = _cqnft1155Token;\n        rewardRate = _rewardRate;\n        minimumStakingPeriod = _minimumStakingPeriod;\n    }\n\n    function stake(uint256 _tokenId, uint256 _rarity) public whenNotPaused {\n        require(\n            IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == msg.sender ||\n            IERC1155Upgradeable(cqnft1155Token).balanceOf(msg.sender, _tokenId) > 0,\n            \"Not the owner of the token\"\n        );\n        require(stakes[_tokenId].tokenId == 0, \"Token already staked\");\n\n        stakes[_tokenId] = Stake({\n            tokenId: _tokenId,\n            owner: msg.sender,\n            stakeTime: block.timestamp,\n            unstakeTime: 0,\n            reward: 0,\n            rarity: _rarity\n        });\n\n        if (IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == msg.sender) {\n            IERC721Upgradeable(cqnftToken).transferFrom(msg.sender, address(this), _tokenId);\n        } else {\n            IERC1155Upgradeable(cqnft1155Token).safeTransferFrom(msg.sender, address(this), _tokenId, 1, \"\");\n        }\n\n        emit Staked(_tokenId, msg.sender, block.timestamp);\n    }\n\n    function stakeBatch(uint256[] calldata _tokenIds, uint256[] calldata _rarities) public whenNotPaused {\n        require(_tokenIds.length == _rarities.length, \"Token IDs and rarities length mismatch\");\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\n            stake(_tokenIds[i], _rarities[i]);\n        }\n    }\n\n    function unstake(uint256 _tokenId) public whenNotPaused {\n        require(stakes[_tokenId].owner == msg.sender, \"Not the owner of the stake\");\n        require(stakes[_tokenId].unstakeTime == 0, \"Token already unstaked\");\n\n        uint256 stakingPeriod = block.timestamp - stakes[_tokenId].stakeTime;\n        require(stakingPeriod >= minimumStakingPeriod, \"Staking period not met\");\n\n        stakes[_tokenId].unstakeTime = block.timestamp;\n        stakes[_tokenId].reward = (stakingPeriod * rewardRate * stakes[_tokenId].rarity) / 1e18; // Reward based on rarity\n\n        IERC20Upgradeable(cqtToken).transfer(msg.sender, stakes[_tokenId].reward);\n\n        if (IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == address(this)) {\n            IERC721Upgradeable(cqnftToken).transferFrom(address(this), msg.sender, _tokenId);\n        } else {\n            IERC1155Upgradeable(cqnft1155Token).safeTransferFrom(address(this), msg.sender, _tokenId, 1, \"\");\n        }\n\n        delete stakes[_tokenId];\n\n        emit Unstaked(_tokenId, msg.sender, block.timestamp, stakes[_tokenId].reward);\n    }\n\n    function _authorizeUpgrade(address) internal override onlyRole(UPGRADER_ROLE) {}\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 925,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol": {
				"IERC1155Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":\"IERC1155Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"IERC721Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol": {
				"CryptoQuestTheShardsOfGenesisStaking": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeTime",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakeTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cqnft1155Token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cqnftToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cqtToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cqtToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_cqnftToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_cqnft1155Token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minimumStakingPeriod",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimumStakingPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rarity",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_tokenIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_rarities",
									"type": "uint256[]"
								}
							],
							"name": "stakeBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stakeTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unstakeTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rarity",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "jacquedegraff@creodamo.com",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":725:4710  contract CryptoQuestTheShardsOfGenesisStaking is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1549:1714  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1573:1615  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n  0x00\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1604:1614  msg.sender */\n  caller\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1573:1583  _grantRole */\n  tag_5\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1573:1615  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_4:\n  pop\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1625:1660  _grantRole(PAUSER_ROLE, msg.sender) */\n  tag_6\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":896:920  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1649:1659  msg.sender */\n  caller\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1625:1635  _grantRole */\n  tag_5\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1625:1660  _grantRole(PAUSER_ROLE, msg.sender) */\n  jump\t// in\ntag_6:\n  pop\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1670:1707  _grantRole(UPGRADER_ROLE, msg.sender) */\n  tag_7\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":966:992  keccak256(\"UPGRADER_ROLE\") */\n  0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1696:1706  msg.sender */\n  caller\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1670:1680  _grantRole */\n  tag_5\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1670:1707  _grantRole(UPGRADER_ROLE, msg.sender) */\n  jump\t// in\ntag_7:\n  pop\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":725:4710  contract CryptoQuestTheShardsOfGenesisStaking is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2920:2948  AccessControlStorageLocation */\n  0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n  dup7\n  and\n  dup6\n  mstore\n  swap1\n  swap2\n  mstore\n  dup3\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup3\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n  dup8\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n  0x01\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n  tag_15\n    /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\ntag_15:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n  dup6\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n  0x01\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n  swap2\n  pop\n  pop\n  jump(tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_9:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":725:4710  contract CryptoQuestTheShardsOfGenesisStaking is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\ntag_8:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":725:4710  contract CryptoQuestTheShardsOfGenesisStaking is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0a47ee\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd0f7d24f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd5a44f86\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf72c0d8b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x7b0a47ee\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7ebed54c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8172885b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa6b63eb8\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x36568abe\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4d9a824d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x34aab064\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":874:899   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":862:864   */\n      0x20\n        /* \"#utility.yul\":847:865   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_33\n        /* \"#utility.yul\":728:905   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3536:4622  function unstake(uint256 _tokenId) public whenNotPaused {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_43\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1222:1245  address public cqtToken */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      sload(0x33)\n      tag_53\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_53:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1813:1845   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1795:1846   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1783:1785   */\n      0x20\n        /* \"#utility.yul\":1768:1786   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1222:1245  address public cqtToken */\n      tag_33\n        /* \"#utility.yul\":1649:1852   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_43\n      tag_59\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1251:1276  address public cqnftToken */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      sload(0x34)\n      tag_53\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_9:\n      tag_43\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_36\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      jump(tag_29)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2223:3205  function stake(uint256 _tokenId, uint256 _rarity) public whenNotPaused {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_43\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1317:1342  uint256 public rewardRate */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_36\n      sload(0x36)\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1348:1383  uint256 public minimumStakingPeriod */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_36\n      sload(0x37)\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1282:1311  address public cqnft1155Token */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      sload(0x35)\n      tag_53\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_29\n      tag_97\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_36\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1720:2217  function initialize(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_43\n      tag_106\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_110:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3211:3530  function stakeBatch(uint256[] calldata _tokenIds, uint256[] calldata _rarities) public whenNotPaused {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_43\n      tag_116\n      calldatasize\n      0x04\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_43\n      tag_121\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1177:1216  mapping(uint256 => Stake) public stakes */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_125:\n      mstore(0x20, 0x32)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      swap1\n      swap6\n      add\n      sload\n      swap4\n      swap5\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      dup7\n      jump\n    tag_124:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6237:6262   */\n      swap7\n      dup8\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6298:6330   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":6293:6295   */\n      0x20\n        /* \"#utility.yul\":6278:6296   */\n      dup8\n      add\n        /* \"#utility.yul\":6271:6331   */\n      mstore\n        /* \"#utility.yul\":6347:6365   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":6340:6374   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6405:6407   */\n      0x60\n        /* \"#utility.yul\":6390:6408   */\n      dup5\n      add\n        /* \"#utility.yul\":6383:6417   */\n      mstore\n        /* \"#utility.yul\":6448:6451   */\n      0x80\n        /* \"#utility.yul\":6433:6452   */\n      dup4\n      add\n        /* \"#utility.yul\":6426:6461   */\n      mstore\n        /* \"#utility.yul\":6318:6321   */\n      0xa0\n        /* \"#utility.yul\":6477:6496   */\n      dup3\n      add\n        /* \"#utility.yul\":6470:6505   */\n      mstore\n        /* \"#utility.yul\":6224:6227   */\n      0xc0\n        /* \"#utility.yul\":6209:6228   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1177:1216  mapping(uint256 => Stake) public stakes */\n      tag_33\n        /* \"#utility.yul\":5950:6511   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":858:920  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_36\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":896:920  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":858:920  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":926:992  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_36\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":966:992  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":926:992  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_139\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1173  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      swap1\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3536:4622  function unstake(uint256 _tokenId) public whenNotPaused {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_145:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3610:3626  stakes[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3610:3616  stakes */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3610:3626  stakes[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3610:3632  stakes[_tokenId].owner */\n      0x01\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3636:3646  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3610:3646  stakes[_tokenId].owner == msg.sender */\n      eq\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3602:3677  require(stakes[_tokenId].owner == msg.sender, \"Not the owner of the stake\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6718:6720   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3602:3677  require(stakes[_tokenId].owner == msg.sender, \"Not the owner of the stake\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6700:6721   */\n      mstore\n        /* \"#utility.yul\":6757:6759   */\n      0x1a\n        /* \"#utility.yul\":6737:6755   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6730:6760   */\n      mstore\n        /* \"#utility.yul\":6796:6824   */\n      0x4e6f7420746865206f776e6572206f6620746865207374616b65000000000000\n        /* \"#utility.yul\":6776:6794   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6769:6825   */\n      mstore\n        /* \"#utility.yul\":6842:6860   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3602:3677  require(stakes[_tokenId].owner == msg.sender, \"Not the owner of the stake\") */\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3695:3711  stakes[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3695:3701  stakes */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3695:3711  stakes[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3695:3723  stakes[_tokenId].unstakeTime */\n      0x03\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3695:3728  stakes[_tokenId].unstakeTime == 0 */\n      iszero\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3687:3755  require(stakes[_tokenId].unstakeTime == 0, \"Token already unstaked\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7073:7075   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3687:3755  require(stakes[_tokenId].unstakeTime == 0, \"Token already unstaked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7055:7076   */\n      mstore\n        /* \"#utility.yul\":7112:7114   */\n      0x16\n        /* \"#utility.yul\":7092:7110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7085:7115   */\n      mstore\n      shl(0x52, 0x151bdad95b88185b1c9958591e481d5b9cdd185ad959)\n        /* \"#utility.yul\":7131:7149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7124:7176   */\n      mstore\n        /* \"#utility.yul\":7193:7211   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3687:3755  require(stakes[_tokenId].unstakeTime == 0, \"Token already unstaked\") */\n      tag_149\n        /* \"#utility.yul\":6871:7217   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3687:3755  require(stakes[_tokenId].unstakeTime == 0, \"Token already unstaked\") */\n    tag_151:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3766:3787  uint256 stakingPeriod */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3808:3824  stakes[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3808:3814  stakes */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3808:3824  stakes[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3808:3834  stakes[_tokenId].stakeTime */\n      0x02\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3790:3834  block.timestamp - stakes[_tokenId].stakeTime */\n      tag_154\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3790:3805  block.timestamp */\n      timestamp\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3790:3834  block.timestamp - stakes[_tokenId].stakeTime */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3766:3834  uint256 stakingPeriod = block.timestamp - stakes[_tokenId].stakeTime */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3869:3889  minimumStakingPeriod */\n      sload(0x37)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3852:3865  stakingPeriod */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3852:3889  stakingPeriod >= minimumStakingPeriod */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3844:3916  require(stakingPeriod >= minimumStakingPeriod, \"Staking period not met\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7689:7691   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3844:3916  require(stakingPeriod >= minimumStakingPeriod, \"Staking period not met\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7671:7692   */\n      mstore\n        /* \"#utility.yul\":7728:7730   */\n      0x16\n        /* \"#utility.yul\":7708:7726   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7701:7731   */\n      mstore\n      shl(0x52, 0x14dd185ada5b99c81c195c9a5bd9081b9bdd081b595d)\n        /* \"#utility.yul\":7747:7765   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7740:7792   */\n      mstore\n        /* \"#utility.yul\":7809:7827   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3844:3916  require(stakingPeriod >= minimumStakingPeriod, \"Staking period not met\") */\n      tag_149\n        /* \"#utility.yul\":7487:7833   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3844:3916  require(stakingPeriod >= minimumStakingPeriod, \"Staking period not met\") */\n    tag_156:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3927:3943  stakes[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3927:3933  stakes */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3927:3943  stakes[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3958:3973  block.timestamp */\n      timestamp\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3927:3955  stakes[_tokenId].unstakeTime */\n      0x03\n      dup3\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3927:3973  stakes[_tokenId].unstakeTime = block.timestamp */\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4039:4062  stakes[_tokenId].rarity */\n      0x05\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4026:4036  rewardRate */\n      sload(0x36)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4066:4070  1e18 */\n      0x0de0b6b3a7640000\n      swap2\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4039:4062  stakes[_tokenId].rarity */\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4010:4036  stakingPeriod * rewardRate */\n      tag_159\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4010:4023  stakingPeriod */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4010:4036  stakingPeriod * rewardRate */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4010:4062  stakingPeriod * rewardRate * stakes[_tokenId].rarity */\n      tag_161\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_161:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4009:4070  (stakingPeriod * rewardRate * stakes[_tokenId].rarity) / 1e18 */\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3983:3999  stakes[_tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3983:3989  stakes */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3983:3999  stakes[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3983:4006  stakes[_tokenId].reward */\n      0x04\n      swap1\n      dup2\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3983:4070  stakes[_tokenId].reward = (stakingPeriod * rewardRate * stakes[_tokenId].rarity) / 1e18 */\n      dup4\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4125:4133  cqtToken */\n      sload(0x33)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4107:4180  IERC20Upgradeable(cqtToken).transfer(msg.sender, stakes[_tokenId].reward) */\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4144:4154  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4107:4180  IERC20Upgradeable(cqtToken).transfer(msg.sender, stakes[_tokenId].reward) */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":8407:8458   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8474:8492   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8467:8501   */\n      swap3\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4125:4133  cqtToken */\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4107:4143  IERC20Upgradeable(cqtToken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":8380:8398   */\n      0x44\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4107:4180  IERC20Upgradeable(cqtToken).transfer(msg.sender, stakes[_tokenId].reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4214:4224  cqnftToken */\n      sload(0x34)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4195:4243  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":874:899   */\n      dup5\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4255:4259  this */\n      address\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4214:4224  cqnftToken */\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4195:4233  IERC721Upgradeable(cqnftToken).ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":847:865   */\n      0x24\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4195:4243  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4195:4260  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == address(this) */\n      and\n      sub\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4191:4494  if (IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == address(this)) {... */\n      tag_175\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4295:4305  cqnftToken */\n      sload(0x34)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4276:4356  IERC721Upgradeable(cqnftToken).transferFrom(address(this), msg.sender, _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4328:4332  this */\n      address\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4276:4356  IERC721Upgradeable(cqnftToken).transferFrom(address(this), msg.sender, _tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9252:9303   */\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4335:4345  msg.sender */\n      caller\n        /* \"#utility.yul\":9319:9337   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9312:9372   */\n      mstore\n        /* \"#utility.yul\":9388:9406   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":9381:9415   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4295:4305  cqnftToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4276:4319  IERC721Upgradeable(cqnftToken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":9225:9243   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4276:4356  IERC721Upgradeable(cqnftToken).transferFrom(address(this), msg.sender, _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4191:4494  if (IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == address(this)) {... */\n      jump(tag_181)\n    tag_175:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4407:4421  cqnft1155Token */\n      sload(0x35)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4387:4483  IERC1155Upgradeable(cqnft1155Token).safeTransferFrom(address(this), msg.sender, _tokenId, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4407:4421  cqnft1155Token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4387:4439  IERC1155Upgradeable(cqnft1155Token).safeTransferFrom */\n      0xf242432a\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4387:4483  IERC1155Upgradeable(cqnft1155Token).safeTransferFrom(address(this), msg.sender, _tokenId, 1, \"\") */\n      tag_182\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4448:4452  this */\n      address\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4455:4465  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4467:4475  _tokenId */\n      dup8\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4407:4421  cqnft1155Token */\n      0x01\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4387:4483  IERC1155Upgradeable(cqnft1155Token).safeTransferFrom(address(this), msg.sender, _tokenId, 1, \"\") */\n      0x04\n      add\n      tag_183\n      jump\t// in\n    tag_182:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4191:4494  if (IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == address(this)) {... */\n    tag_181:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4511:4527  stakes[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4511:4517  stakes */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4511:4527  stakes[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4504:4527  delete stakes[_tokenId] */\n      dup4\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      0x02\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x03\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x04\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x05\n      add\n      dup4\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4543:4615  Unstaked(_tokenId, msg.sender, block.timestamp, stakes[_tokenId].reward) */\n      dup1\n      mload\n        /* \"#utility.yul\":10293:10318   */\n      dup6\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4562:4572  msg.sender */\n      caller\n        /* \"#utility.yul\":10334:10352   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":10327:10387   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4574:4589  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":10403:10421   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10396:10430   */\n      mstore\n        /* \"#utility.yul\":10461:10463   */\n      0x60\n        /* \"#utility.yul\":10446:10464   */\n      dup2\n      add\n        /* \"#utility.yul\":10439:10473   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4543:4615  Unstaked(_tokenId, msg.sender, block.timestamp, stakes[_tokenId].reward) */\n      0xffdaf13b1d96bfc2213355f353f84c19493e0681eb0df26f83d862acd266750a\n      swap1\n        /* \"#utility.yul\":10280:10283   */\n      0x80\n        /* \"#utility.yul\":10265:10284   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4543:4615  Unstaked(_tokenId, msg.sender, block.timestamp, stakes[_tokenId].reward) */\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3592:4622  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3536:4622  function unstake(uint256 _tokenId) public whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_39\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n    tag_194:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_201\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_200:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_68:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_211:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2223:3205  function stake(uint256 _tokenId, uint256 _rarity) public whenNotPaused {... */\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_216:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2344:2354  cqnftToken */\n      sload(0x34)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2325:2373  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":874:899   */\n      dup5\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2377:2387  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2344:2354  cqnftToken */\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2325:2363  IERC721Upgradeable(cqnftToken).ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":847:865   */\n      0x24\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2325:2373  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2325:2387  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == msg.sender */\n      and\n      eq\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2325:2474  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == msg.sender ||... */\n      dup1\n      tag_222\n      jumpi\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2423:2437  cqnft1155Token */\n      sload(0x35)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2403:2470  IERC1155Upgradeable(cqnft1155Token).balanceOf(msg.sender, _tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x7eeac7)\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2449:2459  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2403:2470  IERC1155Upgradeable(cqnft1155Token).balanceOf(msg.sender, _tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8407:8458   */\n      mstore\n        /* \"#utility.yul\":8474:8492   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8467:8501   */\n      dup5\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2473:2474  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2423:2437  cqnft1155Token */\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2403:2448  IERC1155Upgradeable(cqnft1155Token).balanceOf */\n      0xfdd58e\n      swap1\n        /* \"#utility.yul\":8380:8398   */\n      0x44\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2403:2470  IERC1155Upgradeable(cqnft1155Token).balanceOf(msg.sender, _tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_226\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2403:2474  IERC1155Upgradeable(cqnft1155Token).balanceOf(msg.sender, _tokenId) > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2325:2474  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == msg.sender ||... */\n    tag_222:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2304:2526  require(... */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10875:10877   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2304:2526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10857:10878   */\n      mstore\n        /* \"#utility.yul\":10914:10916   */\n      0x1a\n        /* \"#utility.yul\":10894:10912   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10887:10917   */\n      mstore\n        /* \"#utility.yul\":10953:10981   */\n      0x4e6f7420746865206f776e6572206f662074686520746f6b656e000000000000\n        /* \"#utility.yul\":10933:10951   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10926:10982   */\n      mstore\n        /* \"#utility.yul\":10999:11017   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2304:2526  require(... */\n      tag_149\n        /* \"#utility.yul\":10673:11023   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2304:2526  require(... */\n    tag_228:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2544:2560  stakes[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2544:2550  stakes */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2544:2560  stakes[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2544:2568  stakes[_tokenId].tokenId */\n      sload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2544:2573  stakes[_tokenId].tokenId == 0 */\n      iszero\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2536:2598  require(stakes[_tokenId].tokenId == 0, \"Token already staked\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11230:11232   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2536:2598  require(stakes[_tokenId].tokenId == 0, \"Token already staked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11212:11233   */\n      mstore\n        /* \"#utility.yul\":11269:11271   */\n      0x14\n        /* \"#utility.yul\":11249:11267   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11242:11272   */\n      mstore\n      shl(0x62, 0x151bdad95b88185b1c9958591e481cdd185ad959)\n        /* \"#utility.yul\":11288:11306   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11281:11331   */\n      mstore\n        /* \"#utility.yul\":11348:11366   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2536:2598  require(stakes[_tokenId].tokenId == 0, \"Token already staked\") */\n      tag_149\n        /* \"#utility.yul\":11028:11372   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2536:2598  require(stakes[_tokenId].tokenId == 0, \"Token already staked\") */\n    tag_231:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2628:2827  Stake({... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      dup4\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2686:2696  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2628:2827  Stake({... */\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2721:2736  block.timestamp */\n      timestamp\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2628:2827  Stake({... */\n      dup5\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n      0x00\n      0x60\n      dup7\n      add\n      dup2\n      dup2\n      mstore\n      0x80\n      dup8\n      add\n      dup3\n      dup2\n      mstore\n      0xa0\n      dup9\n      add\n      dup11\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2609:2625  stakes[_tokenId] */\n      dup12\n      dup5\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2609:2615  stakes */\n      0x32\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2609:2625  stakes[_tokenId] */\n      swap1\n      swap7\n      mstore\n      swap2\n      dup9\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2609:2827  stakes[_tokenId] = Stake({... */\n      swap7\n      mload\n      dup8\n      sstore\n      swap3\n      mload\n      0x01\n      dup8\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n      swap2\n      mload\n      0x02\n      dup8\n      add\n      sstore\n      swap2\n      mload\n      0x03\n      dup7\n      add\n      sstore\n      swap1\n      mload\n      0x04\n      dup1\n      dup7\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      swap2\n      mload\n      0x05\n      swap1\n      swap5\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2861:2871  cqnftToken */\n      sload(0x34)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2842:2890  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) */\n      swap4\n      mload\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":874:899   */\n      dup7\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2686:2696  msg.sender */\n      swap1\n      swap3\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2861:2871  cqnftToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2842:2880  IERC721Upgradeable(cqnftToken).ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":847:865   */\n      0x24\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2842:2890  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2842:2904  IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == msg.sender */\n      and\n      sub\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2838:3138  if (IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == msg.sender) {... */\n      tag_238\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2939:2949  cqnftToken */\n      sload(0x34)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2920:3000  IERC721Upgradeable(cqnftToken).transferFrom(msg.sender, address(this), _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2964:2974  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2920:3000  IERC721Upgradeable(cqnftToken).transferFrom(msg.sender, address(this), _tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9252:9303   */\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2984:2988  this */\n      address\n        /* \"#utility.yul\":9319:9337   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9312:9372   */\n      mstore\n        /* \"#utility.yul\":9388:9406   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":9381:9415   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2939:2949  cqnftToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2920:2963  IERC721Upgradeable(cqnftToken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":9225:9243   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2920:3000  IERC721Upgradeable(cqnftToken).transferFrom(msg.sender, address(this), _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_242\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_242:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2838:3138  if (IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == msg.sender) {... */\n      jump(tag_243)\n    tag_238:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3051:3065  cqnft1155Token */\n      sload(0x35)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3031:3127  IERC1155Upgradeable(cqnft1155Token).safeTransferFrom(msg.sender, address(this), _tokenId, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3051:3065  cqnft1155Token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3031:3083  IERC1155Upgradeable(cqnft1155Token).safeTransferFrom */\n      0xf242432a\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3031:3127  IERC1155Upgradeable(cqnft1155Token).safeTransferFrom(msg.sender, address(this), _tokenId, 1, \"\") */\n      tag_244\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3084:3094  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3104:3108  this */\n      address\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3111:3119  _tokenId */\n      dup8\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3051:3065  cqnft1155Token */\n      0x01\n      swap1\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3031:3127  IERC1155Upgradeable(cqnft1155Token).safeTransferFrom(msg.sender, address(this), _tokenId, 1, \"\") */\n      0x04\n      add\n      tag_183\n      jump\t// in\n    tag_244:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_245\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_245:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2838:3138  if (IERC721Upgradeable(cqnftToken).ownerOf(_tokenId) == msg.sender) {... */\n    tag_243:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3153:3198  Staked(_tokenId, msg.sender, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11579:11604   */\n      dup4\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3170:3180  msg.sender */\n      caller\n        /* \"#utility.yul\":11635:11637   */\n      0x20\n        /* \"#utility.yul\":11620:11638   */\n      dup3\n      add\n        /* \"#utility.yul\":11613:11673   */\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3182:3197  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":11689:11707   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":11682:11716   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3153:3198  Staked(_tokenId, msg.sender, block.timestamp) */\n      0x18dcd430020e4d4899772fd94a8b40451dc5044dfb70bc46b532eeae431c864f\n      swap1\n        /* \"#utility.yul\":11567:11569   */\n      0x60\n        /* \"#utility.yul\":11552:11570   */\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3153:3198  Staked(_tokenId, msg.sender, block.timestamp) */\n      tag_187\n        /* \"#utility.yul\":11377:11722   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      swap2\n      dup3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1720:2217  function initialize(... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_255\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_256\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_257\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_259:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1932:1954  __AccessControl_init() */\n      tag_261\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1932:1952  __AccessControl_init */\n      tag_262\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1932:1954  __AccessControl_init() */\n      jump\t// in\n    tag_261:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1964:1981  __Pausable_init() */\n      tag_263\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1964:1979  __Pausable_init */\n      tag_264\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1964:1981  __Pausable_init() */\n      jump\t// in\n    tag_263:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1991:2015  __UUPSUpgradeable_init() */\n      tag_265\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1991:2013  __UUPSUpgradeable_init */\n      tag_262\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1991:2015  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_265:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2026:2034  cqtToken */\n      0x33\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2026:2046  cqtToken = _cqtToken */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup14\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2056:2066  cqnftToken */\n      0x34\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2056:2080  cqnftToken = _cqnftToken */\n      dup1\n      sload\n      dup13\n      dup5\n      and\n      swap1\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2090:2104  cqnft1155Token */\n      0x35\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2090:2122  cqnft1155Token = _cqnft1155Token */\n      dup1\n      sload\n      swap3\n      dup12\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2132:2142  rewardRate */\n      0x36\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2132:2156  rewardRate = _rewardRate */\n      dup8\n      swap1\n      sstore\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2166:2186  minimumStakingPeriod */\n      0x37\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":2166:2210  minimumStakingPeriod = _minimumStakingPeriod */\n      dup7\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":11880:11930   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":11868:11870   */\n      0x20\n        /* \"#utility.yul\":11853:11871   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":1720:2217  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3211:3530  function stakeBatch(uint256[] calldata _tokenIds, uint256[] calldata _rarities) public whenNotPaused {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_271:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3330:3366  _tokenIds.length == _rarities.length */\n      dup3\n      dup2\n      eq\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3322:3409  require(_tokenIds.length == _rarities.length, \"Token IDs and rarities length mismatch\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12143:12145   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3322:3409  require(_tokenIds.length == _rarities.length, \"Token IDs and rarities length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12125:12146   */\n      mstore\n        /* \"#utility.yul\":12182:12184   */\n      0x26\n        /* \"#utility.yul\":12162:12180   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12155:12185   */\n      mstore\n        /* \"#utility.yul\":12221:12255   */\n      0x546f6b656e2049447320616e64207261726974696573206c656e677468206d69\n        /* \"#utility.yul\":12201:12219   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12194:12256   */\n      mstore\n      shl(0xd3, 0x0e6dac2e8c6d)\n        /* \"#utility.yul\":12272:12290   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12265:12301   */\n      mstore\n        /* \"#utility.yul\":12318:12337   */\n      0x84\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3322:3409  require(_tokenIds.length == _rarities.length, \"Token IDs and rarities length mismatch\") */\n      tag_149\n        /* \"#utility.yul\":11941:12343   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3322:3409  require(_tokenIds.length == _rarities.length, \"Token IDs and rarities length mismatch\") */\n    tag_273:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3424:3433  uint256 i */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3419:3524  for (uint256 i = 0; i < _tokenIds.length; i++) {... */\n    tag_276:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3439:3459  i < _tokenIds.length */\n      dup4\n      dup2\n      lt\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3419:3524  for (uint256 i = 0; i < _tokenIds.length; i++) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3480:3513  stake(_tokenIds[i], _rarities[i]) */\n      tag_279\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3486:3495  _tokenIds */\n      dup6\n      dup6\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3496:3497  i */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3486:3498  _tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_281\n      jumpi\n      tag_281\n      tag_282\n      jump\t// in\n    tag_281:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3500:3509  _rarities */\n      dup5\n      dup5\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3510:3511  i */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3500:3512  _rarities[i] */\n      dup2\n      dup2\n      lt\n      tag_284\n      jumpi\n      tag_284\n      tag_282\n      jump\t// in\n    tag_284:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3480:3485  stake */\n      tag_81\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3480:3513  stake(_tokenIds[i], _rarities[i]) */\n      jump\t// in\n    tag_279:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3461:3464  i++ */\n      0x01\n      add\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3419:3524  for (uint256 i = 0; i < _tokenIds.length; i++) {... */\n      jump(tag_276)\n    tag_277:\n      pop\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":3211:3530  function stakeBatch(uint256[] calldata _tokenIds, uint256[] calldata _rarities) public whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_39\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_287\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_201\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12682:12684   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12664:12685   */\n      mstore\n        /* \"#utility.yul\":12721:12723   */\n      0x10\n        /* \"#utility.yul\":12701:12719   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12694:12724   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":12740:12758   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12733:12779   */\n      mstore\n        /* \"#utility.yul\":12796:12814   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_149\n        /* \"#utility.yul\":12480:12820   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_300\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_303\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_305\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_139)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n      jump(tag_139)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7970:7974  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      tag_310\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8067:8071  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8073:8080  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8066  hasRole */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8055:8274  if (hasRole(role, account)) {... */\n      iszero\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8128  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8136  $._roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup8\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8216:8220  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8209:8220  return true */\n      swap2\n      pop\n      pop\n      jump(tag_139)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_315\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_316\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_315:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":4628:4708  function _authorizeUpgrade(address) internal override onlyRole(UPGRADER_ROLE) {} */\n    tag_207:\n        /* \"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":966:992  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_323\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_324\n      swap2\n      dup2\n      add\n      swap1\n      tag_227\n      jump\t// in\n    tag_324:\n      0x01\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1813:1845   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1795:1846   */\n      mstore\n        /* \"#utility.yul\":1768:1786   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_149\n        /* \"#utility.yul\":1649:1852   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_326:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":874:899   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":847:865   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_149\n        /* \"#utility.yul\":728:905   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_344\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_347\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8425:8457   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8407:8458   */\n      mstore\n        /* \"#utility.yul\":8474:8492   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8467:8501   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8380:8398   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      tag_149\n        /* \"#utility.yul\":8233:8507   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_360\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_361\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_200\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_364\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_208\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_367\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_347:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_373\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1813:1845   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1795:1846   */\n      mstore\n        /* \"#utility.yul\":1768:1786   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_149\n        /* \"#utility.yul\":1649:1852   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_377:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_381\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n    tag_381:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_385\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_384)\n    tag_385:\n      0x60\n      swap2\n      pop\n    tag_384:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_386\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_387\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_386:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_387:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_393\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_394\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_395\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_396)\n    tag_393:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_397\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_397:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_398\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1813:1845   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1795:1846   */\n      mstore\n        /* \"#utility.yul\":1768:1786   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_149\n        /* \"#utility.yul\":1649:1852   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_398:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_396:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_401\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:300   */\n    tag_31:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_409:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:723   */\n    tag_38:\n        /* \"#utility.yul\":556:562   */\n      0x00\n        /* \"#utility.yul\":609:611   */\n      0x20\n        /* \"#utility.yul\":597:606   */\n      dup3\n        /* \"#utility.yul\":588:595   */\n      dup5\n        /* \"#utility.yul\":584:607   */\n      sub\n        /* \"#utility.yul\":580:612   */\n      slt\n        /* \"#utility.yul\":577:629   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":622:623   */\n      dup1\n        /* \"#utility.yul\":615:627   */\n      revert\n        /* \"#utility.yul\":577:629   */\n    tag_413:\n      pop\n        /* \"#utility.yul\":670:693   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":497:723   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1141:1272   */\n    tag_403:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1216:1247   */\n      dup2\n      and\n        /* \"#utility.yul\":1206:1248   */\n      dup2\n      eq\n        /* \"#utility.yul\":1196:1266   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":1262:1263   */\n      0x00\n        /* \"#utility.yul\":1259:1260   */\n      dup1\n        /* \"#utility.yul\":1252:1264   */\n      revert\n        /* \"#utility.yul\":1277:1644   */\n    tag_50:\n        /* \"#utility.yul\":1345:1351   */\n      0x00\n        /* \"#utility.yul\":1353:1359   */\n      dup1\n        /* \"#utility.yul\":1406:1408   */\n      0x40\n        /* \"#utility.yul\":1394:1403   */\n      dup4\n        /* \"#utility.yul\":1385:1392   */\n      dup6\n        /* \"#utility.yul\":1381:1404   */\n      sub\n        /* \"#utility.yul\":1377:1409   */\n      slt\n        /* \"#utility.yul\":1374:1426   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1419:1420   */\n      dup1\n        /* \"#utility.yul\":1412:1424   */\n      revert\n        /* \"#utility.yul\":1374:1426   */\n    tag_420:\n        /* \"#utility.yul\":1467:1490   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1566:1568   */\n      0x20\n        /* \"#utility.yul\":1551:1569   */\n      dup4\n      add\n        /* \"#utility.yul\":1538:1570   */\n      calldataload\n        /* \"#utility.yul\":1579:1612   */\n      tag_421\n        /* \"#utility.yul\":1538:1570   */\n      dup2\n        /* \"#utility.yul\":1579:1612   */\n      tag_403\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":1631:1638   */\n      dup1\n        /* \"#utility.yul\":1621:1638   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1277:1644   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1857:1984   */\n    tag_404:\n        /* \"#utility.yul\":1918:1928   */\n      0x4e487b71\n        /* \"#utility.yul\":1913:1916   */\n      0xe0\n        /* \"#utility.yul\":1909:1929   */\n      shl\n        /* \"#utility.yul\":1906:1907   */\n      0x00\n        /* \"#utility.yul\":1899:1930   */\n      mstore\n        /* \"#utility.yul\":1949:1953   */\n      0x41\n        /* \"#utility.yul\":1946:1947   */\n      0x04\n        /* \"#utility.yul\":1939:1954   */\n      mstore\n        /* \"#utility.yul\":1973:1977   */\n      0x24\n        /* \"#utility.yul\":1970:1971   */\n      0x00\n        /* \"#utility.yul\":1963:1978   */\n      revert\n        /* \"#utility.yul\":1989:3068   */\n    tag_67:\n        /* \"#utility.yul\":2066:2072   */\n      0x00\n        /* \"#utility.yul\":2074:2080   */\n      dup1\n        /* \"#utility.yul\":2127:2129   */\n      0x40\n        /* \"#utility.yul\":2115:2124   */\n      dup4\n        /* \"#utility.yul\":2106:2113   */\n      dup6\n        /* \"#utility.yul\":2102:2125   */\n      sub\n        /* \"#utility.yul\":2098:2130   */\n      slt\n        /* \"#utility.yul\":2095:2147   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":2143:2144   */\n      0x00\n        /* \"#utility.yul\":2140:2141   */\n      dup1\n        /* \"#utility.yul\":2133:2145   */\n      revert\n        /* \"#utility.yul\":2095:2147   */\n    tag_425:\n        /* \"#utility.yul\":2182:2191   */\n      dup3\n        /* \"#utility.yul\":2169:2192   */\n      calldataload\n        /* \"#utility.yul\":2201:2232   */\n      tag_426\n        /* \"#utility.yul\":2226:2231   */\n      dup2\n        /* \"#utility.yul\":2201:2232   */\n      tag_403\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2251:2256   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2309   */\n      0x20\n        /* \"#utility.yul\":2292:2310   */\n      dup4\n      add\n        /* \"#utility.yul\":2279:2311   */\n      calldataload\n        /* \"#utility.yul\":2334:2352   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2323:2353   */\n      dup2\n      gt\n        /* \"#utility.yul\":2320:2370   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":2366:2367   */\n      0x00\n        /* \"#utility.yul\":2363:2364   */\n      dup1\n        /* \"#utility.yul\":2356:2368   */\n      revert\n        /* \"#utility.yul\":2320:2370   */\n    tag_427:\n        /* \"#utility.yul\":2389:2411   */\n      dup4\n      add\n        /* \"#utility.yul\":2442:2446   */\n      0x1f\n        /* \"#utility.yul\":2434:2447   */\n      dup2\n      add\n        /* \"#utility.yul\":2430:2457   */\n      dup6\n      sgt\n        /* \"#utility.yul\":2420:2475   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":2471:2472   */\n      0x00\n        /* \"#utility.yul\":2468:2469   */\n      dup1\n        /* \"#utility.yul\":2461:2473   */\n      revert\n        /* \"#utility.yul\":2420:2475   */\n    tag_428:\n        /* \"#utility.yul\":2511:2513   */\n      dup1\n        /* \"#utility.yul\":2498:2514   */\n      calldataload\n        /* \"#utility.yul\":2537:2555   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2529:2535   */\n      dup2\n        /* \"#utility.yul\":2526:2556   */\n      gt\n        /* \"#utility.yul\":2523:2579   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":2559:2577   */\n      tag_430\n      tag_404\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2608:2610   */\n      0x40\n        /* \"#utility.yul\":2602:2611   */\n      mload\n        /* \"#utility.yul\":2700:2702   */\n      0x1f\n        /* \"#utility.yul\":2662:2679   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2658:2689   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2691:2693   */\n      0x3f\n        /* \"#utility.yul\":2654:2694   */\n      add\n        /* \"#utility.yul\":2650:2704   */\n      and\n        /* \"#utility.yul\":2638:2705   */\n      dup2\n      add\n        /* \"#utility.yul\":2735:2753   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2720:2754   */\n      dup2\n      gt\n        /* \"#utility.yul\":2756:2778   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2717:2779   */\n      or\n        /* \"#utility.yul\":2714:2802   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":2782:2800   */\n      tag_432\n      tag_404\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2818:2820   */\n      0x40\n        /* \"#utility.yul\":2811:2833   */\n      mstore\n        /* \"#utility.yul\":2842:2864   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":2883:2898   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2900:2902   */\n      0x20\n        /* \"#utility.yul\":2879:2903   */\n      add\n        /* \"#utility.yul\":2876:2913   */\n      dup8\n      lt\n        /* \"#utility.yul\":2873:2930   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":2926:2927   */\n      0x00\n        /* \"#utility.yul\":2923:2924   */\n      dup1\n        /* \"#utility.yul\":2916:2928   */\n      revert\n        /* \"#utility.yul\":2873:2930   */\n    tag_433:\n        /* \"#utility.yul\":2982:2988   */\n      dup2\n        /* \"#utility.yul\":2977:2979   */\n      0x20\n        /* \"#utility.yul\":2973:2975   */\n      dup5\n        /* \"#utility.yul\":2969:2980   */\n      add\n        /* \"#utility.yul\":2964:2966   */\n      0x20\n        /* \"#utility.yul\":2956:2962   */\n      dup4\n        /* \"#utility.yul\":2952:2967   */\n      add\n        /* \"#utility.yul\":2939:2989   */\n      calldatacopy\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3030:3032   */\n      0x20\n        /* \"#utility.yul\":3021:3027   */\n      dup4\n        /* \"#utility.yul\":3013:3019   */\n      dup4\n        /* \"#utility.yul\":3009:3028   */\n      add\n        /* \"#utility.yul\":3005:3033   */\n      add\n        /* \"#utility.yul\":2998:3037   */\n      mstore\n        /* \"#utility.yul\":3056:3062   */\n      dup1\n        /* \"#utility.yul\":3046:3062   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1989:3068   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3073:3419   */\n    tag_80:\n        /* \"#utility.yul\":3141:3147   */\n      0x00\n        /* \"#utility.yul\":3149:3155   */\n      dup1\n        /* \"#utility.yul\":3202:3204   */\n      0x40\n        /* \"#utility.yul\":3190:3199   */\n      dup4\n        /* \"#utility.yul\":3181:3188   */\n      dup6\n        /* \"#utility.yul\":3177:3200   */\n      sub\n        /* \"#utility.yul\":3173:3205   */\n      slt\n        /* \"#utility.yul\":3170:3222   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":3218:3219   */\n      0x00\n        /* \"#utility.yul\":3215:3216   */\n      dup1\n        /* \"#utility.yul\":3208:3220   */\n      revert\n        /* \"#utility.yul\":3170:3222   */\n    tag_435:\n      pop\n      pop\n        /* \"#utility.yul\":3263:3286   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3383:3385   */\n      0x20\n        /* \"#utility.yul\":3368:3386   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3355:3387   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3073:3419   */\n      jump\t// out\n        /* \"#utility.yul\":3606:4377   */\n    tag_107:\n        /* \"#utility.yul\":3701:3707   */\n      0x00\n        /* \"#utility.yul\":3709:3715   */\n      dup1\n        /* \"#utility.yul\":3717:3723   */\n      0x00\n        /* \"#utility.yul\":3725:3731   */\n      dup1\n        /* \"#utility.yul\":3733:3739   */\n      0x00\n        /* \"#utility.yul\":3786:3789   */\n      0xa0\n        /* \"#utility.yul\":3774:3783   */\n      dup7\n        /* \"#utility.yul\":3765:3772   */\n      dup9\n        /* \"#utility.yul\":3761:3784   */\n      sub\n        /* \"#utility.yul\":3757:3790   */\n      slt\n        /* \"#utility.yul\":3754:3807   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":3803:3804   */\n      0x00\n        /* \"#utility.yul\":3800:3801   */\n      dup1\n        /* \"#utility.yul\":3793:3805   */\n      revert\n        /* \"#utility.yul\":3754:3807   */\n    tag_438:\n        /* \"#utility.yul\":3842:3851   */\n      dup6\n        /* \"#utility.yul\":3829:3852   */\n      calldataload\n        /* \"#utility.yul\":3861:3892   */\n      tag_439\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3861:3892   */\n      tag_403\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3911:3916   */\n      swap5\n      pop\n        /* \"#utility.yul\":3968:3970   */\n      0x20\n        /* \"#utility.yul\":3953:3971   */\n      dup7\n      add\n        /* \"#utility.yul\":3940:3972   */\n      calldataload\n        /* \"#utility.yul\":3981:4014   */\n      tag_440\n        /* \"#utility.yul\":3940:3972   */\n      dup2\n        /* \"#utility.yul\":3981:4014   */\n      tag_403\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4033:4040   */\n      swap4\n      pop\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4077:4095   */\n      dup7\n      add\n        /* \"#utility.yul\":4064:4096   */\n      calldataload\n        /* \"#utility.yul\":4105:4138   */\n      tag_441\n        /* \"#utility.yul\":4064:4096   */\n      dup2\n        /* \"#utility.yul\":4105:4138   */\n      tag_403\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3606:4377   */\n      swap5\n      swap8\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":4157:4164   */\n      swap4\n      swap5\n        /* \"#utility.yul\":4237:4239   */\n      0x60\n        /* \"#utility.yul\":4222:4240   */\n      dup2\n      add\n        /* \"#utility.yul\":4209:4241   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4340:4343   */\n      0x80\n        /* \"#utility.yul\":4325:4344   */\n      add\n        /* \"#utility.yul\":4312:4345   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":3606:4377   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4382:4800   */\n    tag_113:\n        /* \"#utility.yul\":4531:4533   */\n      0x20\n        /* \"#utility.yul\":4520:4529   */\n      dup2\n        /* \"#utility.yul\":4513:4534   */\n      mstore\n        /* \"#utility.yul\":4494:4498   */\n      0x00\n        /* \"#utility.yul\":4563:4569   */\n      dup3\n        /* \"#utility.yul\":4557:4570   */\n      mload\n        /* \"#utility.yul\":4606:4612   */\n      dup1\n        /* \"#utility.yul\":4601:4603   */\n      0x20\n        /* \"#utility.yul\":4590:4599   */\n      dup5\n        /* \"#utility.yul\":4586:4604   */\n      add\n        /* \"#utility.yul\":4579:4613   */\n      mstore\n        /* \"#utility.yul\":4665:4671   */\n      dup1\n        /* \"#utility.yul\":4660:4662   */\n      0x20\n        /* \"#utility.yul\":4652:4658   */\n      dup6\n        /* \"#utility.yul\":4648:4663   */\n      add\n        /* \"#utility.yul\":4643:4645   */\n      0x40\n        /* \"#utility.yul\":4632:4641   */\n      dup6\n        /* \"#utility.yul\":4628:4646   */\n      add\n        /* \"#utility.yul\":4622:4672   */\n      mcopy\n        /* \"#utility.yul\":4721:4722   */\n      0x00\n        /* \"#utility.yul\":4716:4718   */\n      0x40\n        /* \"#utility.yul\":4707:4713   */\n      dup3\n        /* \"#utility.yul\":4696:4705   */\n      dup6\n        /* \"#utility.yul\":4692:4714   */\n      add\n        /* \"#utility.yul\":4688:4719   */\n      add\n        /* \"#utility.yul\":4681:4723   */\n      mstore\n        /* \"#utility.yul\":4791:4793   */\n      0x40\n        /* \"#utility.yul\":4784:4786   */\n      0x1f\n        /* \"#utility.yul\":4780:4787   */\n      not\n        /* \"#utility.yul\":4775:4777   */\n      0x1f\n        /* \"#utility.yul\":4767:4773   */\n      dup4\n        /* \"#utility.yul\":4763:4778   */\n      add\n        /* \"#utility.yul\":4759:4788   */\n      and\n        /* \"#utility.yul\":4748:4757   */\n      dup5\n        /* \"#utility.yul\":4744:4789   */\n      add\n        /* \"#utility.yul\":4740:4794   */\n      add\n        /* \"#utility.yul\":4732:4794   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4382:4800   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4805:5172   */\n    tag_405:\n        /* \"#utility.yul\":4868:4876   */\n      0x00\n        /* \"#utility.yul\":4878:4884   */\n      dup1\n        /* \"#utility.yul\":4932:4935   */\n      dup4\n        /* \"#utility.yul\":4925:4929   */\n      0x1f\n        /* \"#utility.yul\":4917:4923   */\n      dup5\n        /* \"#utility.yul\":4913:4930   */\n      add\n        /* \"#utility.yul\":4909:4936   */\n      slt\n        /* \"#utility.yul\":4899:4954   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":4950:4951   */\n      0x00\n        /* \"#utility.yul\":4947:4948   */\n      dup1\n        /* \"#utility.yul\":4940:4952   */\n      revert\n        /* \"#utility.yul\":4899:4954   */\n    tag_444:\n      pop\n        /* \"#utility.yul\":4973:4993   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":5016:5034   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5005:5035   */\n      dup2\n      gt\n        /* \"#utility.yul\":5002:5052   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":5048:5049   */\n      0x00\n        /* \"#utility.yul\":5045:5046   */\n      dup1\n        /* \"#utility.yul\":5038:5050   */\n      revert\n        /* \"#utility.yul\":5002:5052   */\n    tag_445:\n        /* \"#utility.yul\":5085:5089   */\n      0x20\n        /* \"#utility.yul\":5077:5083   */\n      dup4\n        /* \"#utility.yul\":5073:5090   */\n      add\n        /* \"#utility.yul\":5061:5090   */\n      swap2\n      pop\n        /* \"#utility.yul\":5145:5148   */\n      dup4\n        /* \"#utility.yul\":5138:5142   */\n      0x20\n        /* \"#utility.yul\":5128:5134   */\n      dup3\n        /* \"#utility.yul\":5125:5126   */\n      0x05\n        /* \"#utility.yul\":5121:5135   */\n      shl\n        /* \"#utility.yul\":5113:5119   */\n      dup6\n        /* \"#utility.yul\":5109:5136   */\n      add\n        /* \"#utility.yul\":5105:5143   */\n      add\n        /* \"#utility.yul\":5102:5149   */\n      gt\n        /* \"#utility.yul\":5099:5166   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":5162:5163   */\n      0x00\n        /* \"#utility.yul\":5159:5160   */\n      dup1\n        /* \"#utility.yul\":5152:5164   */\n      revert\n        /* \"#utility.yul\":5099:5166   */\n    tag_446:\n        /* \"#utility.yul\":4805:5172   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5177:5945   */\n    tag_117:\n        /* \"#utility.yul\":5299:5305   */\n      0x00\n        /* \"#utility.yul\":5307:5313   */\n      dup1\n        /* \"#utility.yul\":5315:5321   */\n      0x00\n        /* \"#utility.yul\":5323:5329   */\n      dup1\n        /* \"#utility.yul\":5376:5378   */\n      0x40\n        /* \"#utility.yul\":5364:5373   */\n      dup6\n        /* \"#utility.yul\":5355:5362   */\n      dup8\n        /* \"#utility.yul\":5351:5374   */\n      sub\n        /* \"#utility.yul\":5347:5379   */\n      slt\n        /* \"#utility.yul\":5344:5396   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":5392:5393   */\n      0x00\n        /* \"#utility.yul\":5389:5390   */\n      dup1\n        /* \"#utility.yul\":5382:5394   */\n      revert\n        /* \"#utility.yul\":5344:5396   */\n    tag_448:\n        /* \"#utility.yul\":5432:5441   */\n      dup5\n        /* \"#utility.yul\":5419:5442   */\n      calldataload\n        /* \"#utility.yul\":5465:5483   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5457:5463   */\n      dup2\n        /* \"#utility.yul\":5454:5484   */\n      gt\n        /* \"#utility.yul\":5451:5501   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":5497:5498   */\n      0x00\n        /* \"#utility.yul\":5494:5495   */\n      dup1\n        /* \"#utility.yul\":5487:5499   */\n      revert\n        /* \"#utility.yul\":5451:5501   */\n    tag_449:\n        /* \"#utility.yul\":5536:5606   */\n      tag_450\n        /* \"#utility.yul\":5598:5605   */\n      dup8\n        /* \"#utility.yul\":5589:5595   */\n      dup3\n        /* \"#utility.yul\":5578:5587   */\n      dup9\n        /* \"#utility.yul\":5574:5596   */\n      add\n        /* \"#utility.yul\":5536:5606   */\n      tag_405\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5625:5633   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":5510:5606   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":5713:5715   */\n      0x20\n        /* \"#utility.yul\":5698:5716   */\n      dup6\n      add\n        /* \"#utility.yul\":5685:5717   */\n      calldataload\n        /* \"#utility.yul\":5742:5760   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5729:5761   */\n      dup2\n      gt\n        /* \"#utility.yul\":5726:5778   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5771:5772   */\n      dup1\n        /* \"#utility.yul\":5764:5776   */\n      revert\n        /* \"#utility.yul\":5726:5778   */\n    tag_451:\n        /* \"#utility.yul\":5813:5885   */\n      tag_452\n        /* \"#utility.yul\":5877:5884   */\n      dup8\n        /* \"#utility.yul\":5866:5874   */\n      dup3\n        /* \"#utility.yul\":5855:5864   */\n      dup9\n        /* \"#utility.yul\":5851:5875   */\n      add\n        /* \"#utility.yul\":5813:5885   */\n      tag_405\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5177:5945   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":5904:5912   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5177:5945   */\n      jump\t// out\n        /* \"#utility.yul\":7222:7349   */\n    tag_406:\n        /* \"#utility.yul\":7283:7293   */\n      0x4e487b71\n        /* \"#utility.yul\":7278:7281   */\n      0xe0\n        /* \"#utility.yul\":7274:7294   */\n      shl\n        /* \"#utility.yul\":7271:7272   */\n      0x00\n        /* \"#utility.yul\":7264:7295   */\n      mstore\n        /* \"#utility.yul\":7314:7318   */\n      0x11\n        /* \"#utility.yul\":7311:7312   */\n      0x04\n        /* \"#utility.yul\":7304:7319   */\n      mstore\n        /* \"#utility.yul\":7338:7342   */\n      0x24\n        /* \"#utility.yul\":7335:7336   */\n      0x00\n        /* \"#utility.yul\":7328:7343   */\n      revert\n        /* \"#utility.yul\":7354:7482   */\n    tag_155:\n        /* \"#utility.yul\":7421:7430   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7442:7453   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7439:7476   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":7456:7474   */\n      tag_139\n      tag_406\n      jump\t// in\n        /* \"#utility.yul\":7838:8006   */\n    tag_160:\n        /* \"#utility.yul\":7911:7920   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7942:7951   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7959:7974   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7953:7975   */\n      dup5\n      eq\n        /* \"#utility.yul\":7939:7976   */\n      or\n        /* \"#utility.yul\":7929:8000   */\n      tag_139\n      jumpi\n        /* \"#utility.yul\":7980:7998   */\n      tag_139\n      tag_406\n      jump\t// in\n        /* \"#utility.yul\":8011:8228   */\n    tag_163:\n        /* \"#utility.yul\":8051:8052   */\n      0x00\n        /* \"#utility.yul\":8077:8078   */\n      dup3\n        /* \"#utility.yul\":8067:8199   */\n      tag_465\n      jumpi\n        /* \"#utility.yul\":8121:8131   */\n      0x4e487b71\n        /* \"#utility.yul\":8116:8119   */\n      0xe0\n        /* \"#utility.yul\":8112:8132   */\n      shl\n        /* \"#utility.yul\":8109:8110   */\n      0x00\n        /* \"#utility.yul\":8102:8133   */\n      mstore\n        /* \"#utility.yul\":8156:8160   */\n      0x12\n        /* \"#utility.yul\":8153:8154   */\n      0x04\n        /* \"#utility.yul\":8146:8161   */\n      mstore\n        /* \"#utility.yul\":8184:8188   */\n      0x24\n        /* \"#utility.yul\":8181:8182   */\n      0x00\n        /* \"#utility.yul\":8174:8189   */\n      revert\n        /* \"#utility.yul\":8067:8199   */\n    tag_465:\n      pop\n        /* \"#utility.yul\":8213:8222   */\n      div\n      swap1\n        /* \"#utility.yul\":8011:8228   */\n      jump\t// out\n        /* \"#utility.yul\":8512:8789   */\n    tag_169:\n        /* \"#utility.yul\":8579:8585   */\n      0x00\n        /* \"#utility.yul\":8632:8634   */\n      0x20\n        /* \"#utility.yul\":8620:8629   */\n      dup3\n        /* \"#utility.yul\":8611:8618   */\n      dup5\n        /* \"#utility.yul\":8607:8630   */\n      sub\n        /* \"#utility.yul\":8603:8635   */\n      slt\n        /* \"#utility.yul\":8600:8652   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":8648:8649   */\n      0x00\n        /* \"#utility.yul\":8645:8646   */\n      dup1\n        /* \"#utility.yul\":8638:8650   */\n      revert\n        /* \"#utility.yul\":8600:8652   */\n    tag_468:\n        /* \"#utility.yul\":8680:8689   */\n      dup2\n        /* \"#utility.yul\":8674:8690   */\n      mload\n        /* \"#utility.yul\":8733:8738   */\n      dup1\n        /* \"#utility.yul\":8726:8739   */\n      iszero\n        /* \"#utility.yul\":8719:8740   */\n      iszero\n        /* \"#utility.yul\":8712:8717   */\n      dup2\n        /* \"#utility.yul\":8709:8741   */\n      eq\n        /* \"#utility.yul\":8699:8759   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":8755:8756   */\n      0x00\n        /* \"#utility.yul\":8752:8753   */\n      dup1\n        /* \"#utility.yul\":8745:8757   */\n      revert\n        /* \"#utility.yul\":8794:9045   */\n    tag_174:\n        /* \"#utility.yul\":8864:8870   */\n      0x00\n        /* \"#utility.yul\":8917:8919   */\n      0x20\n        /* \"#utility.yul\":8905:8914   */\n      dup3\n        /* \"#utility.yul\":8896:8903   */\n      dup5\n        /* \"#utility.yul\":8892:8915   */\n      sub\n        /* \"#utility.yul\":8888:8920   */\n      slt\n        /* \"#utility.yul\":8885:8937   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":8933:8934   */\n      0x00\n        /* \"#utility.yul\":8930:8931   */\n      dup1\n        /* \"#utility.yul\":8923:8935   */\n      revert\n        /* \"#utility.yul\":8885:8937   */\n    tag_471:\n        /* \"#utility.yul\":8965:8974   */\n      dup2\n        /* \"#utility.yul\":8959:8975   */\n      mload\n        /* \"#utility.yul\":8984:9015   */\n      tag_396\n        /* \"#utility.yul\":9009:9014   */\n      dup2\n        /* \"#utility.yul\":8984:9015   */\n      tag_403\n      jump\t// in\n        /* \"#utility.yul\":9426:10057   */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9747:9779   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":9729:9780   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9816:9848   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":9811:9813   */\n      0x20\n        /* \"#utility.yul\":9796:9814   */\n      dup4\n      add\n        /* \"#utility.yul\":9789:9849   */\n      mstore\n        /* \"#utility.yul\":9880:9882   */\n      0x40\n        /* \"#utility.yul\":9865:9883   */\n      dup3\n      add\n        /* \"#utility.yul\":9858:9892   */\n      mstore\n        /* \"#utility.yul\":9923:9925   */\n      0x60\n        /* \"#utility.yul\":9908:9926   */\n      dup2\n      add\n        /* \"#utility.yul\":9901:9935   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9767:9770   */\n      0xa0\n        /* \"#utility.yul\":9966:9969   */\n      0x80\n        /* \"#utility.yul\":9951:9970   */\n      dup3\n      add\n        /* \"#utility.yul\":9944:9976   */\n      dup2\n      swap1\n      mstore\n      0x00\n        /* \"#utility.yul\":9992:10011   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9985:10015   */\n      mstore\n        /* \"#utility.yul\":10047:10050   */\n      0xc0\n        /* \"#utility.yul\":10032:10051   */\n      add\n      swap1\n        /* \"#utility.yul\":9426:10057   */\n      jump\t// out\n        /* \"#utility.yul\":10484:10668   */\n    tag_227:\n        /* \"#utility.yul\":10554:10560   */\n      0x00\n        /* \"#utility.yul\":10607:10609   */\n      0x20\n        /* \"#utility.yul\":10595:10604   */\n      dup3\n        /* \"#utility.yul\":10586:10593   */\n      dup5\n        /* \"#utility.yul\":10582:10605   */\n      sub\n        /* \"#utility.yul\":10578:10610   */\n      slt\n        /* \"#utility.yul\":10575:10627   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":10623:10624   */\n      0x00\n        /* \"#utility.yul\":10620:10621   */\n      dup1\n        /* \"#utility.yul\":10613:10625   */\n      revert\n        /* \"#utility.yul\":10575:10627   */\n    tag_477:\n      pop\n        /* \"#utility.yul\":10646:10662   */\n      mload\n      swap2\n        /* \"#utility.yul\":10484:10668   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12348:12475   */\n    tag_282:\n        /* \"#utility.yul\":12409:12419   */\n      0x4e487b71\n        /* \"#utility.yul\":12404:12407   */\n      0xe0\n        /* \"#utility.yul\":12400:12420   */\n      shl\n        /* \"#utility.yul\":12397:12398   */\n      0x00\n        /* \"#utility.yul\":12390:12421   */\n      mstore\n        /* \"#utility.yul\":12440:12444   */\n      0x32\n        /* \"#utility.yul\":12437:12438   */\n      0x04\n        /* \"#utility.yul\":12430:12445   */\n      mstore\n        /* \"#utility.yul\":12464:12468   */\n      0x24\n        /* \"#utility.yul\":12461:12462   */\n      0x00\n        /* \"#utility.yul\":12454:12469   */\n      revert\n        /* \"#utility.yul\":13293:13594   */\n    tag_382:\n        /* \"#utility.yul\":13422:13425   */\n      0x00\n        /* \"#utility.yul\":13460:13466   */\n      dup3\n        /* \"#utility.yul\":13454:13467   */\n      mload\n        /* \"#utility.yul\":13506:13512   */\n      dup1\n        /* \"#utility.yul\":13499:13503   */\n      0x20\n        /* \"#utility.yul\":13491:13497   */\n      dup6\n        /* \"#utility.yul\":13487:13504   */\n      add\n        /* \"#utility.yul\":13482:13485   */\n      dup5\n        /* \"#utility.yul\":13476:13513   */\n      mcopy\n        /* \"#utility.yul\":13568:13569   */\n      0x00\n        /* \"#utility.yul\":13532:13548   */\n      swap3\n      add\n        /* \"#utility.yul\":13557:13570   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":13532:13548   */\n      swap2\n        /* \"#utility.yul\":13293:13594   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f 02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n\n    auxdata: 0xa264697066735822122093b9a88d1b3827e35df39db0c4f5f0b1503195780818a3a84e007496b58530ea64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2217": {
									"entryPoint": null,
									"id": 2217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 122,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1270": {
									"entryPoint": null,
									"id": 1270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001e5f3361007a565b506100497f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3361007a565b506100747f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e33361007a565b50610148565b5f8281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602081815260408084206001600160a01b038616855290915282205460ff1661013d575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556100f33390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610142565b5f9150505b92915050565b60805161198261016e5f395f81816110fd01528181611126015261128701526119825ff3fe60806040526004361061013c575f3560e01c80637b0a47ee116100b3578063ad3cb1cc1161006d578063ad3cb1cc1461034c578063d0f7d24f14610389578063d547741f146103a8578063d5a44f86146103c7578063e63ab1e914610454578063f72c0d8b14610487575f80fd5b80637b0a47ee146102b25780637ebed54c146102c75780638172885b146102dc57806391d14854146102fb578063a217fddf1461031a578063a6b63eb81461032d575f80fd5b806336568abe1161010457806336568abe146102185780634d9a824d146102375780634f1ef2861461025657806352d1902d146102695780635c975abb1461027d5780637b0472f014610293575f80fd5b806301ffc9a714610140578063248a9ca3146101745780632e17de78146101a15780632f2ff15d146101c257806334aab064146101e1575b5f80fd5b34801561014b575f80fd5b5061015f61015a366004611543565b6104ba565b60405190151581526020015b60405180910390f35b34801561017f575f80fd5b5061019361018e36600461156a565b6104f0565b60405190815260200161016b565b3480156101ac575f80fd5b506101c06101bb36600461156a565b610510565b005b3480156101cd575f80fd5b506101c06101dc366004611595565b6108e5565b3480156101ec575f80fd5b50603354610200906001600160a01b031681565b6040516001600160a01b03909116815260200161016b565b348015610223575f80fd5b506101c0610232366004611595565b610907565b348015610242575f80fd5b50603454610200906001600160a01b031681565b6101c06102643660046115d7565b61093f565b348015610274575f80fd5b5061019361095e565b348015610288575f80fd5b505f5460ff1661015f565b34801561029e575f80fd5b506101c06102ad36600461169d565b610979565b3480156102bd575f80fd5b5061019360365481565b3480156102d2575f80fd5b5061019360375481565b3480156102e7575f80fd5b50603554610200906001600160a01b031681565b348015610306575f80fd5b5061015f610315366004611595565b610d11565b348015610325575f80fd5b506101935f81565b348015610338575f80fd5b506101c06103473660046116bd565b610d47565b348015610357575f80fd5b5061037c604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161016b9190611714565b348015610394575f80fd5b506101c06103a3366004611791565b610eaf565b3480156103b3575f80fd5b506101c06103c2366004611595565b610f68565b3480156103d2575f80fd5b5061041f6103e136600461156a565b60326020525f908152604090208054600182015460028301546003840154600485015460059095015493946001600160a01b03909316939192909186565b604080519687526001600160a01b039095166020870152938501929092526060840152608083015260a082015260c00161016b565b34801561045f575f80fd5b506101937f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b348015610492575f80fd5b506101937f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b14806104ea57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f9081525f8051602061192d833981519152602052604090206001015490565b610518610f84565b5f818152603260205260409020600101546001600160a01b031633146105855760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420746865206f776e6572206f6620746865207374616b6500000000000060448201526064015b60405180910390fd5b5f81815260326020526040902060030154156105dc5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b88185b1c9958591e481d5b9cdd185ad95960521b604482015260640161057c565b5f818152603260205260408120600201546105f79042611811565b90506037548110156106445760405162461bcd60e51b815260206004820152601660248201527514dd185ada5b99c81c195c9a5bd9081b9bdd081b595d60521b604482015260640161057c565b5f82815260326020526040902042600382015560050154603654670de0b6b3a764000091906106739084611824565b61067d9190611824565b610687919061183b565b5f83815260326020526040908190206004908101839055603354915163a9059cbb60e01b8152339181019190915260248101929092526001600160a01b03169063a9059cbb906044016020604051808303815f875af11580156106ec573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610710919061185a565b506034546040516331a9108f60e11b81526004810184905230916001600160a01b031690636352211e90602401602060405180830381865afa158015610758573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077c9190611879565b6001600160a01b0316036107f4576034546040516323b872dd60e01b8152306004820152336024820152604481018490526001600160a01b03909116906323b872dd906064015f604051808303815f87803b1580156107d9575f80fd5b505af11580156107eb573d5f803e3d5ffd5b50505050610859565b603554604051637921219560e11b81526001600160a01b039091169063f242432a9061082b90309033908790600190600401611894565b5f604051808303815f87803b158015610842575f80fd5b505af1158015610854573d5f803e3d5ffd5b505050505b5f8281526032602090815260408083208381556001810180546001600160a01b031916905560028101849055600381018490556004810184905560050183905580518581523392810192909252429082015260608101919091527fffdaf13b1d96bfc2213355f353f84c19493e0681eb0df26f83d862acd266750a906080015b60405180910390a15050565b6108ee826104f0565b6108f781610fcb565b6109018383610fd8565b50505050565b6001600160a01b03811633146109305760405163334bd91960e11b815260040160405180910390fd5b61093a8282611079565b505050565b6109476110f2565b61095082611196565b61095a82826111c0565b5050565b5f61096761127c565b505f8051602061190d83398151915290565b610981610f84565b6034546040516331a9108f60e11b81526004810184905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156109c8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109ec9190611879565b6001600160a01b03161480610a6d5750603554604051627eeac760e11b8152336004820152602481018490525f916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610a47573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a6b91906118cb565b115b610ab95760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420746865206f776e6572206f662074686520746f6b656e000000000000604482015260640161057c565b5f8281526032602052604090205415610b0b5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88185b1c9958591e481cdd185ad95960621b604482015260640161057c565b6040805160c081018252838152336020808301828152428486019081525f606086018181526080870182815260a088018a81528b84526032909652918890209651875592516001870180546001600160a01b0319166001600160a01b0392831617905591516002870155915160038601559051600480860191909155915160059094019390935560345493516331a9108f60e11b8152908101869052909290911690636352211e90602401602060405180830381865afa158015610bd1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf59190611879565b6001600160a01b031603610c6d576034546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064015f604051808303815f87803b158015610c52575f80fd5b505af1158015610c64573d5f803e3d5ffd5b50505050610cd2565b603554604051637921219560e11b81526001600160a01b039091169063f242432a90610ca490339030908790600190600401611894565b5f604051808303815f87803b158015610cbb575f80fd5b505af1158015610ccd573d5f803e3d5ffd5b505050505b6040805183815233602082015242918101919091527f18dcd430020e4d4899772fd94a8b40451dc5044dfb70bc46b532eeae431c864f906060016108d9565b5f9182525f8051602061192d833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610d8c5750825b90505f8267ffffffffffffffff166001148015610da85750303b155b905081158015610db6575080155b15610dd45760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610dfe57845460ff60401b1916600160401b1785555b610e066112c5565b610e0e6112cd565b610e166112c5565b603380546001600160a01b03808d166001600160a01b031992831617909255603480548c841690831617905560358054928b1692909116919091179055603687905560378690558315610ea357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b610eb7610f84565b828114610f155760405162461bcd60e51b815260206004820152602660248201527f546f6b656e2049447320616e64207261726974696573206c656e677468206d696044820152650e6dac2e8c6d60d31b606482015260840161057c565b5f5b83811015610f6157610f59858583818110610f3457610f346118e2565b90506020020135848484818110610f4d57610f4d6118e2565b90506020020135610979565b600101610f17565b5050505050565b610f71826104f0565b610f7a81610fcb565b6109018383611079565b5f5460ff1615610fc95760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161057c565b565b610fd581336112dd565b50565b5f5f8051602061192d833981519152610ff18484610d11565b611070575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556110263390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506104ea565b5f9150506104ea565b5f5f8051602061192d8339815191526110928484610d11565b15611070575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506104ea565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061117857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661116c5f8051602061190d833981519152546001600160a01b031690565b6001600160a01b031614155b15610fc95760405163703e46dd60e11b815260040160405180910390fd5b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e361095a81610fcb565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561121a575060408051601f3d908101601f19168201909252611217918101906118cb565b60015b61124257604051634c9c8ce360e01b81526001600160a01b038316600482015260240161057c565b5f8051602061190d833981519152811461127257604051632a87526960e21b81526004810182905260240161057c565b61093a8383611316565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fc95760405163703e46dd60e11b815260040160405180910390fd5b610fc961136b565b6112d561136b565b610fc96113b4565b6112e78282610d11565b61095a5760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161057c565b61131f826113c7565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156113635761093a828261142a565b61095a61149c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610fc957604051631afcd79f60e31b815260040160405180910390fd5b6113bc61136b565b5f805460ff19169055565b806001600160a01b03163b5f036113fc57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161057c565b5f8051602061190d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161144691906118f6565b5f60405180830381855af49150503d805f811461147e576040519150601f19603f3d011682016040523d82523d5f602084013e611483565b606091505b50915091506114938583836114bb565b95945050505050565b3415610fc95760405163b398979f60e01b815260040160405180910390fd5b6060826114d0576114cb8261151a565b611513565b81511580156114e757506001600160a01b0384163b155b1561151057604051639996b31560e01b81526001600160a01b038516600482015260240161057c565b50805b9392505050565b80511561152a5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215611553575f80fd5b81356001600160e01b031981168114611513575f80fd5b5f6020828403121561157a575f80fd5b5035919050565b6001600160a01b0381168114610fd5575f80fd5b5f80604083850312156115a6575f80fd5b8235915060208301356115b881611581565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156115e8575f80fd5b82356115f381611581565b9150602083013567ffffffffffffffff81111561160e575f80fd5b8301601f8101851361161e575f80fd5b803567ffffffffffffffff811115611638576116386115c3565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611667576116676115c3565b60405281815282820160200187101561167e575f80fd5b816020840160208301375f602083830101528093505050509250929050565b5f80604083850312156116ae575f80fd5b50508035926020909101359150565b5f805f805f60a086880312156116d1575f80fd5b85356116dc81611581565b945060208601356116ec81611581565b935060408601356116fc81611581565b94979396509394606081013594506080013592915050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8083601f840112611759575f80fd5b50813567ffffffffffffffff811115611770575f80fd5b6020830191508360208260051b850101111561178a575f80fd5b9250929050565b5f805f80604085870312156117a4575f80fd5b843567ffffffffffffffff8111156117ba575f80fd5b6117c687828801611749565b909550935050602085013567ffffffffffffffff8111156117e5575f80fd5b6117f187828801611749565b95989497509550505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104ea576104ea6117fd565b80820281158282048414176104ea576104ea6117fd565b5f8261185557634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020828403121561186a575f80fd5b81518015158114611513575f80fd5b5f60208284031215611889575f80fd5b815161151381611581565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a0608082018190525f9082015260c00190565b5f602082840312156118db575f80fd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a264697066735822122093b9a88d1b3827e35df39db0c4f5f0b1503195780818a3a84e007496b58530ea64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E PUSH0 CALLER PUSH2 0x7A JUMP JUMPDEST POP PUSH2 0x49 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0x7A JUMP JUMPDEST POP PUSH2 0x74 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 CALLER PUSH2 0x7A JUMP JUMPDEST POP PUSH2 0x148 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x13D JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xF3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x142 JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1982 PUSH2 0x16E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x10FD ADD MSTORE DUP2 DUP2 PUSH2 0x1126 ADD MSTORE PUSH2 0x1287 ADD MSTORE PUSH2 0x1982 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xD0F7D24F EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xD5A44F86 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x487 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x7EBED54C EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x8172885B EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xA6B63EB8 EQ PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x4D9A824D EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x34AAB064 EQ PUSH2 0x1E1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x1543 JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x156A JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x156A JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH2 0x200 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x34 SLOAD PUSH2 0x200 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x95E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x15F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH1 0x36 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH1 0x37 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD PUSH2 0x200 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xD47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1714 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1791 JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x32 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4EA JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x192D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x518 PUSH2 0xF84 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746865206F776E6572206F6620746865207374616B65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD ISZERO PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B88185B1C9958591E481D5B9CDD185AD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x5F7 SWAP1 TIMESTAMP PUSH2 0x1811 JUMP JUMPDEST SWAP1 POP PUSH1 0x37 SLOAD DUP2 LT ISZERO PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DD185ADA5B99C81C195C9A5BD9081B9BDD081B595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x5 ADD SLOAD PUSH1 0x36 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 SWAP1 PUSH2 0x673 SWAP1 DUP5 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x33 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x185A JUMP JUMPDEST POP PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7F4 JUMPI PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x859 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0x82B SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1894 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x854 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x5 ADD DUP4 SWAP1 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFDAF13B1D96BFC2213355F353F84C19493E0681EB0DF26F83D862ACD266750A SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x8EE DUP3 PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x8F7 DUP2 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x901 DUP4 DUP4 PUSH2 0xFD8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93A DUP3 DUP3 PUSH2 0x1079 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x947 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x950 DUP3 PUSH2 0x1196 JUMP JUMPDEST PUSH2 0x95A DUP3 DUP3 PUSH2 0x11C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x967 PUSH2 0x127C JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x981 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xA6D JUMPI POP PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH3 0xFDD58E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST GT JUMPDEST PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746865206F776E6572206F662074686520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88185B1C9958591E481CDD185AD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE TIMESTAMP DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP9 ADD DUP11 DUP2 MSTORE DUP12 DUP5 MSTORE PUSH1 0x32 SWAP1 SWAP7 MSTORE SWAP2 DUP9 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP7 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x34 SLOAD SWAP4 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC6D JUMPI PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC64 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0xCA4 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1894 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x18DCD430020E4D4899772FD94A8B40451DC5044DFB70BC46B532EEAE431C864F SWAP1 PUSH1 0x60 ADD PUSH2 0x8D9 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x192D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xDA8 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xDB6 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xDFE JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xE06 PUSH2 0x12C5 JUMP JUMPDEST PUSH2 0xE0E PUSH2 0x12CD JUMP JUMPDEST PUSH2 0xE16 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x34 DUP1 SLOAD DUP13 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD SWAP3 DUP12 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x36 DUP8 SWAP1 SSTORE PUSH1 0x37 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0xEA3 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEB7 PUSH2 0xF84 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2049447320616E64207261726974696573206C656E677468206D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0xE6DAC2E8C6D PUSH1 0xD3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF61 JUMPI PUSH2 0xF59 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0xF34 JUMPI PUSH2 0xF34 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0xF4D JUMPI PUSH2 0xF4D PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x979 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xF17 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF71 DUP3 PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0xF7A DUP2 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x901 DUP4 DUP4 PUSH2 0x1079 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFD5 DUP2 CALLER PUSH2 0x12DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x192D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xFF1 DUP5 DUP5 PUSH2 0xD11 JUMP JUMPDEST PUSH2 0x1070 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1026 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x4EA JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x4EA JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x192D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1092 DUP5 DUP5 PUSH2 0xD11 JUMP JUMPDEST ISZERO PUSH2 0x1070 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x4EA JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1178 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x116C PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x95A DUP2 PUSH2 0xFCB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x121A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1217 SWAP2 DUP2 ADD SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1242 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1272 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x57C JUMP JUMPDEST PUSH2 0x93A DUP4 DUP4 PUSH2 0x1316 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC9 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x136B JUMP JUMPDEST PUSH2 0xFC9 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x12E7 DUP3 DUP3 PUSH2 0xD11 JUMP JUMPDEST PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x57C JUMP JUMPDEST PUSH2 0x131F DUP3 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1363 JUMPI PUSH2 0x93A DUP3 DUP3 PUSH2 0x142A JUMP JUMPDEST PUSH2 0x95A PUSH2 0x149C JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13BC PUSH2 0x136B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x13FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1446 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1493 DUP6 DUP4 DUP4 PUSH2 0x14BB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x14D0 JUMPI PUSH2 0x14CB DUP3 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x1513 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x57C JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x152A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1553 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1513 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x15B8 DUP2 PUSH2 0x1581 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15F3 DUP2 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x160E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x161E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1638 JUMPI PUSH2 0x1638 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1667 JUMPI PUSH2 0x1667 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x167E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x16DC DUP2 PUSH2 0x1581 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x16EC DUP2 PUSH2 0x1581 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x16FC DUP2 PUSH2 0x1581 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1759 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1770 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x178A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17BA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17C6 DUP8 DUP3 DUP9 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17F1 DUP8 DUP3 DUP9 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4EA JUMPI PUSH2 0x4EA PUSH2 0x17FD JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4EA JUMPI PUSH2 0x4EA PUSH2 0x17FD JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1855 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1513 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1889 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1513 DUP2 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC02DD7BC7DEC4DCEEDDA775 0xE5 DUP14 0xD5 COINBASE 0xE0 DUP11 GT PUSH13 0x6C53815C0BD028192F7B626800 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xB9 0xA8 DUP14 SHL CODESIZE 0x27 0xE3 TSTORE RETURN SWAP14 0xB0 0xC4 CREATE2 CREATE 0xB1 POP BALANCE SWAP6 PUSH25 0x818A3A84E007496B58530EA64736F6C634300081A00330000 ",
							"sourceMap": "725:3985:17:-:0;;;1171:4:2;1128:48;;1549:165:17;;;;;;;;;-1:-1:-1;1573:42:17;2362:4:0;1604:10:17;1573;:42::i;:::-;-1:-1:-1;1625:35:17;896:24;1649:10;1625;:35::i;:::-;-1:-1:-1;1670:37:17;966:26;1696:10;1670;:37::i;:::-;;725:3985;;7270:387:0;7347:4;3901:14;;;2920:28;3901:14;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;966:10:7;;887:96;7559:12:0;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;7270:387;;;;;:::o;725:3985:17:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_2144": {
									"entryPoint": null,
									"id": 2144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADER_ROLE_2149": {
									"entryPoint": null,
									"id": 2149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_640": {
									"entryPoint": null,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_63": {
									"entryPoint": 4805,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_830": {
									"entryPoint": 4813,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_840": {
									"entryPoint": 5044,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_670": {
									"entryPoint": null,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2564": {
									"entryPoint": 4502,
									"id": 2564,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_538": {
									"entryPoint": 4971,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1735": {
									"entryPoint": 5276,
									"id": 1735,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_746": {
									"entryPoint": 4732,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_730": {
									"entryPoint": 4338,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_129": {
									"entryPoint": 4043,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_150": {
									"entryPoint": 4829,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 4056,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isInitializing_606": {
									"entryPoint": null,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1270": {
									"entryPoint": null,
									"id": 1270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_877": {
									"entryPoint": 3972,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1998": {
									"entryPoint": 5402,
									"id": 1998,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_361": {
									"entryPoint": 4217,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_1521": {
									"entryPoint": 5063,
									"id": 1521,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_797": {
									"entryPoint": 4544,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cqnft1155Token_2173": {
									"entryPoint": null,
									"id": 2173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cqnftToken_2171": {
									"entryPoint": null,
									"id": 2171,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cqtToken_2169": {
									"entryPoint": null,
									"id": 2169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1918": {
									"entryPoint": 5162,
									"id": 1918,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2031": {
									"entryPoint": null,
									"id": 2031,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1494": {
									"entryPoint": null,
									"id": 1494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_171": {
									"entryPoint": 1264,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_190": {
									"entryPoint": 2277,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_116": {
									"entryPoint": 3345,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2262": {
									"entryPoint": 3399,
									"id": 2262,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@minimumStakingPeriod_2177": {
									"entryPoint": null,
									"id": 2177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_865": {
									"entryPoint": null,
									"id": 865,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_688": {
									"entryPoint": 2398,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_232": {
									"entryPoint": 2311,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_209": {
									"entryPoint": 3944,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardRate_2175": {
									"entryPoint": null,
									"id": 2175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeBatch_2412": {
									"entryPoint": 3759,
									"id": 2412,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@stake_2369": {
									"entryPoint": 2425,
									"id": 2369,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakes_2167": {
									"entryPoint": null,
									"id": 2167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1327": {
									"entryPoint": null,
									"id": 1327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_91": {
									"entryPoint": 1210,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unstake_2554": {
									"entryPoint": 1296,
									"id": 2554,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1555": {
									"entryPoint": 4886,
									"id": 1555,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_708": {
									"entryPoint": 2367,
									"id": 708,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1958": {
									"entryPoint": 5307,
									"id": 1958,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn_calldata": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_39e01b02a8ec1a0fd1e3a4d6d6bd8b4018063aa53e4e9672bdce298147a18dc3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa21bce4fe506452861a1614013817d8a427e267f30e56423392821fbb80cd2d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbed3010ef2ca5a7950ddcaceee490947e7e5814a0c73147fbe9a8dd3ac26daa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cfbc489d0add4380fb0a9331116e14e9d245825f5265e05f9ad04c1d23417c73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e926d765124afa7645719d9ee54990b20d280fc9c8126299bae5cd0693cd5706__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2e0b264ccf675e173c230596ff7ecba0dd7a1c403648e17c6ce7c079df5e7ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13596:18",
										"nodeType": "YulBlock",
										"src": "0:13596:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:18",
													"nodeType": "YulBlock",
													"src": "83:217:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:18",
																"nodeType": "YulBlock",
																"src": "129:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:18",
																					"nodeType": "YulLiteral",
																					"src": "138:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:18",
																					"nodeType": "YulLiteral",
																					"src": "141:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:18"
																			},
																			"nativeSrc": "131:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:18"
																		},
																		"nativeSrc": "131:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:18"
																		},
																		"nativeSrc": "100:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:18",
																		"nodeType": "YulLiteral",
																		"src": "125:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:18"
																},
																"nativeSrc": "96:32:18",
																"nodeType": "YulFunctionCall",
																"src": "96:32:18"
															},
															"nativeSrc": "93:52:18",
															"nodeType": "YulIf",
															"src": "93:52:18"
														},
														{
															"nativeSrc": "154:36:18",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:18"
																},
																"nativeSrc": "167:23:18",
																"nodeType": "YulFunctionCall",
																"src": "167:23:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:18",
																	"nodeType": "YulTypedName",
																	"src": "158:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:18",
																"nodeType": "YulBlock",
																"src": "254:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:18",
																					"nodeType": "YulLiteral",
																					"src": "263:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:18",
																					"nodeType": "YulLiteral",
																					"src": "266:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:18"
																			},
																			"nativeSrc": "256:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:18"
																		},
																		"nativeSrc": "256:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:18",
																								"nodeType": "YulLiteral",
																								"src": "234:3:18",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:18",
																								"nodeType": "YulLiteral",
																								"src": "239:10:18",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:18"
																						},
																						"nativeSrc": "230:20:18",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:18"
																				},
																				"nativeSrc": "219:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:18"
																		},
																		"nativeSrc": "209:43:18",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:18"
																},
																"nativeSrc": "202:51:18",
																"nodeType": "YulFunctionCall",
																"src": "202:51:18"
															},
															"nativeSrc": "199:71:18",
															"nodeType": "YulIf",
															"src": "199:71:18"
														},
														{
															"nativeSrc": "279:15:18",
															"nodeType": "YulAssignment",
															"src": "279:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:18",
																"nodeType": "YulIdentifier",
																"src": "289:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:18",
														"nodeType": "YulTypedName",
														"src": "49:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:18",
														"nodeType": "YulTypedName",
														"src": "60:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:18",
														"nodeType": "YulTypedName",
														"src": "72:6:18",
														"type": ""
													}
												],
												"src": "14:286:18"
											},
											{
												"body": {
													"nativeSrc": "400:92:18",
													"nodeType": "YulBlock",
													"src": "400:92:18",
													"statements": [
														{
															"nativeSrc": "410:26:18",
															"nodeType": "YulAssignment",
															"src": "410:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:18",
																		"nodeType": "YulLiteral",
																		"src": "433:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:18"
																},
																"nativeSrc": "418:18:18",
																"nodeType": "YulFunctionCall",
																"src": "418:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:18"
																				},
																				"nativeSrc": "470:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:18"
																		},
																		"nativeSrc": "463:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:18"
																},
																"nativeSrc": "445:41:18",
																"nodeType": "YulFunctionCall",
																"src": "445:41:18"
															},
															"nativeSrc": "445:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:18",
														"nodeType": "YulTypedName",
														"src": "369:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:18",
														"nodeType": "YulTypedName",
														"src": "380:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:18",
														"nodeType": "YulTypedName",
														"src": "391:4:18",
														"type": ""
													}
												],
												"src": "305:187:18"
											},
											{
												"body": {
													"nativeSrc": "567:156:18",
													"nodeType": "YulBlock",
													"src": "567:156:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "613:16:18",
																"nodeType": "YulBlock",
																"src": "613:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "622:1:18",
																					"nodeType": "YulLiteral",
																					"src": "622:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "625:1:18",
																					"nodeType": "YulLiteral",
																					"src": "625:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "615:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "615:6:18"
																			},
																			"nativeSrc": "615:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "615:12:18"
																		},
																		"nativeSrc": "615:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "615:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "588:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "588:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "597:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "597:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "584:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:18"
																		},
																		"nativeSrc": "584:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "584:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "609:2:18",
																		"nodeType": "YulLiteral",
																		"src": "609:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "580:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:18"
																},
																"nativeSrc": "580:32:18",
																"nodeType": "YulFunctionCall",
																"src": "580:32:18"
															},
															"nativeSrc": "577:52:18",
															"nodeType": "YulIf",
															"src": "577:52:18"
														},
														{
															"nativeSrc": "638:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "638:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "651:1:18",
																"nodeType": "YulLiteral",
																"src": "651:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "642:5:18",
																	"nodeType": "YulTypedName",
																	"src": "642:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "661:32:18",
															"nodeType": "YulAssignment",
															"src": "661:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "683:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "683:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "670:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "670:12:18"
																},
																"nativeSrc": "670:23:18",
																"nodeType": "YulFunctionCall",
																"src": "670:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "661:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "661:5:18"
																}
															]
														},
														{
															"nativeSrc": "702:15:18",
															"nodeType": "YulAssignment",
															"src": "702:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "712:5:18",
																"nodeType": "YulIdentifier",
																"src": "712:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "702:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "702:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "497:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "533:9:18",
														"nodeType": "YulTypedName",
														"src": "533:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "544:7:18",
														"nodeType": "YulTypedName",
														"src": "544:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "556:6:18",
														"nodeType": "YulTypedName",
														"src": "556:6:18",
														"type": ""
													}
												],
												"src": "497:226:18"
											},
											{
												"body": {
													"nativeSrc": "829:76:18",
													"nodeType": "YulBlock",
													"src": "829:76:18",
													"statements": [
														{
															"nativeSrc": "839:26:18",
															"nodeType": "YulAssignment",
															"src": "839:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "851:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "851:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "862:2:18",
																		"nodeType": "YulLiteral",
																		"src": "862:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "847:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "847:3:18"
																},
																"nativeSrc": "847:18:18",
																"nodeType": "YulFunctionCall",
																"src": "847:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "839:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "839:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "881:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "881:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "892:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "892:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "874:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "874:6:18"
																},
																"nativeSrc": "874:25:18",
																"nodeType": "YulFunctionCall",
																"src": "874:25:18"
															},
															"nativeSrc": "874:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "874:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "728:177:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "798:9:18",
														"nodeType": "YulTypedName",
														"src": "798:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "809:6:18",
														"nodeType": "YulTypedName",
														"src": "809:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "820:4:18",
														"nodeType": "YulTypedName",
														"src": "820:4:18",
														"type": ""
													}
												],
												"src": "728:177:18"
											},
											{
												"body": {
													"nativeSrc": "980:156:18",
													"nodeType": "YulBlock",
													"src": "980:156:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1026:16:18",
																"nodeType": "YulBlock",
																"src": "1026:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1035:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1038:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1038:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1028:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1028:6:18"
																			},
																			"nativeSrc": "1028:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1028:12:18"
																		},
																		"nativeSrc": "1028:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1028:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1001:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1001:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1010:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1010:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "997:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:18"
																		},
																		"nativeSrc": "997:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "997:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1022:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1022:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "993:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "993:3:18"
																},
																"nativeSrc": "993:32:18",
																"nodeType": "YulFunctionCall",
																"src": "993:32:18"
															},
															"nativeSrc": "990:52:18",
															"nodeType": "YulIf",
															"src": "990:52:18"
														},
														{
															"nativeSrc": "1051:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1051:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1064:1:18",
																"nodeType": "YulLiteral",
																"src": "1064:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1055:5:18",
																	"nodeType": "YulTypedName",
																	"src": "1055:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1074:32:18",
															"nodeType": "YulAssignment",
															"src": "1074:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1096:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1096:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1083:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1083:12:18"
																},
																"nativeSrc": "1083:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1083:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1074:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1074:5:18"
																}
															]
														},
														{
															"nativeSrc": "1115:15:18",
															"nodeType": "YulAssignment",
															"src": "1115:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "1125:5:18",
																"nodeType": "YulIdentifier",
																"src": "1125:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1115:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1115:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "910:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "946:9:18",
														"nodeType": "YulTypedName",
														"src": "946:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "957:7:18",
														"nodeType": "YulTypedName",
														"src": "957:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "969:6:18",
														"nodeType": "YulTypedName",
														"src": "969:6:18",
														"type": ""
													}
												],
												"src": "910:226:18"
											},
											{
												"body": {
													"nativeSrc": "1186:86:18",
													"nodeType": "YulBlock",
													"src": "1186:86:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1250:16:18",
																"nodeType": "YulBlock",
																"src": "1250:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1259:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1259:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1262:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1262:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1252:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1252:6:18"
																			},
																			"nativeSrc": "1252:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1252:12:18"
																		},
																		"nativeSrc": "1252:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1252:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1209:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1209:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1220:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1220:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1235:3:18",
																										"nodeType": "YulLiteral",
																										"src": "1235:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1240:1:18",
																										"nodeType": "YulLiteral",
																										"src": "1240:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1231:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "1231:3:18"
																								},
																								"nativeSrc": "1231:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "1231:11:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1244:1:18",
																								"nodeType": "YulLiteral",
																								"src": "1244:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1227:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1227:3:18"
																						},
																						"nativeSrc": "1227:19:18",
																						"nodeType": "YulFunctionCall",
																						"src": "1227:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1216:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1216:3:18"
																				},
																				"nativeSrc": "1216:31:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1216:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1206:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1206:2:18"
																		},
																		"nativeSrc": "1206:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1206:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1199:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1199:6:18"
																},
																"nativeSrc": "1199:50:18",
																"nodeType": "YulFunctionCall",
																"src": "1199:50:18"
															},
															"nativeSrc": "1196:70:18",
															"nodeType": "YulIf",
															"src": "1196:70:18"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "1141:131:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1175:5:18",
														"nodeType": "YulTypedName",
														"src": "1175:5:18",
														"type": ""
													}
												],
												"src": "1141:131:18"
											},
											{
												"body": {
													"nativeSrc": "1364:280:18",
													"nodeType": "YulBlock",
													"src": "1364:280:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:16:18",
																"nodeType": "YulBlock",
																"src": "1410:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1419:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1419:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1422:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1422:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1412:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:18"
																			},
																			"nativeSrc": "1412:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1412:12:18"
																		},
																		"nativeSrc": "1412:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1385:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1385:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1394:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1394:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1381:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:18"
																		},
																		"nativeSrc": "1381:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1381:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1406:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1406:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1377:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:18"
																},
																"nativeSrc": "1377:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1377:32:18"
															},
															"nativeSrc": "1374:52:18",
															"nodeType": "YulIf",
															"src": "1374:52:18"
														},
														{
															"nativeSrc": "1435:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1435:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1448:1:18",
																"nodeType": "YulLiteral",
																"src": "1448:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1439:5:18",
																	"nodeType": "YulTypedName",
																	"src": "1439:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1458:32:18",
															"nodeType": "YulAssignment",
															"src": "1458:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1480:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1480:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1467:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1467:12:18"
																},
																"nativeSrc": "1467:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1467:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1458:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1458:5:18"
																}
															]
														},
														{
															"nativeSrc": "1499:15:18",
															"nodeType": "YulAssignment",
															"src": "1499:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "1509:5:18",
																"nodeType": "YulIdentifier",
																"src": "1509:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1499:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:18"
																}
															]
														},
														{
															"nativeSrc": "1523:47:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1523:47:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1555:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1555:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1566:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1566:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1551:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1551:3:18"
																		},
																		"nativeSrc": "1551:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1551:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1538:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1538:12:18"
																},
																"nativeSrc": "1538:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1538:32:18"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1527:7:18",
																	"nodeType": "YulTypedName",
																	"src": "1527:7:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "1604:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "1604:7:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1579:24:18",
																	"nodeType": "YulIdentifier",
																	"src": "1579:24:18"
																},
																"nativeSrc": "1579:33:18",
																"nodeType": "YulFunctionCall",
																"src": "1579:33:18"
															},
															"nativeSrc": "1579:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "1579:33:18"
														},
														{
															"nativeSrc": "1621:17:18",
															"nodeType": "YulAssignment",
															"src": "1621:17:18",
															"value": {
																"name": "value_1",
																"nativeSrc": "1631:7:18",
																"nodeType": "YulIdentifier",
																"src": "1631:7:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1621:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1621:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "1277:367:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1322:9:18",
														"nodeType": "YulTypedName",
														"src": "1322:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1333:7:18",
														"nodeType": "YulTypedName",
														"src": "1333:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1345:6:18",
														"nodeType": "YulTypedName",
														"src": "1345:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1353:6:18",
														"nodeType": "YulTypedName",
														"src": "1353:6:18",
														"type": ""
													}
												],
												"src": "1277:367:18"
											},
											{
												"body": {
													"nativeSrc": "1750:102:18",
													"nodeType": "YulBlock",
													"src": "1750:102:18",
													"statements": [
														{
															"nativeSrc": "1760:26:18",
															"nodeType": "YulAssignment",
															"src": "1760:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1772:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1772:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1783:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1783:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1768:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1768:3:18"
																},
																"nativeSrc": "1768:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1768:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1760:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1760:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1802:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1802:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1817:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1817:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1833:3:18",
																								"nodeType": "YulLiteral",
																								"src": "1833:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1838:1:18",
																								"nodeType": "YulLiteral",
																								"src": "1838:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1829:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1829:3:18"
																						},
																						"nativeSrc": "1829:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "1829:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1842:1:18",
																						"nodeType": "YulLiteral",
																						"src": "1842:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1825:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:18"
																				},
																				"nativeSrc": "1825:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1813:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1813:3:18"
																		},
																		"nativeSrc": "1813:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1813:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1795:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1795:6:18"
																},
																"nativeSrc": "1795:51:18",
																"nodeType": "YulFunctionCall",
																"src": "1795:51:18"
															},
															"nativeSrc": "1795:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "1795:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1649:203:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1719:9:18",
														"nodeType": "YulTypedName",
														"src": "1719:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1730:6:18",
														"nodeType": "YulTypedName",
														"src": "1730:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1741:4:18",
														"nodeType": "YulTypedName",
														"src": "1741:4:18",
														"type": ""
													}
												],
												"src": "1649:203:18"
											},
											{
												"body": {
													"nativeSrc": "1889:95:18",
													"nodeType": "YulBlock",
													"src": "1889:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1906:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1906:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1913:3:18",
																				"nodeType": "YulLiteral",
																				"src": "1913:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1918:10:18",
																				"nodeType": "YulLiteral",
																				"src": "1918:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1909:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1909:3:18"
																		},
																		"nativeSrc": "1909:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1909:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1899:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1899:6:18"
																},
																"nativeSrc": "1899:31:18",
																"nodeType": "YulFunctionCall",
																"src": "1899:31:18"
															},
															"nativeSrc": "1899:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "1899:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:18"
																},
																"nativeSrc": "1939:15:18",
																"nodeType": "YulFunctionCall",
																"src": "1939:15:18"
															},
															"nativeSrc": "1939:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "1939:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1970:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1970:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1973:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1973:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1963:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1963:6:18"
																},
																"nativeSrc": "1963:15:18",
																"nodeType": "YulFunctionCall",
																"src": "1963:15:18"
															},
															"nativeSrc": "1963:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "1963:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1857:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1857:127:18"
											},
											{
												"body": {
													"nativeSrc": "2085:983:18",
													"nodeType": "YulBlock",
													"src": "2085:983:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2131:16:18",
																"nodeType": "YulBlock",
																"src": "2131:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2140:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2140:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2143:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2143:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2133:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:18"
																			},
																			"nativeSrc": "2133:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2133:12:18"
																		},
																		"nativeSrc": "2133:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2106:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2106:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2115:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2115:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2102:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2102:3:18"
																		},
																		"nativeSrc": "2102:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2102:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2127:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2127:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2098:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2098:3:18"
																},
																"nativeSrc": "2098:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2098:32:18"
															},
															"nativeSrc": "2095:52:18",
															"nodeType": "YulIf",
															"src": "2095:52:18"
														},
														{
															"nativeSrc": "2156:36:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2156:36:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2182:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2182:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2169:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2169:12:18"
																},
																"nativeSrc": "2169:23:18",
																"nodeType": "YulFunctionCall",
																"src": "2169:23:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2160:5:18",
																	"nodeType": "YulTypedName",
																	"src": "2160:5:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2226:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2226:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2201:24:18",
																	"nodeType": "YulIdentifier",
																	"src": "2201:24:18"
																},
																"nativeSrc": "2201:31:18",
																"nodeType": "YulFunctionCall",
																"src": "2201:31:18"
															},
															"nativeSrc": "2201:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "2201:31:18"
														},
														{
															"nativeSrc": "2241:15:18",
															"nodeType": "YulAssignment",
															"src": "2241:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:18",
																"nodeType": "YulIdentifier",
																"src": "2251:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2241:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2241:6:18"
																}
															]
														},
														{
															"nativeSrc": "2265:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2265:46:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2296:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2296:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2307:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2307:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2292:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2292:3:18"
																		},
																		"nativeSrc": "2292:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2292:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2279:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2279:12:18"
																},
																"nativeSrc": "2279:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2279:32:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2269:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2269:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2354:16:18",
																"nodeType": "YulBlock",
																"src": "2354:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2363:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2363:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2366:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2366:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2356:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2356:6:18"
																			},
																			"nativeSrc": "2356:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2356:12:18"
																		},
																		"nativeSrc": "2356:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2356:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2326:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2326:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2334:18:18",
																		"nodeType": "YulLiteral",
																		"src": "2334:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2323:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2323:2:18"
																},
																"nativeSrc": "2323:30:18",
																"nodeType": "YulFunctionCall",
																"src": "2323:30:18"
															},
															"nativeSrc": "2320:50:18",
															"nodeType": "YulIf",
															"src": "2320:50:18"
														},
														{
															"nativeSrc": "2379:32:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2379:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2393:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2393:9:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2404:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2404:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2389:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2389:3:18"
																},
																"nativeSrc": "2389:22:18",
																"nodeType": "YulFunctionCall",
																"src": "2389:22:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2383:2:18",
																	"nodeType": "YulTypedName",
																	"src": "2383:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2459:16:18",
																"nodeType": "YulBlock",
																"src": "2459:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2468:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2468:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2471:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2471:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2461:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2461:6:18"
																			},
																			"nativeSrc": "2461:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2461:12:18"
																		},
																		"nativeSrc": "2461:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2461:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2438:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "2438:2:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2442:4:18",
																						"nodeType": "YulLiteral",
																						"src": "2442:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2434:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2434:3:18"
																				},
																				"nativeSrc": "2434:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2434:13:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2449:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2449:7:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2430:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:18"
																		},
																		"nativeSrc": "2430:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2430:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2423:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2423:6:18"
																},
																"nativeSrc": "2423:35:18",
																"nodeType": "YulFunctionCall",
																"src": "2423:35:18"
															},
															"nativeSrc": "2420:55:18",
															"nodeType": "YulIf",
															"src": "2420:55:18"
														},
														{
															"nativeSrc": "2484:30:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2484:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2511:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "2511:2:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2498:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2498:12:18"
																},
																"nativeSrc": "2498:16:18",
																"nodeType": "YulFunctionCall",
																"src": "2498:16:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2488:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2488:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2557:22:18",
																"nodeType": "YulBlock",
																"src": "2557:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2559:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "2559:16:18"
																			},
																			"nativeSrc": "2559:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2559:18:18"
																		},
																		"nativeSrc": "2559:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2559:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2529:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2529:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2537:18:18",
																		"nodeType": "YulLiteral",
																		"src": "2537:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2526:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2526:2:18"
																},
																"nativeSrc": "2526:30:18",
																"nodeType": "YulFunctionCall",
																"src": "2526:30:18"
															},
															"nativeSrc": "2523:56:18",
															"nodeType": "YulIf",
															"src": "2523:56:18"
														},
														{
															"nativeSrc": "2588:23:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2588:23:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2608:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2608:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2602:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2602:5:18"
																},
																"nativeSrc": "2602:9:18",
																"nodeType": "YulFunctionCall",
																"src": "2602:9:18"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2592:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2592:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2620:85:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2620:85:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2642:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2642:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "2666:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "2666:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2674:4:18",
																										"nodeType": "YulLiteral",
																										"src": "2674:4:18",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2662:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "2662:3:18"
																								},
																								"nativeSrc": "2662:17:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2662:17:18"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2685:2:18",
																										"nodeType": "YulLiteral",
																										"src": "2685:2:18",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2681:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "2681:3:18"
																								},
																								"nativeSrc": "2681:7:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2681:7:18"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2658:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "2658:3:18"
																						},
																						"nativeSrc": "2658:31:18",
																						"nodeType": "YulFunctionCall",
																						"src": "2658:31:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2691:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2691:2:18",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2654:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2654:3:18"
																				},
																				"nativeSrc": "2654:40:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2654:40:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2700:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2700:2:18",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2696:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2696:3:18"
																				},
																				"nativeSrc": "2696:7:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2696:7:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2650:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2650:3:18"
																		},
																		"nativeSrc": "2650:54:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2650:54:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2638:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2638:3:18"
																},
																"nativeSrc": "2638:67:18",
																"nodeType": "YulFunctionCall",
																"src": "2638:67:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2624:10:18",
																	"nodeType": "YulTypedName",
																	"src": "2624:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2780:22:18",
																"nodeType": "YulBlock",
																"src": "2780:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2782:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "2782:16:18"
																			},
																			"nativeSrc": "2782:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2782:18:18"
																		},
																		"nativeSrc": "2782:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2782:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2723:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "2723:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2735:18:18",
																				"nodeType": "YulLiteral",
																				"src": "2735:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2720:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2720:2:18"
																		},
																		"nativeSrc": "2720:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2720:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2759:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "2759:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2771:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2771:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2756:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2756:2:18"
																		},
																		"nativeSrc": "2756:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2756:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2717:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2717:2:18"
																},
																"nativeSrc": "2717:62:18",
																"nodeType": "YulFunctionCall",
																"src": "2717:62:18"
															},
															"nativeSrc": "2714:88:18",
															"nodeType": "YulIf",
															"src": "2714:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2818:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2818:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2822:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "2822:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2811:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2811:6:18"
																},
																"nativeSrc": "2811:22:18",
																"nodeType": "YulFunctionCall",
																"src": "2811:22:18"
															},
															"nativeSrc": "2811:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "2811:22:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2849:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2849:6:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2857:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2857:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2842:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2842:6:18"
																},
																"nativeSrc": "2842:22:18",
																"nodeType": "YulFunctionCall",
																"src": "2842:22:18"
															},
															"nativeSrc": "2842:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "2842:22:18"
														},
														{
															"body": {
																"nativeSrc": "2914:16:18",
																"nodeType": "YulBlock",
																"src": "2914:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2923:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2923:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2926:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2926:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2916:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2916:6:18"
																			},
																			"nativeSrc": "2916:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2916:12:18"
																		},
																		"nativeSrc": "2916:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2916:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2887:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "2887:2:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2891:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2891:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2883:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2883:3:18"
																				},
																				"nativeSrc": "2883:15:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2883:15:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2900:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2900:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2879:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2879:3:18"
																		},
																		"nativeSrc": "2879:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2879:24:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2905:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "2905:7:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2876:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2876:2:18"
																},
																"nativeSrc": "2876:37:18",
																"nodeType": "YulFunctionCall",
																"src": "2876:37:18"
															},
															"nativeSrc": "2873:57:18",
															"nodeType": "YulIf",
															"src": "2873:57:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2956:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2956:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2964:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2964:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2952:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:18"
																		},
																		"nativeSrc": "2952:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2952:15:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2973:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "2973:2:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2977:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2969:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2969:3:18"
																		},
																		"nativeSrc": "2969:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2969:11:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2982:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2982:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2939:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2939:12:18"
																},
																"nativeSrc": "2939:50:18",
																"nodeType": "YulFunctionCall",
																"src": "2939:50:18"
															},
															"nativeSrc": "2939:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "2939:50:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3013:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3013:6:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3021:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3021:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3009:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3009:3:18"
																				},
																				"nativeSrc": "3009:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3009:19:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3030:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3030:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3005:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:18"
																		},
																		"nativeSrc": "3005:28:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3005:28:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3035:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2998:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2998:6:18"
																},
																"nativeSrc": "2998:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2998:39:18"
															},
															"nativeSrc": "2998:39:18",
															"nodeType": "YulExpressionStatement",
															"src": "2998:39:18"
														},
														{
															"nativeSrc": "3046:16:18",
															"nodeType": "YulAssignment",
															"src": "3046:16:18",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3056:6:18",
																"nodeType": "YulIdentifier",
																"src": "3056:6:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3046:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3046:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "1989:1079:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2043:9:18",
														"nodeType": "YulTypedName",
														"src": "2043:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2054:7:18",
														"nodeType": "YulTypedName",
														"src": "2054:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2066:6:18",
														"nodeType": "YulTypedName",
														"src": "2066:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2074:6:18",
														"nodeType": "YulTypedName",
														"src": "2074:6:18",
														"type": ""
													}
												],
												"src": "1989:1079:18"
											},
											{
												"body": {
													"nativeSrc": "3160:259:18",
													"nodeType": "YulBlock",
													"src": "3160:259:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3206:16:18",
																"nodeType": "YulBlock",
																"src": "3206:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3215:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3215:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3218:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3218:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3208:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3208:6:18"
																			},
																			"nativeSrc": "3208:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3208:12:18"
																		},
																		"nativeSrc": "3208:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3208:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3181:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3181:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3190:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3190:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3177:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3177:3:18"
																		},
																		"nativeSrc": "3177:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3177:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3202:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3202:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3173:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3173:3:18"
																},
																"nativeSrc": "3173:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3173:32:18"
															},
															"nativeSrc": "3170:52:18",
															"nodeType": "YulIf",
															"src": "3170:52:18"
														},
														{
															"nativeSrc": "3231:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3231:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "3244:1:18",
																"nodeType": "YulLiteral",
																"src": "3244:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3235:5:18",
																	"nodeType": "YulTypedName",
																	"src": "3235:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3254:32:18",
															"nodeType": "YulAssignment",
															"src": "3254:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3276:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3276:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3263:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3263:12:18"
																},
																"nativeSrc": "3263:23:18",
																"nodeType": "YulFunctionCall",
																"src": "3263:23:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3254:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3254:5:18"
																}
															]
														},
														{
															"nativeSrc": "3295:15:18",
															"nodeType": "YulAssignment",
															"src": "3295:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "3305:5:18",
																"nodeType": "YulIdentifier",
																"src": "3305:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3295:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3295:6:18"
																}
															]
														},
														{
															"nativeSrc": "3319:16:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3319:16:18",
															"value": {
																"kind": "number",
																"nativeSrc": "3334:1:18",
																"nodeType": "YulLiteral",
																"src": "3334:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3323:7:18",
																	"nodeType": "YulTypedName",
																	"src": "3323:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3344:43:18",
															"nodeType": "YulAssignment",
															"src": "3344:43:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3372:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3372:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3383:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3383:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3368:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3368:3:18"
																		},
																		"nativeSrc": "3368:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3355:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3355:12:18"
																},
																"nativeSrc": "3355:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3355:32:18"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3344:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3344:7:18"
																}
															]
														},
														{
															"nativeSrc": "3396:17:18",
															"nodeType": "YulAssignment",
															"src": "3396:17:18",
															"value": {
																"name": "value_1",
																"nativeSrc": "3406:7:18",
																"nodeType": "YulIdentifier",
																"src": "3406:7:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3396:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3073:346:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3118:9:18",
														"nodeType": "YulTypedName",
														"src": "3118:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3129:7:18",
														"nodeType": "YulTypedName",
														"src": "3129:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3141:6:18",
														"nodeType": "YulTypedName",
														"src": "3141:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3149:6:18",
														"nodeType": "YulTypedName",
														"src": "3149:6:18",
														"type": ""
													}
												],
												"src": "3073:346:18"
											},
											{
												"body": {
													"nativeSrc": "3525:76:18",
													"nodeType": "YulBlock",
													"src": "3525:76:18",
													"statements": [
														{
															"nativeSrc": "3535:26:18",
															"nodeType": "YulAssignment",
															"src": "3535:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3547:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3547:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3558:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3558:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3543:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3543:3:18"
																},
																"nativeSrc": "3543:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3543:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3535:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3535:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3577:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3577:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3588:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3588:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3570:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:18"
																},
																"nativeSrc": "3570:25:18",
																"nodeType": "YulFunctionCall",
																"src": "3570:25:18"
															},
															"nativeSrc": "3570:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "3570:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3424:177:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3494:9:18",
														"nodeType": "YulTypedName",
														"src": "3494:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3505:6:18",
														"nodeType": "YulTypedName",
														"src": "3505:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3516:4:18",
														"nodeType": "YulTypedName",
														"src": "3516:4:18",
														"type": ""
													}
												],
												"src": "3424:177:18"
											},
											{
												"body": {
													"nativeSrc": "3744:633:18",
													"nodeType": "YulBlock",
													"src": "3744:633:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3791:16:18",
																"nodeType": "YulBlock",
																"src": "3791:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3800:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3800:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3803:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3803:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3793:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3793:6:18"
																			},
																			"nativeSrc": "3793:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3793:12:18"
																		},
																		"nativeSrc": "3793:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3793:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3765:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3765:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3774:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3774:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3761:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:18"
																		},
																		"nativeSrc": "3761:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:3:18",
																		"nodeType": "YulLiteral",
																		"src": "3786:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3757:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3757:3:18"
																},
																"nativeSrc": "3757:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3757:33:18"
															},
															"nativeSrc": "3754:53:18",
															"nodeType": "YulIf",
															"src": "3754:53:18"
														},
														{
															"nativeSrc": "3816:36:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3816:36:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3842:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3842:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3829:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3829:12:18"
																},
																"nativeSrc": "3829:23:18",
																"nodeType": "YulFunctionCall",
																"src": "3829:23:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3820:5:18",
																	"nodeType": "YulTypedName",
																	"src": "3820:5:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3886:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3886:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3861:24:18",
																	"nodeType": "YulIdentifier",
																	"src": "3861:24:18"
																},
																"nativeSrc": "3861:31:18",
																"nodeType": "YulFunctionCall",
																"src": "3861:31:18"
															},
															"nativeSrc": "3861:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "3861:31:18"
														},
														{
															"nativeSrc": "3901:15:18",
															"nodeType": "YulAssignment",
															"src": "3901:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "3911:5:18",
																"nodeType": "YulIdentifier",
																"src": "3911:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3901:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3901:6:18"
																}
															]
														},
														{
															"nativeSrc": "3925:47:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3925:47:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3957:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3957:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3968:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3968:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3953:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3953:3:18"
																		},
																		"nativeSrc": "3953:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3953:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3940:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3940:12:18"
																},
																"nativeSrc": "3940:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3940:32:18"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3929:7:18",
																	"nodeType": "YulTypedName",
																	"src": "3929:7:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "4006:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "4006:7:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3981:24:18",
																	"nodeType": "YulIdentifier",
																	"src": "3981:24:18"
																},
																"nativeSrc": "3981:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3981:33:18"
															},
															"nativeSrc": "3981:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "3981:33:18"
														},
														{
															"nativeSrc": "4023:17:18",
															"nodeType": "YulAssignment",
															"src": "4023:17:18",
															"value": {
																"name": "value_1",
																"nativeSrc": "4033:7:18",
																"nodeType": "YulIdentifier",
																"src": "4033:7:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4023:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4023:6:18"
																}
															]
														},
														{
															"nativeSrc": "4049:47:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4049:47:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4081:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4081:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4092:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4092:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4077:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4077:3:18"
																		},
																		"nativeSrc": "4077:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4077:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4064:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4064:12:18"
																},
																"nativeSrc": "4064:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4064:32:18"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "4053:7:18",
																	"nodeType": "YulTypedName",
																	"src": "4053:7:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "4130:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "4130:7:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4105:24:18",
																	"nodeType": "YulIdentifier",
																	"src": "4105:24:18"
																},
																"nativeSrc": "4105:33:18",
																"nodeType": "YulFunctionCall",
																"src": "4105:33:18"
															},
															"nativeSrc": "4105:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "4105:33:18"
														},
														{
															"nativeSrc": "4147:17:18",
															"nodeType": "YulAssignment",
															"src": "4147:17:18",
															"value": {
																"name": "value_2",
																"nativeSrc": "4157:7:18",
																"nodeType": "YulIdentifier",
																"src": "4157:7:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4147:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4147:6:18"
																}
															]
														},
														{
															"nativeSrc": "4173:16:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4173:16:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4188:1:18",
																"nodeType": "YulLiteral",
																"src": "4188:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "4177:7:18",
																	"nodeType": "YulTypedName",
																	"src": "4177:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4198:43:18",
															"nodeType": "YulAssignment",
															"src": "4198:43:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4226:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4226:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4237:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4237:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4222:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4222:3:18"
																		},
																		"nativeSrc": "4222:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4222:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4209:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4209:12:18"
																},
																"nativeSrc": "4209:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4209:32:18"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "4198:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "4198:7:18"
																}
															]
														},
														{
															"nativeSrc": "4250:17:18",
															"nodeType": "YulAssignment",
															"src": "4250:17:18",
															"value": {
																"name": "value_3",
																"nativeSrc": "4260:7:18",
																"nodeType": "YulIdentifier",
																"src": "4260:7:18"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4250:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4250:6:18"
																}
															]
														},
														{
															"nativeSrc": "4276:16:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4276:16:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4291:1:18",
																"nodeType": "YulLiteral",
																"src": "4291:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "4280:7:18",
																	"nodeType": "YulTypedName",
																	"src": "4280:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4301:44:18",
															"nodeType": "YulAssignment",
															"src": "4301:44:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4329:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4329:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4340:3:18",
																				"nodeType": "YulLiteral",
																				"src": "4340:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4325:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4325:3:18"
																		},
																		"nativeSrc": "4325:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4325:19:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4312:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4312:12:18"
																},
																"nativeSrc": "4312:33:18",
																"nodeType": "YulFunctionCall",
																"src": "4312:33:18"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "4301:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "4301:7:18"
																}
															]
														},
														{
															"nativeSrc": "4354:17:18",
															"nodeType": "YulAssignment",
															"src": "4354:17:18",
															"value": {
																"name": "value_4",
																"nativeSrc": "4364:7:18",
																"nodeType": "YulIdentifier",
																"src": "4364:7:18"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4354:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256",
												"nativeSrc": "3606:771:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3678:9:18",
														"nodeType": "YulTypedName",
														"src": "3678:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3689:7:18",
														"nodeType": "YulTypedName",
														"src": "3689:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3701:6:18",
														"nodeType": "YulTypedName",
														"src": "3701:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3709:6:18",
														"nodeType": "YulTypedName",
														"src": "3709:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3717:6:18",
														"nodeType": "YulTypedName",
														"src": "3717:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3725:6:18",
														"nodeType": "YulTypedName",
														"src": "3725:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3733:6:18",
														"nodeType": "YulTypedName",
														"src": "3733:6:18",
														"type": ""
													}
												],
												"src": "3606:771:18"
											},
											{
												"body": {
													"nativeSrc": "4503:297:18",
													"nodeType": "YulBlock",
													"src": "4503:297:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4520:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4520:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4531:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4531:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4513:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4513:6:18"
																},
																"nativeSrc": "4513:21:18",
																"nodeType": "YulFunctionCall",
																"src": "4513:21:18"
															},
															"nativeSrc": "4513:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "4513:21:18"
														},
														{
															"nativeSrc": "4543:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4543:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4563:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4563:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4557:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4557:5:18"
																},
																"nativeSrc": "4557:13:18",
																"nodeType": "YulFunctionCall",
																"src": "4557:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4547:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4547:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4590:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4590:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4601:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4601:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4586:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4586:3:18"
																		},
																		"nativeSrc": "4586:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4586:18:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4606:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4606:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4579:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4579:6:18"
																},
																"nativeSrc": "4579:34:18",
																"nodeType": "YulFunctionCall",
																"src": "4579:34:18"
															},
															"nativeSrc": "4579:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "4579:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4632:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4632:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4643:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4643:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4628:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4628:3:18"
																		},
																		"nativeSrc": "4628:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4628:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4652:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4652:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4660:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4660:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4648:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4648:3:18"
																		},
																		"nativeSrc": "4648:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4648:15:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4665:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4665:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4622:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4622:5:18"
																},
																"nativeSrc": "4622:50:18",
																"nodeType": "YulFunctionCall",
																"src": "4622:50:18"
															},
															"nativeSrc": "4622:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "4622:50:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4696:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4696:9:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4707:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4707:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4692:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4692:3:18"
																				},
																				"nativeSrc": "4692:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4692:22:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4716:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4716:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4688:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4688:3:18"
																		},
																		"nativeSrc": "4688:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4688:31:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4721:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4721:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4681:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4681:6:18"
																},
																"nativeSrc": "4681:42:18",
																"nodeType": "YulFunctionCall",
																"src": "4681:42:18"
															},
															"nativeSrc": "4681:42:18",
															"nodeType": "YulExpressionStatement",
															"src": "4681:42:18"
														},
														{
															"nativeSrc": "4732:62:18",
															"nodeType": "YulAssignment",
															"src": "4732:62:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4748:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4748:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4767:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "4767:6:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4775:2:18",
																								"nodeType": "YulLiteral",
																								"src": "4775:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4763:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4763:3:18"
																						},
																						"nativeSrc": "4763:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4763:15:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4784:2:18",
																								"nodeType": "YulLiteral",
																								"src": "4784:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4780:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4780:3:18"
																						},
																						"nativeSrc": "4780:7:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4780:7:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4759:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4759:3:18"
																				},
																				"nativeSrc": "4759:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4759:29:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4744:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4744:3:18"
																		},
																		"nativeSrc": "4744:45:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4744:45:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4791:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4791:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4740:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4740:3:18"
																},
																"nativeSrc": "4740:54:18",
																"nodeType": "YulFunctionCall",
																"src": "4740:54:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4732:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4732:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4382:418:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4472:9:18",
														"nodeType": "YulTypedName",
														"src": "4472:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4483:6:18",
														"nodeType": "YulTypedName",
														"src": "4483:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4494:4:18",
														"nodeType": "YulTypedName",
														"src": "4494:4:18",
														"type": ""
													}
												],
												"src": "4382:418:18"
											},
											{
												"body": {
													"nativeSrc": "4889:283:18",
													"nodeType": "YulBlock",
													"src": "4889:283:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4938:16:18",
																"nodeType": "YulBlock",
																"src": "4938:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4947:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4947:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4950:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4950:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4940:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4940:6:18"
																			},
																			"nativeSrc": "4940:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4940:12:18"
																		},
																		"nativeSrc": "4940:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4940:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4917:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4917:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4925:4:18",
																						"nodeType": "YulLiteral",
																						"src": "4925:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4913:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4913:3:18"
																				},
																				"nativeSrc": "4913:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4913:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4932:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4932:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4909:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4909:3:18"
																		},
																		"nativeSrc": "4909:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4909:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4902:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:18"
																},
																"nativeSrc": "4902:35:18",
																"nodeType": "YulFunctionCall",
																"src": "4902:35:18"
															},
															"nativeSrc": "4899:55:18",
															"nodeType": "YulIf",
															"src": "4899:55:18"
														},
														{
															"nativeSrc": "4963:30:18",
															"nodeType": "YulAssignment",
															"src": "4963:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4986:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4986:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4973:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4973:12:18"
																},
																"nativeSrc": "4973:20:18",
																"nodeType": "YulFunctionCall",
																"src": "4973:20:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4963:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5036:16:18",
																"nodeType": "YulBlock",
																"src": "5036:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5045:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5045:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5048:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5048:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5038:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5038:6:18"
																			},
																			"nativeSrc": "5038:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:12:18"
																		},
																		"nativeSrc": "5038:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5008:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5008:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5016:18:18",
																		"nodeType": "YulLiteral",
																		"src": "5016:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5005:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5005:2:18"
																},
																"nativeSrc": "5005:30:18",
																"nodeType": "YulFunctionCall",
																"src": "5005:30:18"
															},
															"nativeSrc": "5002:50:18",
															"nodeType": "YulIf",
															"src": "5002:50:18"
														},
														{
															"nativeSrc": "5061:29:18",
															"nodeType": "YulAssignment",
															"src": "5061:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5077:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5077:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5085:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5085:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5073:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5073:3:18"
																},
																"nativeSrc": "5073:17:18",
																"nodeType": "YulFunctionCall",
																"src": "5073:17:18"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5061:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "5061:8:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5150:16:18",
																"nodeType": "YulBlock",
																"src": "5150:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5159:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5159:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5162:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5162:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5152:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5152:6:18"
																			},
																			"nativeSrc": "5152:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5152:12:18"
																		},
																		"nativeSrc": "5152:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5152:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5113:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5113:6:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5125:1:18",
																								"nodeType": "YulLiteral",
																								"src": "5125:1:18",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "5128:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "5128:6:18"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5121:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5121:3:18"
																						},
																						"nativeSrc": "5121:14:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5121:14:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5109:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5109:3:18"
																				},
																				"nativeSrc": "5109:27:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5109:27:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5138:4:18",
																				"nodeType": "YulLiteral",
																				"src": "5138:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5105:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5105:3:18"
																		},
																		"nativeSrc": "5105:38:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:38:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5145:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5145:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5102:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5102:2:18"
																},
																"nativeSrc": "5102:47:18",
																"nodeType": "YulFunctionCall",
																"src": "5102:47:18"
															},
															"nativeSrc": "5099:67:18",
															"nodeType": "YulIf",
															"src": "5099:67:18"
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn_calldata",
												"nativeSrc": "4805:367:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4852:6:18",
														"nodeType": "YulTypedName",
														"src": "4852:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4860:3:18",
														"nodeType": "YulTypedName",
														"src": "4860:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "4868:8:18",
														"nodeType": "YulTypedName",
														"src": "4868:8:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4878:6:18",
														"nodeType": "YulTypedName",
														"src": "4878:6:18",
														"type": ""
													}
												],
												"src": "4805:367:18"
											},
											{
												"body": {
													"nativeSrc": "5334:611:18",
													"nodeType": "YulBlock",
													"src": "5334:611:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5380:16:18",
																"nodeType": "YulBlock",
																"src": "5380:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5389:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5389:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5392:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5392:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5382:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5382:6:18"
																			},
																			"nativeSrc": "5382:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5382:12:18"
																		},
																		"nativeSrc": "5382:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5382:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5355:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5355:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5364:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5364:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5351:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5351:3:18"
																		},
																		"nativeSrc": "5351:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5351:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5376:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5376:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5347:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5347:3:18"
																},
																"nativeSrc": "5347:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5347:32:18"
															},
															"nativeSrc": "5344:52:18",
															"nodeType": "YulIf",
															"src": "5344:52:18"
														},
														{
															"nativeSrc": "5405:37:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5405:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5432:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5419:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5419:12:18"
																},
																"nativeSrc": "5419:23:18",
																"nodeType": "YulFunctionCall",
																"src": "5419:23:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5409:6:18",
																	"nodeType": "YulTypedName",
																	"src": "5409:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5485:16:18",
																"nodeType": "YulBlock",
																"src": "5485:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5494:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5494:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5497:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5497:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5487:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5487:6:18"
																			},
																			"nativeSrc": "5487:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5487:12:18"
																		},
																		"nativeSrc": "5487:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5487:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5457:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5457:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5465:18:18",
																		"nodeType": "YulLiteral",
																		"src": "5465:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5454:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5454:2:18"
																},
																"nativeSrc": "5454:30:18",
																"nodeType": "YulFunctionCall",
																"src": "5454:30:18"
															},
															"nativeSrc": "5451:50:18",
															"nodeType": "YulIf",
															"src": "5451:50:18"
														},
														{
															"nativeSrc": "5510:96:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5510:96:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5578:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5578:9:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5589:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5589:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5574:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5574:3:18"
																		},
																		"nativeSrc": "5574:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5574:22:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5598:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "5598:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nativeSrc": "5536:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "5536:37:18"
																},
																"nativeSrc": "5536:70:18",
																"nodeType": "YulFunctionCall",
																"src": "5536:70:18"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "5514:8:18",
																	"nodeType": "YulTypedName",
																	"src": "5514:8:18",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "5524:8:18",
																	"nodeType": "YulTypedName",
																	"src": "5524:8:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5615:18:18",
															"nodeType": "YulAssignment",
															"src": "5615:18:18",
															"value": {
																"name": "value0_1",
																"nativeSrc": "5625:8:18",
																"nodeType": "YulIdentifier",
																"src": "5625:8:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5615:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:18"
																}
															]
														},
														{
															"nativeSrc": "5642:18:18",
															"nodeType": "YulAssignment",
															"src": "5642:18:18",
															"value": {
																"name": "value1_1",
																"nativeSrc": "5652:8:18",
																"nodeType": "YulIdentifier",
																"src": "5652:8:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5642:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5642:6:18"
																}
															]
														},
														{
															"nativeSrc": "5669:48:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5669:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5702:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5702:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5713:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5713:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5698:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5698:3:18"
																		},
																		"nativeSrc": "5698:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5698:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5685:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5685:12:18"
																},
																"nativeSrc": "5685:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5685:32:18"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "5673:8:18",
																	"nodeType": "YulTypedName",
																	"src": "5673:8:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5762:16:18",
																"nodeType": "YulBlock",
																"src": "5762:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5771:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5771:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5774:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5774:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5764:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5764:6:18"
																			},
																			"nativeSrc": "5764:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5764:12:18"
																		},
																		"nativeSrc": "5764:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5764:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "5732:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "5732:8:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5742:18:18",
																		"nodeType": "YulLiteral",
																		"src": "5742:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5729:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5729:2:18"
																},
																"nativeSrc": "5729:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5729:32:18"
															},
															"nativeSrc": "5726:52:18",
															"nodeType": "YulIf",
															"src": "5726:52:18"
														},
														{
															"nativeSrc": "5787:98:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5787:98:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5855:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5855:9:18"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "5866:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "5866:8:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5851:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5851:3:18"
																		},
																		"nativeSrc": "5851:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5877:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "5877:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nativeSrc": "5813:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "5813:37:18"
																},
																"nativeSrc": "5813:72:18",
																"nodeType": "YulFunctionCall",
																"src": "5813:72:18"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "5791:8:18",
																	"nodeType": "YulTypedName",
																	"src": "5791:8:18",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "5801:8:18",
																	"nodeType": "YulTypedName",
																	"src": "5801:8:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5894:18:18",
															"nodeType": "YulAssignment",
															"src": "5894:18:18",
															"value": {
																"name": "value2_1",
																"nativeSrc": "5904:8:18",
																"nodeType": "YulIdentifier",
																"src": "5904:8:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5894:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5894:6:18"
																}
															]
														},
														{
															"nativeSrc": "5921:18:18",
															"nodeType": "YulAssignment",
															"src": "5921:18:18",
															"value": {
																"name": "value3_1",
																"nativeSrc": "5931:8:18",
																"nodeType": "YulIdentifier",
																"src": "5931:8:18"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5921:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "5177:768:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5276:9:18",
														"nodeType": "YulTypedName",
														"src": "5276:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5287:7:18",
														"nodeType": "YulTypedName",
														"src": "5287:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5299:6:18",
														"nodeType": "YulTypedName",
														"src": "5299:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5307:6:18",
														"nodeType": "YulTypedName",
														"src": "5307:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5315:6:18",
														"nodeType": "YulTypedName",
														"src": "5315:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5323:6:18",
														"nodeType": "YulTypedName",
														"src": "5323:6:18",
														"type": ""
													}
												],
												"src": "5177:768:18"
											},
											{
												"body": {
													"nativeSrc": "6191:320:18",
													"nodeType": "YulBlock",
													"src": "6191:320:18",
													"statements": [
														{
															"nativeSrc": "6201:27:18",
															"nodeType": "YulAssignment",
															"src": "6201:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6213:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6213:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6224:3:18",
																		"nodeType": "YulLiteral",
																		"src": "6224:3:18",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6209:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6209:3:18"
																},
																"nativeSrc": "6209:19:18",
																"nodeType": "YulFunctionCall",
																"src": "6209:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6201:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6201:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6244:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6244:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6255:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6255:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6237:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6237:6:18"
																},
																"nativeSrc": "6237:25:18",
																"nodeType": "YulFunctionCall",
																"src": "6237:25:18"
															},
															"nativeSrc": "6237:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "6237:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6282:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6282:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6293:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6293:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6278:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6278:3:18"
																		},
																		"nativeSrc": "6278:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6278:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6302:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6302:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6318:3:18",
																								"nodeType": "YulLiteral",
																								"src": "6318:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6323:1:18",
																								"nodeType": "YulLiteral",
																								"src": "6323:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6314:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "6314:3:18"
																						},
																						"nativeSrc": "6314:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "6314:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6327:1:18",
																						"nodeType": "YulLiteral",
																						"src": "6327:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6310:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6310:3:18"
																				},
																				"nativeSrc": "6310:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6310:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6298:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6298:3:18"
																		},
																		"nativeSrc": "6298:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6298:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6271:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6271:6:18"
																},
																"nativeSrc": "6271:60:18",
																"nodeType": "YulFunctionCall",
																"src": "6271:60:18"
															},
															"nativeSrc": "6271:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "6271:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6351:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6351:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6362:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6362:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6347:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6347:3:18"
																		},
																		"nativeSrc": "6347:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6347:18:18"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6367:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6367:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6340:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6340:6:18"
																},
																"nativeSrc": "6340:34:18",
																"nodeType": "YulFunctionCall",
																"src": "6340:34:18"
															},
															"nativeSrc": "6340:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "6340:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6394:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6394:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6405:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6405:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6390:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6390:3:18"
																		},
																		"nativeSrc": "6390:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6390:18:18"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "6410:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6410:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:18"
																},
																"nativeSrc": "6383:34:18",
																"nodeType": "YulFunctionCall",
																"src": "6383:34:18"
															},
															"nativeSrc": "6383:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "6383:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6437:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6437:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6448:3:18",
																				"nodeType": "YulLiteral",
																				"src": "6448:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6433:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6433:3:18"
																		},
																		"nativeSrc": "6433:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6433:19:18"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "6454:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6454:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6426:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6426:6:18"
																},
																"nativeSrc": "6426:35:18",
																"nodeType": "YulFunctionCall",
																"src": "6426:35:18"
															},
															"nativeSrc": "6426:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "6426:35:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6481:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6481:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6492:3:18",
																				"nodeType": "YulLiteral",
																				"src": "6492:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6477:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6477:3:18"
																		},
																		"nativeSrc": "6477:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6477:19:18"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "6498:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6498:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6470:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6470:6:18"
																},
																"nativeSrc": "6470:35:18",
																"nodeType": "YulFunctionCall",
																"src": "6470:35:18"
															},
															"nativeSrc": "6470:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "6470:35:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5950:561:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6120:9:18",
														"nodeType": "YulTypedName",
														"src": "6120:9:18",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6131:6:18",
														"nodeType": "YulTypedName",
														"src": "6131:6:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6139:6:18",
														"nodeType": "YulTypedName",
														"src": "6139:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6147:6:18",
														"nodeType": "YulTypedName",
														"src": "6147:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6155:6:18",
														"nodeType": "YulTypedName",
														"src": "6155:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6163:6:18",
														"nodeType": "YulTypedName",
														"src": "6163:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6171:6:18",
														"nodeType": "YulTypedName",
														"src": "6171:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6182:4:18",
														"nodeType": "YulTypedName",
														"src": "6182:4:18",
														"type": ""
													}
												],
												"src": "5950:561:18"
											},
											{
												"body": {
													"nativeSrc": "6690:176:18",
													"nodeType": "YulBlock",
													"src": "6690:176:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6707:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6707:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6718:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6718:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6700:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6700:6:18"
																},
																"nativeSrc": "6700:21:18",
																"nodeType": "YulFunctionCall",
																"src": "6700:21:18"
															},
															"nativeSrc": "6700:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "6700:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6741:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6741:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6752:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6752:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6737:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6737:3:18"
																		},
																		"nativeSrc": "6737:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6737:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6757:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6757:2:18",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6730:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6730:6:18"
																},
																"nativeSrc": "6730:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6730:30:18"
															},
															"nativeSrc": "6730:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "6730:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6780:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6780:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6791:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6791:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6776:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6776:3:18"
																		},
																		"nativeSrc": "6776:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6776:18:18"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572206f6620746865207374616b65",
																		"kind": "string",
																		"nativeSrc": "6796:28:18",
																		"nodeType": "YulLiteral",
																		"src": "6796:28:18",
																		"type": "",
																		"value": "Not the owner of the stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6769:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6769:6:18"
																},
																"nativeSrc": "6769:56:18",
																"nodeType": "YulFunctionCall",
																"src": "6769:56:18"
															},
															"nativeSrc": "6769:56:18",
															"nodeType": "YulExpressionStatement",
															"src": "6769:56:18"
														},
														{
															"nativeSrc": "6834:26:18",
															"nodeType": "YulAssignment",
															"src": "6834:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6846:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6846:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6857:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6857:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6842:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6842:3:18"
																},
																"nativeSrc": "6842:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6842:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6834:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6834:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2e0b264ccf675e173c230596ff7ecba0dd7a1c403648e17c6ce7c079df5e7ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6516:350:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6667:9:18",
														"nodeType": "YulTypedName",
														"src": "6667:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6681:4:18",
														"nodeType": "YulTypedName",
														"src": "6681:4:18",
														"type": ""
													}
												],
												"src": "6516:350:18"
											},
											{
												"body": {
													"nativeSrc": "7045:172:18",
													"nodeType": "YulBlock",
													"src": "7045:172:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7062:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7062:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7073:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7073:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7055:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7055:6:18"
																},
																"nativeSrc": "7055:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7055:21:18"
															},
															"nativeSrc": "7055:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "7055:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7096:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7096:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7107:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7107:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7092:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7092:3:18"
																		},
																		"nativeSrc": "7092:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7092:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7112:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7112:2:18",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7085:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7085:6:18"
																},
																"nativeSrc": "7085:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7085:30:18"
															},
															"nativeSrc": "7085:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7085:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7135:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7135:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7146:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7146:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7131:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7131:3:18"
																		},
																		"nativeSrc": "7131:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7131:18:18"
																	},
																	{
																		"hexValue": "546f6b656e20616c726561647920756e7374616b6564",
																		"kind": "string",
																		"nativeSrc": "7151:24:18",
																		"nodeType": "YulLiteral",
																		"src": "7151:24:18",
																		"type": "",
																		"value": "Token already unstaked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7124:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7124:6:18"
																},
																"nativeSrc": "7124:52:18",
																"nodeType": "YulFunctionCall",
																"src": "7124:52:18"
															},
															"nativeSrc": "7124:52:18",
															"nodeType": "YulExpressionStatement",
															"src": "7124:52:18"
														},
														{
															"nativeSrc": "7185:26:18",
															"nodeType": "YulAssignment",
															"src": "7185:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7197:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7197:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7208:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7208:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7193:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7193:3:18"
																},
																"nativeSrc": "7193:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7193:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7185:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7185:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cfbc489d0add4380fb0a9331116e14e9d245825f5265e05f9ad04c1d23417c73__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6871:346:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7022:9:18",
														"nodeType": "YulTypedName",
														"src": "7022:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7036:4:18",
														"nodeType": "YulTypedName",
														"src": "7036:4:18",
														"type": ""
													}
												],
												"src": "6871:346:18"
											},
											{
												"body": {
													"nativeSrc": "7254:95:18",
													"nodeType": "YulBlock",
													"src": "7254:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7271:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7271:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7278:3:18",
																				"nodeType": "YulLiteral",
																				"src": "7278:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7283:10:18",
																				"nodeType": "YulLiteral",
																				"src": "7283:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7274:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7274:3:18"
																		},
																		"nativeSrc": "7274:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7274:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7264:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7264:6:18"
																},
																"nativeSrc": "7264:31:18",
																"nodeType": "YulFunctionCall",
																"src": "7264:31:18"
															},
															"nativeSrc": "7264:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "7264:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7311:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7311:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7314:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7314:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7304:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7304:6:18"
																},
																"nativeSrc": "7304:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7304:15:18"
															},
															"nativeSrc": "7304:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "7304:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7335:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7335:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7338:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7338:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7328:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7328:6:18"
																},
																"nativeSrc": "7328:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7328:15:18"
															},
															"nativeSrc": "7328:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "7328:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7222:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "7222:127:18"
											},
											{
												"body": {
													"nativeSrc": "7403:79:18",
													"nodeType": "YulBlock",
													"src": "7403:79:18",
													"statements": [
														{
															"nativeSrc": "7413:17:18",
															"nodeType": "YulAssignment",
															"src": "7413:17:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7425:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7425:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7428:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7428:1:18"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7421:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7421:3:18"
																},
																"nativeSrc": "7421:9:18",
																"nodeType": "YulFunctionCall",
																"src": "7421:9:18"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7413:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7413:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7454:22:18",
																"nodeType": "YulBlock",
																"src": "7454:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7456:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "7456:16:18"
																			},
																			"nativeSrc": "7456:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7456:18:18"
																		},
																		"nativeSrc": "7456:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7456:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7445:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7445:4:18"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7451:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7451:1:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7442:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7442:2:18"
																},
																"nativeSrc": "7442:11:18",
																"nodeType": "YulFunctionCall",
																"src": "7442:11:18"
															},
															"nativeSrc": "7439:37:18",
															"nodeType": "YulIf",
															"src": "7439:37:18"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7354:128:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7385:1:18",
														"nodeType": "YulTypedName",
														"src": "7385:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7388:1:18",
														"nodeType": "YulTypedName",
														"src": "7388:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7394:4:18",
														"nodeType": "YulTypedName",
														"src": "7394:4:18",
														"type": ""
													}
												],
												"src": "7354:128:18"
											},
											{
												"body": {
													"nativeSrc": "7661:172:18",
													"nodeType": "YulBlock",
													"src": "7661:172:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7678:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7678:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7689:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7689:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7671:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7671:6:18"
																},
																"nativeSrc": "7671:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7671:21:18"
															},
															"nativeSrc": "7671:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "7671:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7712:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7712:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7723:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7723:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7708:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:18"
																		},
																		"nativeSrc": "7708:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7728:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7728:2:18",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7701:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7701:6:18"
																},
																"nativeSrc": "7701:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7701:30:18"
															},
															"nativeSrc": "7701:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7701:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7751:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7751:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7762:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7762:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7747:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7747:3:18"
																		},
																		"nativeSrc": "7747:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7747:18:18"
																	},
																	{
																		"hexValue": "5374616b696e6720706572696f64206e6f74206d6574",
																		"kind": "string",
																		"nativeSrc": "7767:24:18",
																		"nodeType": "YulLiteral",
																		"src": "7767:24:18",
																		"type": "",
																		"value": "Staking period not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7740:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7740:6:18"
																},
																"nativeSrc": "7740:52:18",
																"nodeType": "YulFunctionCall",
																"src": "7740:52:18"
															},
															"nativeSrc": "7740:52:18",
															"nodeType": "YulExpressionStatement",
															"src": "7740:52:18"
														},
														{
															"nativeSrc": "7801:26:18",
															"nodeType": "YulAssignment",
															"src": "7801:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7813:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7813:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7824:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7824:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7809:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7809:3:18"
																},
																"nativeSrc": "7809:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7809:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7801:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7801:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbed3010ef2ca5a7950ddcaceee490947e7e5814a0c73147fbe9a8dd3ac26daa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7487:346:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7638:9:18",
														"nodeType": "YulTypedName",
														"src": "7638:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7652:4:18",
														"nodeType": "YulTypedName",
														"src": "7652:4:18",
														"type": ""
													}
												],
												"src": "7487:346:18"
											},
											{
												"body": {
													"nativeSrc": "7890:116:18",
													"nodeType": "YulBlock",
													"src": "7890:116:18",
													"statements": [
														{
															"nativeSrc": "7900:20:18",
															"nodeType": "YulAssignment",
															"src": "7900:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7915:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7915:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7918:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7918:1:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7911:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7911:3:18"
																},
																"nativeSrc": "7911:9:18",
																"nodeType": "YulFunctionCall",
																"src": "7911:9:18"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7900:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "7900:7:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7978:22:18",
																"nodeType": "YulBlock",
																"src": "7978:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7980:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "7980:16:18"
																			},
																			"nativeSrc": "7980:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7980:18:18"
																		},
																		"nativeSrc": "7980:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7980:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7949:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "7949:1:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7942:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7942:6:18"
																				},
																				"nativeSrc": "7942:9:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7942:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7956:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "7956:1:18"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7963:7:18",
																								"nodeType": "YulIdentifier",
																								"src": "7963:7:18"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7972:1:18",
																								"nodeType": "YulIdentifier",
																								"src": "7972:1:18"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7959:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "7959:3:18"
																						},
																						"nativeSrc": "7959:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "7959:15:18"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7953:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "7953:2:18"
																				},
																				"nativeSrc": "7953:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7953:22:18"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7939:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "7939:2:18"
																		},
																		"nativeSrc": "7939:37:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7939:37:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7932:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7932:6:18"
																},
																"nativeSrc": "7932:45:18",
																"nodeType": "YulFunctionCall",
																"src": "7932:45:18"
															},
															"nativeSrc": "7929:71:18",
															"nodeType": "YulIf",
															"src": "7929:71:18"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7838:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7869:1:18",
														"nodeType": "YulTypedName",
														"src": "7869:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7872:1:18",
														"nodeType": "YulTypedName",
														"src": "7872:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7878:7:18",
														"nodeType": "YulTypedName",
														"src": "7878:7:18",
														"type": ""
													}
												],
												"src": "7838:168:18"
											},
											{
												"body": {
													"nativeSrc": "8057:171:18",
													"nodeType": "YulBlock",
													"src": "8057:171:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8088:111:18",
																"nodeType": "YulBlock",
																"src": "8088:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8109:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8109:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8116:3:18",
																							"nodeType": "YulLiteral",
																							"src": "8116:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8121:10:18",
																							"nodeType": "YulLiteral",
																							"src": "8121:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8112:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "8112:3:18"
																					},
																					"nativeSrc": "8112:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8112:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8102:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8102:6:18"
																			},
																			"nativeSrc": "8102:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8102:31:18"
																		},
																		"nativeSrc": "8102:31:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8102:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8153:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8153:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8156:4:18",
																					"nodeType": "YulLiteral",
																					"src": "8156:4:18",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8146:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8146:6:18"
																			},
																			"nativeSrc": "8146:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8146:15:18"
																		},
																		"nativeSrc": "8146:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8146:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8181:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8181:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8184:4:18",
																					"nodeType": "YulLiteral",
																					"src": "8184:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8174:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8174:6:18"
																			},
																			"nativeSrc": "8174:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8174:15:18"
																		},
																		"nativeSrc": "8174:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8174:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8077:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "8077:1:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8070:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8070:6:18"
																},
																"nativeSrc": "8070:9:18",
																"nodeType": "YulFunctionCall",
																"src": "8070:9:18"
															},
															"nativeSrc": "8067:132:18",
															"nodeType": "YulIf",
															"src": "8067:132:18"
														},
														{
															"nativeSrc": "8208:14:18",
															"nodeType": "YulAssignment",
															"src": "8208:14:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8217:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "8217:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8220:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "8220:1:18"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8213:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8213:3:18"
																},
																"nativeSrc": "8213:9:18",
																"nodeType": "YulFunctionCall",
																"src": "8213:9:18"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8208:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "8208:1:18"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8011:217:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8042:1:18",
														"nodeType": "YulTypedName",
														"src": "8042:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8045:1:18",
														"nodeType": "YulTypedName",
														"src": "8045:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8051:1:18",
														"nodeType": "YulTypedName",
														"src": "8051:1:18",
														"type": ""
													}
												],
												"src": "8011:217:18"
											},
											{
												"body": {
													"nativeSrc": "8362:145:18",
													"nodeType": "YulBlock",
													"src": "8362:145:18",
													"statements": [
														{
															"nativeSrc": "8372:26:18",
															"nodeType": "YulAssignment",
															"src": "8372:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8384:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8384:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8395:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8395:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8380:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8380:3:18"
																},
																"nativeSrc": "8380:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8380:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8372:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8372:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8414:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8414:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8429:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8429:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8445:3:18",
																								"nodeType": "YulLiteral",
																								"src": "8445:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8450:1:18",
																								"nodeType": "YulLiteral",
																								"src": "8450:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8441:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "8441:3:18"
																						},
																						"nativeSrc": "8441:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "8441:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8454:1:18",
																						"nodeType": "YulLiteral",
																						"src": "8454:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8437:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8437:3:18"
																				},
																				"nativeSrc": "8437:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8437:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8425:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8425:3:18"
																		},
																		"nativeSrc": "8425:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8425:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8407:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8407:6:18"
																},
																"nativeSrc": "8407:51:18",
																"nodeType": "YulFunctionCall",
																"src": "8407:51:18"
															},
															"nativeSrc": "8407:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "8407:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8478:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8478:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8489:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8489:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8474:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8474:3:18"
																		},
																		"nativeSrc": "8474:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8474:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8494:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8494:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8467:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8467:6:18"
																},
																"nativeSrc": "8467:34:18",
																"nodeType": "YulFunctionCall",
																"src": "8467:34:18"
															},
															"nativeSrc": "8467:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "8467:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8233:274:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8323:9:18",
														"nodeType": "YulTypedName",
														"src": "8323:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8334:6:18",
														"nodeType": "YulTypedName",
														"src": "8334:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8342:6:18",
														"nodeType": "YulTypedName",
														"src": "8342:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8353:4:18",
														"nodeType": "YulTypedName",
														"src": "8353:4:18",
														"type": ""
													}
												],
												"src": "8233:274:18"
											},
											{
												"body": {
													"nativeSrc": "8590:199:18",
													"nodeType": "YulBlock",
													"src": "8590:199:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8636:16:18",
																"nodeType": "YulBlock",
																"src": "8636:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8645:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8645:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8648:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8648:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8638:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8638:6:18"
																			},
																			"nativeSrc": "8638:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8638:12:18"
																		},
																		"nativeSrc": "8638:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8638:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8611:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8611:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8620:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8620:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8607:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:18"
																		},
																		"nativeSrc": "8607:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8607:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8632:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8632:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8603:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8603:3:18"
																},
																"nativeSrc": "8603:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8603:32:18"
															},
															"nativeSrc": "8600:52:18",
															"nodeType": "YulIf",
															"src": "8600:52:18"
														},
														{
															"nativeSrc": "8661:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8661:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8680:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8680:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8674:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8674:5:18"
																},
																"nativeSrc": "8674:16:18",
																"nodeType": "YulFunctionCall",
																"src": "8674:16:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8665:5:18",
																	"nodeType": "YulTypedName",
																	"src": "8665:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8743:16:18",
																"nodeType": "YulBlock",
																"src": "8743:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8752:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8752:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8755:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8755:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8745:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8745:6:18"
																			},
																			"nativeSrc": "8745:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8745:12:18"
																		},
																		"nativeSrc": "8745:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8745:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8712:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8712:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "8733:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "8733:5:18"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "8726:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "8726:6:18"
																						},
																						"nativeSrc": "8726:13:18",
																						"nodeType": "YulFunctionCall",
																						"src": "8726:13:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8719:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "8719:6:18"
																				},
																				"nativeSrc": "8719:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8719:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8709:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8709:2:18"
																		},
																		"nativeSrc": "8709:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8709:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8702:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8702:6:18"
																},
																"nativeSrc": "8702:40:18",
																"nodeType": "YulFunctionCall",
																"src": "8702:40:18"
															},
															"nativeSrc": "8699:60:18",
															"nodeType": "YulIf",
															"src": "8699:60:18"
														},
														{
															"nativeSrc": "8768:15:18",
															"nodeType": "YulAssignment",
															"src": "8768:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "8778:5:18",
																"nodeType": "YulIdentifier",
																"src": "8778:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8768:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8768:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8512:277:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8556:9:18",
														"nodeType": "YulTypedName",
														"src": "8556:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8567:7:18",
														"nodeType": "YulTypedName",
														"src": "8567:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8579:6:18",
														"nodeType": "YulTypedName",
														"src": "8579:6:18",
														"type": ""
													}
												],
												"src": "8512:277:18"
											},
											{
												"body": {
													"nativeSrc": "8875:170:18",
													"nodeType": "YulBlock",
													"src": "8875:170:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8921:16:18",
																"nodeType": "YulBlock",
																"src": "8921:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8930:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8930:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8933:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8933:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8923:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8923:6:18"
																			},
																			"nativeSrc": "8923:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8923:12:18"
																		},
																		"nativeSrc": "8923:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8923:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8896:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8896:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8905:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8905:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8892:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8892:3:18"
																		},
																		"nativeSrc": "8892:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8892:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8917:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8917:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8888:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8888:3:18"
																},
																"nativeSrc": "8888:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8888:32:18"
															},
															"nativeSrc": "8885:52:18",
															"nodeType": "YulIf",
															"src": "8885:52:18"
														},
														{
															"nativeSrc": "8946:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8946:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8965:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8965:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8959:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8959:5:18"
																},
																"nativeSrc": "8959:16:18",
																"nodeType": "YulFunctionCall",
																"src": "8959:16:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8950:5:18",
																	"nodeType": "YulTypedName",
																	"src": "8950:5:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9009:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "9009:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "8984:24:18",
																	"nodeType": "YulIdentifier",
																	"src": "8984:24:18"
																},
																"nativeSrc": "8984:31:18",
																"nodeType": "YulFunctionCall",
																"src": "8984:31:18"
															},
															"nativeSrc": "8984:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "8984:31:18"
														},
														{
															"nativeSrc": "9024:15:18",
															"nodeType": "YulAssignment",
															"src": "9024:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "9034:5:18",
																"nodeType": "YulIdentifier",
																"src": "9034:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9024:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "8794:251:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8841:9:18",
														"nodeType": "YulTypedName",
														"src": "8841:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8852:7:18",
														"nodeType": "YulTypedName",
														"src": "8852:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8864:6:18",
														"nodeType": "YulTypedName",
														"src": "8864:6:18",
														"type": ""
													}
												],
												"src": "8794:251:18"
											},
											{
												"body": {
													"nativeSrc": "9207:214:18",
													"nodeType": "YulBlock",
													"src": "9207:214:18",
													"statements": [
														{
															"nativeSrc": "9217:26:18",
															"nodeType": "YulAssignment",
															"src": "9217:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9229:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9240:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9225:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:18"
																},
																"nativeSrc": "9225:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9225:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9217:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9217:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9259:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9259:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9274:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9274:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9290:3:18",
																								"nodeType": "YulLiteral",
																								"src": "9290:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9295:1:18",
																								"nodeType": "YulLiteral",
																								"src": "9295:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9286:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9286:3:18"
																						},
																						"nativeSrc": "9286:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9286:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9299:1:18",
																						"nodeType": "YulLiteral",
																						"src": "9299:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9282:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9282:3:18"
																				},
																				"nativeSrc": "9282:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9282:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9270:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9270:3:18"
																		},
																		"nativeSrc": "9270:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9270:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9252:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9252:6:18"
																},
																"nativeSrc": "9252:51:18",
																"nodeType": "YulFunctionCall",
																"src": "9252:51:18"
															},
															"nativeSrc": "9252:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "9252:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9323:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9323:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9334:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9334:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9319:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9319:3:18"
																		},
																		"nativeSrc": "9319:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9319:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9343:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9343:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9359:3:18",
																								"nodeType": "YulLiteral",
																								"src": "9359:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9364:1:18",
																								"nodeType": "YulLiteral",
																								"src": "9364:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9355:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9355:3:18"
																						},
																						"nativeSrc": "9355:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9355:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9368:1:18",
																						"nodeType": "YulLiteral",
																						"src": "9368:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9351:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9351:3:18"
																				},
																				"nativeSrc": "9351:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9351:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9339:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9339:3:18"
																		},
																		"nativeSrc": "9339:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9339:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9312:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:18"
																},
																"nativeSrc": "9312:60:18",
																"nodeType": "YulFunctionCall",
																"src": "9312:60:18"
															},
															"nativeSrc": "9312:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "9312:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9392:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9392:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9403:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9403:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9388:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9388:3:18"
																		},
																		"nativeSrc": "9388:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9388:18:18"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9408:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9408:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9381:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9381:6:18"
																},
																"nativeSrc": "9381:34:18",
																"nodeType": "YulFunctionCall",
																"src": "9381:34:18"
															},
															"nativeSrc": "9381:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "9381:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9050:371:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9160:9:18",
														"nodeType": "YulTypedName",
														"src": "9160:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9171:6:18",
														"nodeType": "YulTypedName",
														"src": "9171:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9179:6:18",
														"nodeType": "YulTypedName",
														"src": "9179:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9187:6:18",
														"nodeType": "YulTypedName",
														"src": "9187:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9198:4:18",
														"nodeType": "YulTypedName",
														"src": "9198:4:18",
														"type": ""
													}
												],
												"src": "9050:371:18"
											},
											{
												"body": {
													"nativeSrc": "9719:338:18",
													"nodeType": "YulBlock",
													"src": "9719:338:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9736:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9736:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9751:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9751:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9767:3:18",
																								"nodeType": "YulLiteral",
																								"src": "9767:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9772:1:18",
																								"nodeType": "YulLiteral",
																								"src": "9772:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9763:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9763:3:18"
																						},
																						"nativeSrc": "9763:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9763:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9776:1:18",
																						"nodeType": "YulLiteral",
																						"src": "9776:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9759:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9759:3:18"
																				},
																				"nativeSrc": "9759:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9759:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9747:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9747:3:18"
																		},
																		"nativeSrc": "9747:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9747:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9729:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9729:6:18"
																},
																"nativeSrc": "9729:51:18",
																"nodeType": "YulFunctionCall",
																"src": "9729:51:18"
															},
															"nativeSrc": "9729:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "9729:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9800:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9800:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9811:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9811:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9796:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9796:3:18"
																		},
																		"nativeSrc": "9796:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9796:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9820:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9820:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9836:3:18",
																								"nodeType": "YulLiteral",
																								"src": "9836:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9841:1:18",
																								"nodeType": "YulLiteral",
																								"src": "9841:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9832:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9832:3:18"
																						},
																						"nativeSrc": "9832:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9832:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9845:1:18",
																						"nodeType": "YulLiteral",
																						"src": "9845:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9828:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9828:3:18"
																				},
																				"nativeSrc": "9828:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9828:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9816:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9816:3:18"
																		},
																		"nativeSrc": "9816:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9816:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9789:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9789:6:18"
																},
																"nativeSrc": "9789:60:18",
																"nodeType": "YulFunctionCall",
																"src": "9789:60:18"
															},
															"nativeSrc": "9789:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "9789:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9869:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9869:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9880:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9880:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9865:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9865:3:18"
																		},
																		"nativeSrc": "9865:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9865:18:18"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9885:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9885:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9858:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9858:6:18"
																},
																"nativeSrc": "9858:34:18",
																"nodeType": "YulFunctionCall",
																"src": "9858:34:18"
															},
															"nativeSrc": "9858:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "9858:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9912:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9912:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9923:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9923:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9908:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9908:3:18"
																		},
																		"nativeSrc": "9908:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9908:18:18"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9928:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9928:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9901:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9901:6:18"
																},
																"nativeSrc": "9901:34:18",
																"nodeType": "YulFunctionCall",
																"src": "9901:34:18"
															},
															"nativeSrc": "9901:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "9901:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9955:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9955:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9966:3:18",
																				"nodeType": "YulLiteral",
																				"src": "9966:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9951:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9951:3:18"
																		},
																		"nativeSrc": "9951:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9951:19:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9972:3:18",
																		"nodeType": "YulLiteral",
																		"src": "9972:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9944:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9944:6:18"
																},
																"nativeSrc": "9944:32:18",
																"nodeType": "YulFunctionCall",
																"src": "9944:32:18"
															},
															"nativeSrc": "9944:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "9944:32:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9996:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9996:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10007:3:18",
																				"nodeType": "YulLiteral",
																				"src": "10007:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9992:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9992:3:18"
																		},
																		"nativeSrc": "9992:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9992:19:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10013:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10013:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9985:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9985:6:18"
																},
																"nativeSrc": "9985:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9985:30:18"
															},
															"nativeSrc": "9985:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "9985:30:18"
														},
														{
															"nativeSrc": "10024:27:18",
															"nodeType": "YulAssignment",
															"src": "10024:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10036:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10036:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10047:3:18",
																		"nodeType": "YulLiteral",
																		"src": "10047:3:18",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10032:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10032:3:18"
																},
																"nativeSrc": "10032:19:18",
																"nodeType": "YulFunctionCall",
																"src": "10032:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10024:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10024:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9426:631:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9664:9:18",
														"nodeType": "YulTypedName",
														"src": "9664:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9675:6:18",
														"nodeType": "YulTypedName",
														"src": "9675:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9683:6:18",
														"nodeType": "YulTypedName",
														"src": "9683:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9691:6:18",
														"nodeType": "YulTypedName",
														"src": "9691:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9699:6:18",
														"nodeType": "YulTypedName",
														"src": "9699:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9710:4:18",
														"nodeType": "YulTypedName",
														"src": "9710:4:18",
														"type": ""
													}
												],
												"src": "9426:631:18"
											},
											{
												"body": {
													"nativeSrc": "10247:232:18",
													"nodeType": "YulBlock",
													"src": "10247:232:18",
													"statements": [
														{
															"nativeSrc": "10257:27:18",
															"nodeType": "YulAssignment",
															"src": "10257:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10269:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10269:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10280:3:18",
																		"nodeType": "YulLiteral",
																		"src": "10280:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10265:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10265:3:18"
																},
																"nativeSrc": "10265:19:18",
																"nodeType": "YulFunctionCall",
																"src": "10265:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10257:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10257:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10300:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "10311:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10311:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10293:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10293:6:18"
																},
																"nativeSrc": "10293:25:18",
																"nodeType": "YulFunctionCall",
																"src": "10293:25:18"
															},
															"nativeSrc": "10293:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "10293:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10338:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10338:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10349:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10349:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10334:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10334:3:18"
																		},
																		"nativeSrc": "10334:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10334:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10358:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10358:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10374:3:18",
																								"nodeType": "YulLiteral",
																								"src": "10374:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10379:1:18",
																								"nodeType": "YulLiteral",
																								"src": "10379:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10370:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "10370:3:18"
																						},
																						"nativeSrc": "10370:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "10370:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10383:1:18",
																						"nodeType": "YulLiteral",
																						"src": "10383:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10366:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10366:3:18"
																				},
																				"nativeSrc": "10366:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10366:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10354:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10354:3:18"
																		},
																		"nativeSrc": "10354:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10354:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10327:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10327:6:18"
																},
																"nativeSrc": "10327:60:18",
																"nodeType": "YulFunctionCall",
																"src": "10327:60:18"
															},
															"nativeSrc": "10327:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "10327:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10407:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10407:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10418:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10418:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10403:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10403:3:18"
																		},
																		"nativeSrc": "10403:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10403:18:18"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10423:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10423:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10396:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10396:6:18"
																},
																"nativeSrc": "10396:34:18",
																"nodeType": "YulFunctionCall",
																"src": "10396:34:18"
															},
															"nativeSrc": "10396:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "10396:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10450:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10450:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10461:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10461:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10446:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10446:3:18"
																		},
																		"nativeSrc": "10446:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10446:18:18"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "10466:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10466:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10439:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10439:6:18"
																},
																"nativeSrc": "10439:34:18",
																"nodeType": "YulFunctionCall",
																"src": "10439:34:18"
															},
															"nativeSrc": "10439:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "10439:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10062:417:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10192:9:18",
														"nodeType": "YulTypedName",
														"src": "10192:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10203:6:18",
														"nodeType": "YulTypedName",
														"src": "10203:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10211:6:18",
														"nodeType": "YulTypedName",
														"src": "10211:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10219:6:18",
														"nodeType": "YulTypedName",
														"src": "10219:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10227:6:18",
														"nodeType": "YulTypedName",
														"src": "10227:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10238:4:18",
														"nodeType": "YulTypedName",
														"src": "10238:4:18",
														"type": ""
													}
												],
												"src": "10062:417:18"
											},
											{
												"body": {
													"nativeSrc": "10565:103:18",
													"nodeType": "YulBlock",
													"src": "10565:103:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10611:16:18",
																"nodeType": "YulBlock",
																"src": "10611:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10620:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10620:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10623:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10623:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10613:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10613:6:18"
																			},
																			"nativeSrc": "10613:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10613:12:18"
																		},
																		"nativeSrc": "10613:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10613:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10586:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10586:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10595:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10595:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10582:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10582:3:18"
																		},
																		"nativeSrc": "10582:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10582:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10607:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10607:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10578:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10578:3:18"
																},
																"nativeSrc": "10578:32:18",
																"nodeType": "YulFunctionCall",
																"src": "10578:32:18"
															},
															"nativeSrc": "10575:52:18",
															"nodeType": "YulIf",
															"src": "10575:52:18"
														},
														{
															"nativeSrc": "10636:26:18",
															"nodeType": "YulAssignment",
															"src": "10636:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10652:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10652:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10646:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "10646:5:18"
																},
																"nativeSrc": "10646:16:18",
																"nodeType": "YulFunctionCall",
																"src": "10646:16:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10636:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10636:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10484:184:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10531:9:18",
														"nodeType": "YulTypedName",
														"src": "10531:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10542:7:18",
														"nodeType": "YulTypedName",
														"src": "10542:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10554:6:18",
														"nodeType": "YulTypedName",
														"src": "10554:6:18",
														"type": ""
													}
												],
												"src": "10484:184:18"
											},
											{
												"body": {
													"nativeSrc": "10847:176:18",
													"nodeType": "YulBlock",
													"src": "10847:176:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10864:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10864:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10875:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10875:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10857:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10857:6:18"
																},
																"nativeSrc": "10857:21:18",
																"nodeType": "YulFunctionCall",
																"src": "10857:21:18"
															},
															"nativeSrc": "10857:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "10857:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10898:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10898:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10909:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10909:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10894:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10894:3:18"
																		},
																		"nativeSrc": "10894:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10894:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10914:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10914:2:18",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10887:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10887:6:18"
																},
																"nativeSrc": "10887:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10887:30:18"
															},
															"nativeSrc": "10887:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "10887:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10937:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10937:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10948:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10948:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10933:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10933:3:18"
																		},
																		"nativeSrc": "10933:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10933:18:18"
																	},
																	{
																		"hexValue": "4e6f7420746865206f776e6572206f662074686520746f6b656e",
																		"kind": "string",
																		"nativeSrc": "10953:28:18",
																		"nodeType": "YulLiteral",
																		"src": "10953:28:18",
																		"type": "",
																		"value": "Not the owner of the token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10926:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10926:6:18"
																},
																"nativeSrc": "10926:56:18",
																"nodeType": "YulFunctionCall",
																"src": "10926:56:18"
															},
															"nativeSrc": "10926:56:18",
															"nodeType": "YulExpressionStatement",
															"src": "10926:56:18"
														},
														{
															"nativeSrc": "10991:26:18",
															"nodeType": "YulAssignment",
															"src": "10991:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11003:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11003:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11014:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11014:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10999:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10999:3:18"
																},
																"nativeSrc": "10999:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10999:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10991:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10991:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e926d765124afa7645719d9ee54990b20d280fc9c8126299bae5cd0693cd5706__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10673:350:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10824:9:18",
														"nodeType": "YulTypedName",
														"src": "10824:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10838:4:18",
														"nodeType": "YulTypedName",
														"src": "10838:4:18",
														"type": ""
													}
												],
												"src": "10673:350:18"
											},
											{
												"body": {
													"nativeSrc": "11202:170:18",
													"nodeType": "YulBlock",
													"src": "11202:170:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11219:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11219:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11230:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11230:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11212:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11212:6:18"
																},
																"nativeSrc": "11212:21:18",
																"nodeType": "YulFunctionCall",
																"src": "11212:21:18"
															},
															"nativeSrc": "11212:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "11212:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11253:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11253:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11264:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11264:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11249:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11249:3:18"
																		},
																		"nativeSrc": "11249:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11249:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11269:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11269:2:18",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11242:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:18"
																},
																"nativeSrc": "11242:30:18",
																"nodeType": "YulFunctionCall",
																"src": "11242:30:18"
															},
															"nativeSrc": "11242:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "11242:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11292:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11292:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11303:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11303:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11288:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11288:3:18"
																		},
																		"nativeSrc": "11288:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11288:18:18"
																	},
																	{
																		"hexValue": "546f6b656e20616c7265616479207374616b6564",
																		"kind": "string",
																		"nativeSrc": "11308:22:18",
																		"nodeType": "YulLiteral",
																		"src": "11308:22:18",
																		"type": "",
																		"value": "Token already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11281:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11281:6:18"
																},
																"nativeSrc": "11281:50:18",
																"nodeType": "YulFunctionCall",
																"src": "11281:50:18"
															},
															"nativeSrc": "11281:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "11281:50:18"
														},
														{
															"nativeSrc": "11340:26:18",
															"nodeType": "YulAssignment",
															"src": "11340:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11352:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11352:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11363:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11363:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11348:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11348:3:18"
																},
																"nativeSrc": "11348:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11348:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11340:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11340:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa21bce4fe506452861a1614013817d8a427e267f30e56423392821fbb80cd2d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11028:344:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11179:9:18",
														"nodeType": "YulTypedName",
														"src": "11179:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11193:4:18",
														"nodeType": "YulTypedName",
														"src": "11193:4:18",
														"type": ""
													}
												],
												"src": "11028:344:18"
											},
											{
												"body": {
													"nativeSrc": "11534:188:18",
													"nodeType": "YulBlock",
													"src": "11534:188:18",
													"statements": [
														{
															"nativeSrc": "11544:26:18",
															"nodeType": "YulAssignment",
															"src": "11544:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11556:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11556:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11567:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11567:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11552:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11552:3:18"
																},
																"nativeSrc": "11552:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11552:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11544:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11544:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11586:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11586:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11597:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11597:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11579:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11579:6:18"
																},
																"nativeSrc": "11579:25:18",
																"nodeType": "YulFunctionCall",
																"src": "11579:25:18"
															},
															"nativeSrc": "11579:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "11579:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11624:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11624:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11635:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11635:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11620:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11620:3:18"
																		},
																		"nativeSrc": "11620:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11620:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11644:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11644:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11660:3:18",
																								"nodeType": "YulLiteral",
																								"src": "11660:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11665:1:18",
																								"nodeType": "YulLiteral",
																								"src": "11665:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11656:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "11656:3:18"
																						},
																						"nativeSrc": "11656:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "11656:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11669:1:18",
																						"nodeType": "YulLiteral",
																						"src": "11669:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11652:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11652:3:18"
																				},
																				"nativeSrc": "11652:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11652:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11640:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11640:3:18"
																		},
																		"nativeSrc": "11640:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11640:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11613:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11613:6:18"
																},
																"nativeSrc": "11613:60:18",
																"nodeType": "YulFunctionCall",
																"src": "11613:60:18"
															},
															"nativeSrc": "11613:60:18",
															"nodeType": "YulExpressionStatement",
															"src": "11613:60:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11693:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11693:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11704:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11704:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11689:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11689:3:18"
																		},
																		"nativeSrc": "11689:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11689:18:18"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11709:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11709:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11682:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11682:6:18"
																},
																"nativeSrc": "11682:34:18",
																"nodeType": "YulFunctionCall",
																"src": "11682:34:18"
															},
															"nativeSrc": "11682:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "11682:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11377:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11487:9:18",
														"nodeType": "YulTypedName",
														"src": "11487:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11498:6:18",
														"nodeType": "YulTypedName",
														"src": "11498:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11506:6:18",
														"nodeType": "YulTypedName",
														"src": "11506:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11514:6:18",
														"nodeType": "YulTypedName",
														"src": "11514:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11525:4:18",
														"nodeType": "YulTypedName",
														"src": "11525:4:18",
														"type": ""
													}
												],
												"src": "11377:345:18"
											},
											{
												"body": {
													"nativeSrc": "11835:101:18",
													"nodeType": "YulBlock",
													"src": "11835:101:18",
													"statements": [
														{
															"nativeSrc": "11845:26:18",
															"nodeType": "YulAssignment",
															"src": "11845:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11857:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11857:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11868:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11868:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11853:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11853:3:18"
																},
																"nativeSrc": "11853:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11853:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11845:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11845:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11887:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11887:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11902:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11902:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11910:18:18",
																				"nodeType": "YulLiteral",
																				"src": "11910:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11898:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11898:3:18"
																		},
																		"nativeSrc": "11898:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11898:31:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11880:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11880:6:18"
																},
																"nativeSrc": "11880:50:18",
																"nodeType": "YulFunctionCall",
																"src": "11880:50:18"
															},
															"nativeSrc": "11880:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "11880:50:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "11727:209:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11804:9:18",
														"nodeType": "YulTypedName",
														"src": "11804:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11815:6:18",
														"nodeType": "YulTypedName",
														"src": "11815:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11826:4:18",
														"nodeType": "YulTypedName",
														"src": "11826:4:18",
														"type": ""
													}
												],
												"src": "11727:209:18"
											},
											{
												"body": {
													"nativeSrc": "12115:228:18",
													"nodeType": "YulBlock",
													"src": "12115:228:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12132:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12132:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12143:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12143:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12125:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12125:6:18"
																},
																"nativeSrc": "12125:21:18",
																"nodeType": "YulFunctionCall",
																"src": "12125:21:18"
															},
															"nativeSrc": "12125:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "12125:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12166:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12166:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12177:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12177:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12162:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12162:3:18"
																		},
																		"nativeSrc": "12162:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12162:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12182:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12182:2:18",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12155:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12155:6:18"
																},
																"nativeSrc": "12155:30:18",
																"nodeType": "YulFunctionCall",
																"src": "12155:30:18"
															},
															"nativeSrc": "12155:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "12155:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12205:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12205:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12216:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12216:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12201:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12201:3:18"
																		},
																		"nativeSrc": "12201:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12201:18:18"
																	},
																	{
																		"hexValue": "546f6b656e2049447320616e64207261726974696573206c656e677468206d69",
																		"kind": "string",
																		"nativeSrc": "12221:34:18",
																		"nodeType": "YulLiteral",
																		"src": "12221:34:18",
																		"type": "",
																		"value": "Token IDs and rarities length mi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12194:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12194:6:18"
																},
																"nativeSrc": "12194:62:18",
																"nodeType": "YulFunctionCall",
																"src": "12194:62:18"
															},
															"nativeSrc": "12194:62:18",
															"nodeType": "YulExpressionStatement",
															"src": "12194:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12276:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12276:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12287:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12287:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12272:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12272:3:18"
																		},
																		"nativeSrc": "12272:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12272:18:18"
																	},
																	{
																		"hexValue": "736d61746368",
																		"kind": "string",
																		"nativeSrc": "12292:8:18",
																		"nodeType": "YulLiteral",
																		"src": "12292:8:18",
																		"type": "",
																		"value": "smatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12265:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12265:6:18"
																},
																"nativeSrc": "12265:36:18",
																"nodeType": "YulFunctionCall",
																"src": "12265:36:18"
															},
															"nativeSrc": "12265:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "12265:36:18"
														},
														{
															"nativeSrc": "12310:27:18",
															"nodeType": "YulAssignment",
															"src": "12310:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12322:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12322:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12333:3:18",
																		"nodeType": "YulLiteral",
																		"src": "12333:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12318:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12318:3:18"
																},
																"nativeSrc": "12318:19:18",
																"nodeType": "YulFunctionCall",
																"src": "12318:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12310:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12310:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_39e01b02a8ec1a0fd1e3a4d6d6bd8b4018063aa53e4e9672bdce298147a18dc3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11941:402:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12092:9:18",
														"nodeType": "YulTypedName",
														"src": "12092:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12106:4:18",
														"nodeType": "YulTypedName",
														"src": "12106:4:18",
														"type": ""
													}
												],
												"src": "11941:402:18"
											},
											{
												"body": {
													"nativeSrc": "12380:95:18",
													"nodeType": "YulBlock",
													"src": "12380:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12397:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12397:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12404:3:18",
																				"nodeType": "YulLiteral",
																				"src": "12404:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12409:10:18",
																				"nodeType": "YulLiteral",
																				"src": "12409:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12400:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12400:3:18"
																		},
																		"nativeSrc": "12400:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12400:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12390:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12390:6:18"
																},
																"nativeSrc": "12390:31:18",
																"nodeType": "YulFunctionCall",
																"src": "12390:31:18"
															},
															"nativeSrc": "12390:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "12390:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12437:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12437:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12440:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12440:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12430:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12430:6:18"
																},
																"nativeSrc": "12430:15:18",
																"nodeType": "YulFunctionCall",
																"src": "12430:15:18"
															},
															"nativeSrc": "12430:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "12430:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12461:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12461:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12464:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12464:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12454:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12454:6:18"
																},
																"nativeSrc": "12454:15:18",
																"nodeType": "YulFunctionCall",
																"src": "12454:15:18"
															},
															"nativeSrc": "12454:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "12454:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12348:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "12348:127:18"
											},
											{
												"body": {
													"nativeSrc": "12654:166:18",
													"nodeType": "YulBlock",
													"src": "12654:166:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12671:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12671:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12682:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12682:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12664:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12664:6:18"
																},
																"nativeSrc": "12664:21:18",
																"nodeType": "YulFunctionCall",
																"src": "12664:21:18"
															},
															"nativeSrc": "12664:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "12664:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12705:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12705:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12716:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12716:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12701:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12701:3:18"
																		},
																		"nativeSrc": "12701:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12701:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12721:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12721:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12694:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12694:6:18"
																},
																"nativeSrc": "12694:30:18",
																"nodeType": "YulFunctionCall",
																"src": "12694:30:18"
															},
															"nativeSrc": "12694:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "12694:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12744:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12744:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12755:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12755:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12740:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12740:3:18"
																		},
																		"nativeSrc": "12740:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12740:18:18"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "12760:18:18",
																		"nodeType": "YulLiteral",
																		"src": "12760:18:18",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12733:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12733:6:18"
																},
																"nativeSrc": "12733:46:18",
																"nodeType": "YulFunctionCall",
																"src": "12733:46:18"
															},
															"nativeSrc": "12733:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "12733:46:18"
														},
														{
															"nativeSrc": "12788:26:18",
															"nodeType": "YulAssignment",
															"src": "12788:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12800:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12800:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12811:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12811:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12796:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12796:3:18"
																},
																"nativeSrc": "12796:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12796:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12788:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12788:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12480:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12631:9:18",
														"nodeType": "YulTypedName",
														"src": "12631:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12645:4:18",
														"nodeType": "YulTypedName",
														"src": "12645:4:18",
														"type": ""
													}
												],
												"src": "12480:340:18"
											},
											{
												"body": {
													"nativeSrc": "12906:103:18",
													"nodeType": "YulBlock",
													"src": "12906:103:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12952:16:18",
																"nodeType": "YulBlock",
																"src": "12952:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12961:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12961:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12964:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12964:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12954:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12954:6:18"
																			},
																			"nativeSrc": "12954:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12954:12:18"
																		},
																		"nativeSrc": "12954:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12954:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12927:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12927:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12936:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12936:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12923:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12923:3:18"
																		},
																		"nativeSrc": "12923:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12923:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12948:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12948:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12919:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12919:3:18"
																},
																"nativeSrc": "12919:32:18",
																"nodeType": "YulFunctionCall",
																"src": "12919:32:18"
															},
															"nativeSrc": "12916:52:18",
															"nodeType": "YulIf",
															"src": "12916:52:18"
														},
														{
															"nativeSrc": "12977:26:18",
															"nodeType": "YulAssignment",
															"src": "12977:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12993:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12993:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12987:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12987:5:18"
																},
																"nativeSrc": "12987:16:18",
																"nodeType": "YulFunctionCall",
																"src": "12987:16:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12977:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12977:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "12825:184:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12872:9:18",
														"nodeType": "YulTypedName",
														"src": "12872:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12883:7:18",
														"nodeType": "YulTypedName",
														"src": "12883:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12895:6:18",
														"nodeType": "YulTypedName",
														"src": "12895:6:18",
														"type": ""
													}
												],
												"src": "12825:184:18"
											},
											{
												"body": {
													"nativeSrc": "13143:145:18",
													"nodeType": "YulBlock",
													"src": "13143:145:18",
													"statements": [
														{
															"nativeSrc": "13153:26:18",
															"nodeType": "YulAssignment",
															"src": "13153:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13165:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13165:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13176:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13176:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13161:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13161:3:18"
																},
																"nativeSrc": "13161:18:18",
																"nodeType": "YulFunctionCall",
																"src": "13161:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13153:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13153:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13195:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13195:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13210:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13210:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13226:3:18",
																								"nodeType": "YulLiteral",
																								"src": "13226:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13231:1:18",
																								"nodeType": "YulLiteral",
																								"src": "13231:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13222:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "13222:3:18"
																						},
																						"nativeSrc": "13222:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "13222:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13235:1:18",
																						"nodeType": "YulLiteral",
																						"src": "13235:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13218:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13218:3:18"
																				},
																				"nativeSrc": "13218:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13218:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13206:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13206:3:18"
																		},
																		"nativeSrc": "13206:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13206:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13188:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13188:6:18"
																},
																"nativeSrc": "13188:51:18",
																"nodeType": "YulFunctionCall",
																"src": "13188:51:18"
															},
															"nativeSrc": "13188:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "13188:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13259:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13259:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13270:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13270:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13255:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13255:3:18"
																		},
																		"nativeSrc": "13255:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13255:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13275:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13275:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13248:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13248:6:18"
																},
																"nativeSrc": "13248:34:18",
																"nodeType": "YulFunctionCall",
																"src": "13248:34:18"
															},
															"nativeSrc": "13248:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "13248:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "13014:274:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13104:9:18",
														"nodeType": "YulTypedName",
														"src": "13104:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13115:6:18",
														"nodeType": "YulTypedName",
														"src": "13115:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13123:6:18",
														"nodeType": "YulTypedName",
														"src": "13123:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13134:4:18",
														"nodeType": "YulTypedName",
														"src": "13134:4:18",
														"type": ""
													}
												],
												"src": "13014:274:18"
											},
											{
												"body": {
													"nativeSrc": "13430:164:18",
													"nodeType": "YulBlock",
													"src": "13430:164:18",
													"statements": [
														{
															"nativeSrc": "13440:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13440:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13460:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13460:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13454:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "13454:5:18"
																},
																"nativeSrc": "13454:13:18",
																"nodeType": "YulFunctionCall",
																"src": "13454:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13444:6:18",
																	"nodeType": "YulTypedName",
																	"src": "13444:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13482:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13482:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13491:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13491:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13499:4:18",
																				"nodeType": "YulLiteral",
																				"src": "13499:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13487:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13487:3:18"
																		},
																		"nativeSrc": "13487:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13487:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13506:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13506:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "13476:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "13476:5:18"
																},
																"nativeSrc": "13476:37:18",
																"nodeType": "YulFunctionCall",
																"src": "13476:37:18"
															},
															"nativeSrc": "13476:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "13476:37:18"
														},
														{
															"nativeSrc": "13522:26:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13522:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13536:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13536:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13541:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13541:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13532:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13532:3:18"
																},
																"nativeSrc": "13532:16:18",
																"nodeType": "YulFunctionCall",
																"src": "13532:16:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13526:2:18",
																	"nodeType": "YulTypedName",
																	"src": "13526:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "13564:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "13564:2:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13568:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13568:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13557:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13557:6:18"
																},
																"nativeSrc": "13557:13:18",
																"nodeType": "YulFunctionCall",
																"src": "13557:13:18"
															},
															"nativeSrc": "13557:13:18",
															"nodeType": "YulExpressionStatement",
															"src": "13557:13:18"
														},
														{
															"nativeSrc": "13579:9:18",
															"nodeType": "YulAssignment",
															"src": "13579:9:18",
															"value": {
																"name": "_1",
																"nativeSrc": "13586:2:18",
																"nodeType": "YulIdentifier",
																"src": "13586:2:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13579:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13579:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13293:301:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13406:3:18",
														"nodeType": "YulTypedName",
														"src": "13406:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13411:6:18",
														"nodeType": "YulTypedName",
														"src": "13411:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13422:3:18",
														"nodeType": "YulTypedName",
														"src": "13422:3:18",
														"type": ""
													}
												],
												"src": "13293:301:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 128))\n        value4 := value_4\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_f2e0b264ccf675e173c230596ff7ecba0dd7a1c403648e17c6ce7c079df5e7ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Not the owner of the stake\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cfbc489d0add4380fb0a9331116e14e9d245825f5265e05f9ad04c1d23417c73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Token already unstaked\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_cbed3010ef2ca5a7950ddcaceee490947e7e5814a0c73147fbe9a8dd3ac26daa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Staking period not met\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), 0)\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_e926d765124afa7645719d9ee54990b20d280fc9c8126299bae5cd0693cd5706__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Not the owner of the token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aa21bce4fe506452861a1614013817d8a427e267f30e56423392821fbb80cd2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Token already staked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_39e01b02a8ec1a0fd1e3a4d6d6bd8b4018063aa53e4e9672bdce298147a18dc3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Token IDs and rarities length mi\")\n        mstore(add(headStart, 96), \"smatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"636": [
									{
										"length": 32,
										"start": 4349
									},
									{
										"length": 32,
										"start": 4390
									},
									{
										"length": 32,
										"start": 4743
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061013c575f3560e01c80637b0a47ee116100b3578063ad3cb1cc1161006d578063ad3cb1cc1461034c578063d0f7d24f14610389578063d547741f146103a8578063d5a44f86146103c7578063e63ab1e914610454578063f72c0d8b14610487575f80fd5b80637b0a47ee146102b25780637ebed54c146102c75780638172885b146102dc57806391d14854146102fb578063a217fddf1461031a578063a6b63eb81461032d575f80fd5b806336568abe1161010457806336568abe146102185780634d9a824d146102375780634f1ef2861461025657806352d1902d146102695780635c975abb1461027d5780637b0472f014610293575f80fd5b806301ffc9a714610140578063248a9ca3146101745780632e17de78146101a15780632f2ff15d146101c257806334aab064146101e1575b5f80fd5b34801561014b575f80fd5b5061015f61015a366004611543565b6104ba565b60405190151581526020015b60405180910390f35b34801561017f575f80fd5b5061019361018e36600461156a565b6104f0565b60405190815260200161016b565b3480156101ac575f80fd5b506101c06101bb36600461156a565b610510565b005b3480156101cd575f80fd5b506101c06101dc366004611595565b6108e5565b3480156101ec575f80fd5b50603354610200906001600160a01b031681565b6040516001600160a01b03909116815260200161016b565b348015610223575f80fd5b506101c0610232366004611595565b610907565b348015610242575f80fd5b50603454610200906001600160a01b031681565b6101c06102643660046115d7565b61093f565b348015610274575f80fd5b5061019361095e565b348015610288575f80fd5b505f5460ff1661015f565b34801561029e575f80fd5b506101c06102ad36600461169d565b610979565b3480156102bd575f80fd5b5061019360365481565b3480156102d2575f80fd5b5061019360375481565b3480156102e7575f80fd5b50603554610200906001600160a01b031681565b348015610306575f80fd5b5061015f610315366004611595565b610d11565b348015610325575f80fd5b506101935f81565b348015610338575f80fd5b506101c06103473660046116bd565b610d47565b348015610357575f80fd5b5061037c604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161016b9190611714565b348015610394575f80fd5b506101c06103a3366004611791565b610eaf565b3480156103b3575f80fd5b506101c06103c2366004611595565b610f68565b3480156103d2575f80fd5b5061041f6103e136600461156a565b60326020525f908152604090208054600182015460028301546003840154600485015460059095015493946001600160a01b03909316939192909186565b604080519687526001600160a01b039095166020870152938501929092526060840152608083015260a082015260c00161016b565b34801561045f575f80fd5b506101937f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b348015610492575f80fd5b506101937f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b14806104ea57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f9081525f8051602061192d833981519152602052604090206001015490565b610518610f84565b5f818152603260205260409020600101546001600160a01b031633146105855760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420746865206f776e6572206f6620746865207374616b6500000000000060448201526064015b60405180910390fd5b5f81815260326020526040902060030154156105dc5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b88185b1c9958591e481d5b9cdd185ad95960521b604482015260640161057c565b5f818152603260205260408120600201546105f79042611811565b90506037548110156106445760405162461bcd60e51b815260206004820152601660248201527514dd185ada5b99c81c195c9a5bd9081b9bdd081b595d60521b604482015260640161057c565b5f82815260326020526040902042600382015560050154603654670de0b6b3a764000091906106739084611824565b61067d9190611824565b610687919061183b565b5f83815260326020526040908190206004908101839055603354915163a9059cbb60e01b8152339181019190915260248101929092526001600160a01b03169063a9059cbb906044016020604051808303815f875af11580156106ec573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610710919061185a565b506034546040516331a9108f60e11b81526004810184905230916001600160a01b031690636352211e90602401602060405180830381865afa158015610758573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077c9190611879565b6001600160a01b0316036107f4576034546040516323b872dd60e01b8152306004820152336024820152604481018490526001600160a01b03909116906323b872dd906064015f604051808303815f87803b1580156107d9575f80fd5b505af11580156107eb573d5f803e3d5ffd5b50505050610859565b603554604051637921219560e11b81526001600160a01b039091169063f242432a9061082b90309033908790600190600401611894565b5f604051808303815f87803b158015610842575f80fd5b505af1158015610854573d5f803e3d5ffd5b505050505b5f8281526032602090815260408083208381556001810180546001600160a01b031916905560028101849055600381018490556004810184905560050183905580518581523392810192909252429082015260608101919091527fffdaf13b1d96bfc2213355f353f84c19493e0681eb0df26f83d862acd266750a906080015b60405180910390a15050565b6108ee826104f0565b6108f781610fcb565b6109018383610fd8565b50505050565b6001600160a01b03811633146109305760405163334bd91960e11b815260040160405180910390fd5b61093a8282611079565b505050565b6109476110f2565b61095082611196565b61095a82826111c0565b5050565b5f61096761127c565b505f8051602061190d83398151915290565b610981610f84565b6034546040516331a9108f60e11b81526004810184905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156109c8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109ec9190611879565b6001600160a01b03161480610a6d5750603554604051627eeac760e11b8152336004820152602481018490525f916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610a47573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a6b91906118cb565b115b610ab95760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420746865206f776e6572206f662074686520746f6b656e000000000000604482015260640161057c565b5f8281526032602052604090205415610b0b5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88185b1c9958591e481cdd185ad95960621b604482015260640161057c565b6040805160c081018252838152336020808301828152428486019081525f606086018181526080870182815260a088018a81528b84526032909652918890209651875592516001870180546001600160a01b0319166001600160a01b0392831617905591516002870155915160038601559051600480860191909155915160059094019390935560345493516331a9108f60e11b8152908101869052909290911690636352211e90602401602060405180830381865afa158015610bd1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf59190611879565b6001600160a01b031603610c6d576034546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064015f604051808303815f87803b158015610c52575f80fd5b505af1158015610c64573d5f803e3d5ffd5b50505050610cd2565b603554604051637921219560e11b81526001600160a01b039091169063f242432a90610ca490339030908790600190600401611894565b5f604051808303815f87803b158015610cbb575f80fd5b505af1158015610ccd573d5f803e3d5ffd5b505050505b6040805183815233602082015242918101919091527f18dcd430020e4d4899772fd94a8b40451dc5044dfb70bc46b532eeae431c864f906060016108d9565b5f9182525f8051602061192d833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610d8c5750825b90505f8267ffffffffffffffff166001148015610da85750303b155b905081158015610db6575080155b15610dd45760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610dfe57845460ff60401b1916600160401b1785555b610e066112c5565b610e0e6112cd565b610e166112c5565b603380546001600160a01b03808d166001600160a01b031992831617909255603480548c841690831617905560358054928b1692909116919091179055603687905560378690558315610ea357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b610eb7610f84565b828114610f155760405162461bcd60e51b815260206004820152602660248201527f546f6b656e2049447320616e64207261726974696573206c656e677468206d696044820152650e6dac2e8c6d60d31b606482015260840161057c565b5f5b83811015610f6157610f59858583818110610f3457610f346118e2565b90506020020135848484818110610f4d57610f4d6118e2565b90506020020135610979565b600101610f17565b5050505050565b610f71826104f0565b610f7a81610fcb565b6109018383611079565b5f5460ff1615610fc95760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161057c565b565b610fd581336112dd565b50565b5f5f8051602061192d833981519152610ff18484610d11565b611070575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556110263390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506104ea565b5f9150506104ea565b5f5f8051602061192d8339815191526110928484610d11565b15611070575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506104ea565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061117857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661116c5f8051602061190d833981519152546001600160a01b031690565b6001600160a01b031614155b15610fc95760405163703e46dd60e11b815260040160405180910390fd5b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e361095a81610fcb565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561121a575060408051601f3d908101601f19168201909252611217918101906118cb565b60015b61124257604051634c9c8ce360e01b81526001600160a01b038316600482015260240161057c565b5f8051602061190d833981519152811461127257604051632a87526960e21b81526004810182905260240161057c565b61093a8383611316565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fc95760405163703e46dd60e11b815260040160405180910390fd5b610fc961136b565b6112d561136b565b610fc96113b4565b6112e78282610d11565b61095a5760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161057c565b61131f826113c7565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156113635761093a828261142a565b61095a61149c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610fc957604051631afcd79f60e31b815260040160405180910390fd5b6113bc61136b565b5f805460ff19169055565b806001600160a01b03163b5f036113fc57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161057c565b5f8051602061190d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405161144691906118f6565b5f60405180830381855af49150503d805f811461147e576040519150601f19603f3d011682016040523d82523d5f602084013e611483565b606091505b50915091506114938583836114bb565b95945050505050565b3415610fc95760405163b398979f60e01b815260040160405180910390fd5b6060826114d0576114cb8261151a565b611513565b81511580156114e757506001600160a01b0384163b155b1561151057604051639996b31560e01b81526001600160a01b038516600482015260240161057c565b50805b9392505050565b80511561152a5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215611553575f80fd5b81356001600160e01b031981168114611513575f80fd5b5f6020828403121561157a575f80fd5b5035919050565b6001600160a01b0381168114610fd5575f80fd5b5f80604083850312156115a6575f80fd5b8235915060208301356115b881611581565b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156115e8575f80fd5b82356115f381611581565b9150602083013567ffffffffffffffff81111561160e575f80fd5b8301601f8101851361161e575f80fd5b803567ffffffffffffffff811115611638576116386115c3565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611667576116676115c3565b60405281815282820160200187101561167e575f80fd5b816020840160208301375f602083830101528093505050509250929050565b5f80604083850312156116ae575f80fd5b50508035926020909101359150565b5f805f805f60a086880312156116d1575f80fd5b85356116dc81611581565b945060208601356116ec81611581565b935060408601356116fc81611581565b94979396509394606081013594506080013592915050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8083601f840112611759575f80fd5b50813567ffffffffffffffff811115611770575f80fd5b6020830191508360208260051b850101111561178a575f80fd5b9250929050565b5f805f80604085870312156117a4575f80fd5b843567ffffffffffffffff8111156117ba575f80fd5b6117c687828801611749565b909550935050602085013567ffffffffffffffff8111156117e5575f80fd5b6117f187828801611749565b95989497509550505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104ea576104ea6117fd565b80820281158282048414176104ea576104ea6117fd565b5f8261185557634e487b7160e01b5f52601260045260245ffd5b500490565b5f6020828403121561186a575f80fd5b81518015158114611513575f80fd5b5f60208284031215611889575f80fd5b815161151381611581565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a0608082018190525f9082015260c00190565b5f602082840312156118db575f80fd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a264697066735822122093b9a88d1b3827e35df39db0c4f5f0b1503195780818a3a84e007496b58530ea64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xD0F7D24F EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xD5A44F86 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x487 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x7EBED54C EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x8172885B EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xA6B63EB8 EQ PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x4D9A824D EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0x293 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x34AAB064 EQ PUSH2 0x1E1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x1543 JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0x156A JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x156A JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH2 0x200 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0x907 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x242 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x34 SLOAD PUSH2 0x200 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH2 0x95E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x288 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x15F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH1 0x36 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH1 0x37 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD PUSH2 0x200 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0xD11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xD47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1714 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1791 JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1595 JUMP JUMPDEST PUSH2 0xF68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x156A JUMP JUMPDEST PUSH1 0x32 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x16B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x193 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4EA JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x192D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x518 PUSH2 0xF84 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746865206F776E6572206F6620746865207374616B65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD ISZERO PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B88185B1C9958591E481D5B9CDD185AD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x5F7 SWAP1 TIMESTAMP PUSH2 0x1811 JUMP JUMPDEST SWAP1 POP PUSH1 0x37 SLOAD DUP2 LT ISZERO PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DD185ADA5B99C81C195C9A5BD9081B9BDD081B595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x5 ADD SLOAD PUSH1 0x36 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 SWAP1 PUSH2 0x673 SWAP1 DUP5 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x183B JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x33 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x185A JUMP JUMPDEST POP PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77C SWAP2 SWAP1 PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7F4 JUMPI PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x859 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0x82B SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1894 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x854 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x5 ADD DUP4 SWAP1 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFDAF13B1D96BFC2213355F353F84C19493E0681EB0DF26F83D862ACD266750A SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x8EE DUP3 PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x8F7 DUP2 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x901 DUP4 DUP4 PUSH2 0xFD8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93A DUP3 DUP3 PUSH2 0x1079 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x947 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x950 DUP3 PUSH2 0x1196 JUMP JUMPDEST PUSH2 0x95A DUP3 DUP3 PUSH2 0x11C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x967 PUSH2 0x127C JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x981 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xA6D JUMPI POP PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH3 0xFDD58E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA47 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST GT JUMPDEST PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420746865206F776E6572206F662074686520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88185B1C9958591E481CDD185AD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE TIMESTAMP DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP8 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP9 ADD DUP11 DUP2 MSTORE DUP12 DUP5 MSTORE PUSH1 0x32 SWAP1 SWAP7 MSTORE SWAP2 DUP9 SWAP1 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP8 ADD SSTORE SWAP2 MLOAD PUSH1 0x3 DUP7 ADD SSTORE SWAP1 MLOAD PUSH1 0x4 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x34 SLOAD SWAP4 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x1879 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC6D JUMPI PUSH1 0x34 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC64 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0xCA4 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1894 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x18DCD430020E4D4899772FD94A8B40451DC5044DFB70BC46B532EEAE431C864F SWAP1 PUSH1 0x60 ADD PUSH2 0x8D9 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x192D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xDA8 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xDB6 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xDFE JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xE06 PUSH2 0x12C5 JUMP JUMPDEST PUSH2 0xE0E PUSH2 0x12CD JUMP JUMPDEST PUSH2 0xE16 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP14 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x34 DUP1 SLOAD DUP13 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD SWAP3 DUP12 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x36 DUP8 SWAP1 SSTORE PUSH1 0x37 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0xEA3 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEB7 PUSH2 0xF84 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E2049447320616E64207261726974696573206C656E677468206D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0xE6DAC2E8C6D PUSH1 0xD3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF61 JUMPI PUSH2 0xF59 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0xF34 JUMPI PUSH2 0xF34 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0xF4D JUMPI PUSH2 0xF4D PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x979 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xF17 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF71 DUP3 PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0xF7A DUP2 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x901 DUP4 DUP4 PUSH2 0x1079 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x57C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFD5 DUP2 CALLER PUSH2 0x12DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x192D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xFF1 DUP5 DUP5 PUSH2 0xD11 JUMP JUMPDEST PUSH2 0x1070 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1026 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x4EA JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x4EA JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x192D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1092 DUP5 DUP5 PUSH2 0xD11 JUMP JUMPDEST ISZERO PUSH2 0x1070 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x4EA JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1178 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x116C PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x95A DUP2 PUSH2 0xFCB JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x121A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1217 SWAP2 DUP2 ADD SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1242 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1272 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x57C JUMP JUMPDEST PUSH2 0x93A DUP4 DUP4 PUSH2 0x1316 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC9 PUSH2 0x136B JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x136B JUMP JUMPDEST PUSH2 0xFC9 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x12E7 DUP3 DUP3 PUSH2 0xD11 JUMP JUMPDEST PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x57C JUMP JUMPDEST PUSH2 0x131F DUP3 PUSH2 0x13C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1363 JUMPI PUSH2 0x93A DUP3 DUP3 PUSH2 0x142A JUMP JUMPDEST PUSH2 0x95A PUSH2 0x149C JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13BC PUSH2 0x136B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x13FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x57C JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1446 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1493 DUP6 DUP4 DUP4 PUSH2 0x14BB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xFC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x14D0 JUMPI PUSH2 0x14CB DUP3 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x1513 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x14E7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x57C JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x152A JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1553 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1513 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x15B8 DUP2 PUSH2 0x1581 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15F3 DUP2 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x160E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x161E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1638 JUMPI PUSH2 0x1638 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1667 JUMPI PUSH2 0x1667 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x167E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x16DC DUP2 PUSH2 0x1581 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x16EC DUP2 PUSH2 0x1581 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x16FC DUP2 PUSH2 0x1581 JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1759 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1770 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x178A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x17A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17BA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17C6 DUP8 DUP3 DUP9 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17F1 DUP8 DUP3 DUP9 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4EA JUMPI PUSH2 0x4EA PUSH2 0x17FD JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4EA JUMPI PUSH2 0x4EA PUSH2 0x17FD JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1855 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1513 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1889 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1513 DUP2 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC02DD7BC7DEC4DCEEDDA775 0xE5 DUP14 0xD5 COINBASE 0xE0 DUP11 GT PUSH13 0x6C53815C0BD028192F7B626800 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xB9 0xA8 DUP14 SHL CODESIZE 0x27 0xE3 TSTORE RETURN SWAP14 0xB0 0xC4 CREATE2 CREATE 0xB1 POP BALANCE SWAP6 PUSH25 0x818A3A84E007496B58530EA64736F6C634300081A00330000 ",
							"sourceMap": "725:3985:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;-1:-1:-1;3443:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:18;;463:22;445:41;;433:2;418:18;3443:202:0;;;;;;;;4759:191;;;;;;;;;;-1:-1:-1;4759:191:0;;;;;:::i;:::-;;:::i;:::-;;;874:25:18;;;862:2;847:18;4759:191:0;728:177:18;3536:1086:17;;;;;;;;;;-1:-1:-1;3536:1086:17;;;;;:::i;:::-;;:::i;:::-;;5246:136:0;;;;;;;;;;-1:-1:-1;5246:136:0;;;;;:::i;:::-;;:::i;1222:23:17:-;;;;;;;;;;-1:-1:-1;1222:23:17;;;;-1:-1:-1;;;;;1222:23:17;;;;;;-1:-1:-1;;;;;1813:32:18;;;1795:51;;1783:2;1768:18;1222:23:17;1649:203:18;6348:245:0;;;;;;;;;;-1:-1:-1;6348:245:0;;;;;:::i;:::-;;:::i;1251:25:17:-;;;;;;;;;;-1:-1:-1;1251:25:17;;;;-1:-1:-1;;;;;1251:25:17;;;4158:214:2;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;1879:84:3:-;;;;;;;;;;-1:-1:-1;1926:4:3;1949:7;;;1879:84;;2223:982:17;;;;;;;;;;-1:-1:-1;2223:982:17;;;;;:::i;:::-;;:::i;1317:25::-;;;;;;;;;;;;;;;;1348:35;;;;;;;;;;;;;;;;1282:29;;;;;;;;;;-1:-1:-1;1282:29:17;;;;-1:-1:-1;;;;;1282:29:17;;;3732:207:0;;;;;;;;;;-1:-1:-1;3732:207:0;;;;;:::i;:::-;;:::i;2317:49::-;;;;;;;;;;-1:-1:-1;2317:49:0;2362:4;2317:49;;1720:497:17;;;;;;;;;;-1:-1:-1;1720:497:17;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;3211:319:17:-;;;;;;;;;;-1:-1:-1;3211:319:17;;;;;:::i;:::-;;:::i;5662:138:0:-;;;;;;;;;;-1:-1:-1;5662:138:0;;;;;:::i;:::-;;:::i;1177:39:17:-;;;;;;;;;;-1:-1:-1;1177:39:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1177:39:17;;;;;;;;;;;;;;6237:25:18;;;-1:-1:-1;;;;;6298:32:18;;;6293:2;6278:18;;6271:60;6347:18;;;6340:34;;;;6405:2;6390:18;;6383:34;6448:3;6433:19;;6426:35;6318:3;6477:19;;6470:35;6224:3;6209:19;1177:39:17;5950:561:18;858:62:17;;;;;;;;;;;;896:24;858:62;;926:66;;;;;;;;;;;;966:26;926:66;;3443:202:0;3528:4;-1:-1:-1;;;;;;3551:47:0;;-1:-1:-1;;;3551:47:0;;:87;;-1:-1:-1;;;;;;;;;;1133:40:8;;;3602:36:0;3544:94;3443:202;-1:-1:-1;;3443:202:0:o;4759:191::-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:0;;;;;:24;;;;4759:191::o;3536:1086:17:-;1503:19:3;:17;:19::i;:::-;3610:16:17::1;::::0;;;:6:::1;:16;::::0;;;;:22:::1;;::::0;-1:-1:-1;;;;;3610:22:17::1;3636:10;3610:36;3602:75;;;::::0;-1:-1:-1;;;3602:75:17;;6718:2:18;3602:75:17::1;::::0;::::1;6700:21:18::0;6757:2;6737:18;;;6730:30;6796:28;6776:18;;;6769:56;6842:18;;3602:75:17::1;;;;;;;;;3695:16;::::0;;;:6:::1;:16;::::0;;;;:28:::1;;::::0;:33;3687:68:::1;;;::::0;-1:-1:-1;;;3687:68:17;;7073:2:18;3687:68:17::1;::::0;::::1;7055:21:18::0;7112:2;7092:18;;;7085:30;-1:-1:-1;;;7131:18:18;;;7124:52;7193:18;;3687:68:17::1;6871:346:18::0;3687:68:17::1;3766:21;3808:16:::0;;;:6:::1;:16;::::0;;;;:26:::1;;::::0;3790:44:::1;::::0;:15:::1;:44;:::i;:::-;3766:68;;3869:20;;3852:13;:37;;3844:72;;;::::0;-1:-1:-1;;;3844:72:17;;7689:2:18;3844:72:17::1;::::0;::::1;7671:21:18::0;7728:2;7708:18;;;7701:30;-1:-1:-1;;;7747:18:18;;;7740:52;7809:18;;3844:72:17::1;7487:346:18::0;3844:72:17::1;3927:16;::::0;;;:6:::1;:16;::::0;;;;3958:15:::1;3927:28;::::0;::::1;:46:::0;4039:23:::1;;::::0;4026:10:::1;::::0;4066:4:::1;::::0;4039:23;4010:26:::1;::::0;:13;:26:::1;:::i;:::-;:52;;;;:::i;:::-;4009:61;;;;:::i;:::-;3983:16;::::0;;;:6:::1;:16;::::0;;;;;;:23:::1;::::0;;::::1;:87:::0;;;4125:8:::1;::::0;4107:73;;-1:-1:-1;;;4107:73:17;;4144:10:::1;4107:73:::0;;::::1;8407:51:18::0;;;;8474:18;;;8467:34;;;;-1:-1:-1;;;;;4125:8:17::1;::::0;4107:36:::1;::::0;8380:18:18;;4107:73:17::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4214:10:17::1;::::0;4195:48:::1;::::0;-1:-1:-1;;;4195:48:17;;::::1;::::0;::::1;874:25:18::0;;;4255:4:17::1;::::0;-1:-1:-1;;;;;4214:10:17::1;::::0;4195:38:::1;::::0;847:18:18;;4195:48:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4195:65:17::1;::::0;4191:303:::1;;4295:10;::::0;4276:80:::1;::::0;-1:-1:-1;;;4276:80:17;;4328:4:::1;4276:80;::::0;::::1;9252:51:18::0;4335:10:17::1;9319:18:18::0;;;9312:60;9388:18;;;9381:34;;;-1:-1:-1;;;;;4295:10:17;;::::1;::::0;4276:43:::1;::::0;9225:18:18;;4276:80:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4191:303;;;4407:14;::::0;4387:96:::1;::::0;-1:-1:-1;;;4387:96:17;;-1:-1:-1;;;;;4407:14:17;;::::1;::::0;4387:52:::1;::::0;:96:::1;::::0;4448:4:::1;::::0;4455:10:::1;::::0;4467:8;;4407:14;;4387:96:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4191:303;4511:16;::::0;;;:6:::1;:16;::::0;;;;;;;4504:23;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;4504:23:17::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;;::::0;;;4543:72;;10293:25:18;;;4562:10:17::1;10334:18:18::0;;;10327:60;;;;4574:15:17::1;10403:18:18::0;;;10396:34;10461:2;10446:18;;10439:34;;;;4543:72:17::1;::::0;10280:3:18;10265:19;4543:72:17::1;;;;;;;;3592:1030;3536:1086:::0;:::o;5246:136:0:-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:0;;966:10:7;6441:34:0;6437:102;;6498:30;;-1:-1:-1;;;6498:30:0;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;2223:982:17:-;1503:19:3;:17;:19::i;:::-;2344:10:17::1;::::0;2325:48:::1;::::0;-1:-1:-1;;;2325:48:17;;::::1;::::0;::::1;874:25:18::0;;;2377:10:17::1;::::0;-1:-1:-1;;;;;2344:10:17::1;::::0;2325:38:::1;::::0;847:18:18;;2325:48:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2325:62:17::1;;:149;;;-1:-1:-1::0;2423:14:17::1;::::0;2403:67:::1;::::0;-1:-1:-1;;;2403:67:17;;2449:10:::1;2403:67;::::0;::::1;8407:51:18::0;8474:18;;;8467:34;;;2473:1:17::1;::::0;-1:-1:-1;;;;;2423:14:17::1;::::0;2403:45:::1;::::0;8380:18:18;;2403:67:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:71;2325:149;2304:222;;;::::0;-1:-1:-1;;;2304:222:17;;10875:2:18;2304:222:17::1;::::0;::::1;10857:21:18::0;10914:2;10894:18;;;10887:30;10953:28;10933:18;;;10926:56;10999:18;;2304:222:17::1;10673:350:18::0;2304:222:17::1;2544:16;::::0;;;:6:::1;:16;::::0;;;;:24;:29;2536:62:::1;;;::::0;-1:-1:-1;;;2536:62:17;;11230:2:18;2536:62:17::1;::::0;::::1;11212:21:18::0;11269:2;11249:18;;;11242:30;-1:-1:-1;;;11288:18:18;;;11281:50;11348:18;;2536:62:17::1;11028:344:18::0;2536:62:17::1;2628:199;::::0;;::::1;::::0;::::1;::::0;;;;;2686:10:::1;2628:199;::::0;;::::1;::::0;;;2721:15:::1;2628:199:::0;;;;;;-1:-1:-1;2628:199:17;;;;;;;;;;;;;;;;;;2609:16;;;:6:::1;:16:::0;;;;;;;:218;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;2609:218:17::1;-1:-1:-1::0;;;;;2609:218:17;;::::1;;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;2861:10:::1;::::0;2842:48;;-1:-1:-1;;;2842:48:17;;;;::::1;874:25:18::0;;;2686:10:17;;2861;;::::1;::::0;2842:38:::1;::::0;847:18:18;;2842:48:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2842:62:17::1;::::0;2838:300:::1;;2939:10;::::0;2920:80:::1;::::0;-1:-1:-1;;;2920:80:17;;2964:10:::1;2920:80;::::0;::::1;9252:51:18::0;2984:4:17::1;9319:18:18::0;;;9312:60;9388:18;;;9381:34;;;-1:-1:-1;;;;;2939:10:17;;::::1;::::0;2920:43:::1;::::0;9225:18:18;;2920:80:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2838:300;;;3051:14;::::0;3031:96:::1;::::0;-1:-1:-1;;;3031:96:17;;-1:-1:-1;;;;;3051:14:17;;::::1;::::0;3031:52:::1;::::0;:96:::1;::::0;3084:10:::1;::::0;3104:4:::1;::::0;3111:8;;3051:14;;3031:96:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2838:300;3153:45;::::0;;11579:25:18;;;3170:10:17::1;11635:2:18::0;11620:18;;11613:60;3182:15:17::1;11689:18:18::0;;;11682:34;;;;3153:45:17::1;::::0;11567:2:18;11552:18;3153:45:17::1;11377:345:18::0;3732:207:0;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:0;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;;;;3732:207::o;1720:497:17:-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;1932:22:17::1;:20;:22::i;:::-;1964:17;:15;:17::i;:::-;1991:24;:22;:24::i;:::-;2026:8;:20:::0;;-1:-1:-1;;;;;2026:20:17;;::::1;-1:-1:-1::0;;;;;;2026:20:17;;::::1;;::::0;;;2056:10:::1;:24:::0;;;;::::1;::::0;;::::1;;::::0;;2090:14:::1;:32:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2132:10:::1;:24:::0;;;2166:20:::1;:44:::0;;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;11880:50:18;;5142:14:1;;11868:2:18;11853:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;1720:497:17;;;;;:::o;3211:319::-;1503:19:3;:17;:19::i;:::-;3330:36:17;;::::1;3322:87;;;::::0;-1:-1:-1;;;3322:87:17;;12143:2:18;3322:87:17::1;::::0;::::1;12125:21:18::0;12182:2;12162:18;;;12155:30;12221:34;12201:18;;;12194:62;-1:-1:-1;;;12272:18:18;;;12265:36;12318:19;;3322:87:17::1;11941:402:18::0;3322:87:17::1;3424:9;3419:105;3439:20:::0;;::::1;3419:105;;;3480:33;3486:9;;3496:1;3486:12;;;;;;;:::i;:::-;;;;;;;3500:9;;3510:1;3500:12;;;;;;;:::i;:::-;;;;;;;3480:5;:33::i;:::-;3461:3;;3419:105;;;;3211:319:::0;;;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;2031:106:3:-:0;1926:4;1949:7;;;2100:9;2092:38;;;;-1:-1:-1;;;2092:38:3;;12682:2:18;2092:38:3;;;12664:21:18;12721:2;12701:18;;;12694:30;-1:-1:-1;;;12740:18:18;;;12733:46;12796:18;;2092:38:3;12480:340:18;2092:38:3;2031:106::o;4148:103:0:-;4214:30;4225:4;966:10:7;4214::0;:30::i;:::-;4148:103;:::o;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:0;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;966:10:7;;887:96;7559:12:0;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7892:388;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:0;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:0;;;;;;;;;;:39;;-1:-1:-1;;8097:39:0;;;8155:40;966:10:7;;8097:14:0;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;4599:312:2;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:12;-1:-1:-1;;;;;2035:53:12;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;4628:80:17;966:26;3191:16:0;3202:4;3191:10;:16::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;1813:32:18;;6513:60:2;;;1795:51:18;1768:18;;6513:60:2;1649:203:18;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;874:25:18;;;847:18;;6312:34:2;728:177:18;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;3231:65:0;6931:20:1;:18;:20::i;1084:97:3:-;6931:20:1;:18;:20::i;:::-;1147:27:3::1;:25;:27::i;4381:197:0:-:0;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:0;;-1:-1:-1;;;;;8425:32:18;;4514:47:0;;;8407:51:18;8474:18;;;8467:34;;;8380:18;;4514:47:0;8233:274:18;2779:335:12;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:12;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1187:95:3;6931:20:1;:18;:20::i;:::-;1270:5:3::1;1260:15:::0;;-1:-1:-1;;1260:15:3::1;::::0;;1187:95::o;2186:281:12:-;2263:17;-1:-1:-1;;;;;2263:29:12;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:12;;-1:-1:-1;;;;;1813:32:18;;2320:47:12;;;1795:51:18;1768:18;;2320:47:12;1649:203:18;2259:119:12;-1:-1:-1;;;;;;;;;;;2387:73:12;;-1:-1:-1;;;;;;2387:73:12;-1:-1:-1;;;;;2387:73:12;;;;;;;;;;2186:281::o;4106:253:14:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:14;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:14:o;6598:122:12:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:12;;;;;;;;;;;4625:582:14;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:14;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:14;;-1:-1:-1;;;;;1813:32:18;;5121:24:14;;;1795:51:18;1768:18;;5121:24:14;1649:203:18;5041:119:14;-1:-1:-1;5180:10:14;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:14;;;;;;;;;;;14:286:18;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:18;;209:43;;199:71;;266:1;263;256:12;497:226;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;670:23:18;;497:226;-1:-1:-1;497:226:18:o;1141:131::-;-1:-1:-1;;;;;1216:31:18;;1206:42;;1196:70;;1262:1;1259;1252:12;1277:367;1345:6;1353;1406:2;1394:9;1385:7;1381:23;1377:32;1374:52;;;1422:1;1419;1412:12;1374:52;1467:23;;;-1:-1:-1;1566:2:18;1551:18;;1538:32;1579:33;1538:32;1579:33;:::i;:::-;1631:7;1621:17;;;1277:367;;;;;:::o;1857:127::-;1918:10;1913:3;1909:20;1906:1;1899:31;1949:4;1946:1;1939:15;1973:4;1970:1;1963:15;1989:1079;2066:6;2074;2127:2;2115:9;2106:7;2102:23;2098:32;2095:52;;;2143:1;2140;2133:12;2095:52;2182:9;2169:23;2201:31;2226:5;2201:31;:::i;:::-;2251:5;-1:-1:-1;2307:2:18;2292:18;;2279:32;2334:18;2323:30;;2320:50;;;2366:1;2363;2356:12;2320:50;2389:22;;2442:4;2434:13;;2430:27;-1:-1:-1;2420:55:18;;2471:1;2468;2461:12;2420:55;2511:2;2498:16;2537:18;2529:6;2526:30;2523:56;;;2559:18;;:::i;:::-;2608:2;2602:9;2700:2;2662:17;;-1:-1:-1;;2658:31:18;;;2691:2;2654:40;2650:54;2638:67;;2735:18;2720:34;;2756:22;;;2717:62;2714:88;;;2782:18;;:::i;:::-;2818:2;2811:22;2842;;;2883:15;;;2900:2;2879:24;2876:37;-1:-1:-1;2873:57:18;;;2926:1;2923;2916:12;2873:57;2982:6;2977:2;2973;2969:11;2964:2;2956:6;2952:15;2939:50;3035:1;3030:2;3021:6;3013;3009:19;3005:28;2998:39;3056:6;3046:16;;;;;1989:1079;;;;;:::o;3073:346::-;3141:6;3149;3202:2;3190:9;3181:7;3177:23;3173:32;3170:52;;;3218:1;3215;3208:12;3170:52;-1:-1:-1;;3263:23:18;;;3383:2;3368:18;;;3355:32;;-1:-1:-1;3073:346:18:o;3606:771::-;3701:6;3709;3717;3725;3733;3786:3;3774:9;3765:7;3761:23;3757:33;3754:53;;;3803:1;3800;3793:12;3754:53;3842:9;3829:23;3861:31;3886:5;3861:31;:::i;:::-;3911:5;-1:-1:-1;3968:2:18;3953:18;;3940:32;3981:33;3940:32;3981:33;:::i;:::-;4033:7;-1:-1:-1;4092:2:18;4077:18;;4064:32;4105:33;4064:32;4105:33;:::i;:::-;3606:771;;;;-1:-1:-1;4157:7:18;;4237:2;4222:18;;4209:32;;-1:-1:-1;4340:3:18;4325:19;4312:33;;3606:771;-1:-1:-1;;3606:771:18:o;4382:418::-;4531:2;4520:9;4513:21;4494:4;4563:6;4557:13;4606:6;4601:2;4590:9;4586:18;4579:34;4665:6;4660:2;4652:6;4648:15;4643:2;4632:9;4628:18;4622:50;4721:1;4716:2;4707:6;4696:9;4692:22;4688:31;4681:42;4791:2;4784;4780:7;4775:2;4767:6;4763:15;4759:29;4748:9;4744:45;4740:54;4732:62;;;4382:418;;;;:::o;4805:367::-;4868:8;4878:6;4932:3;4925:4;4917:6;4913:17;4909:27;4899:55;;4950:1;4947;4940:12;4899:55;-1:-1:-1;4973:20:18;;5016:18;5005:30;;5002:50;;;5048:1;5045;5038:12;5002:50;5085:4;5077:6;5073:17;5061:29;;5145:3;5138:4;5128:6;5125:1;5121:14;5113:6;5109:27;5105:38;5102:47;5099:67;;;5162:1;5159;5152:12;5099:67;4805:367;;;;;:::o;5177:768::-;5299:6;5307;5315;5323;5376:2;5364:9;5355:7;5351:23;5347:32;5344:52;;;5392:1;5389;5382:12;5344:52;5432:9;5419:23;5465:18;5457:6;5454:30;5451:50;;;5497:1;5494;5487:12;5451:50;5536:70;5598:7;5589:6;5578:9;5574:22;5536:70;:::i;:::-;5625:8;;-1:-1:-1;5510:96:18;-1:-1:-1;;5713:2:18;5698:18;;5685:32;5742:18;5729:32;;5726:52;;;5774:1;5771;5764:12;5726:52;5813:72;5877:7;5866:8;5855:9;5851:24;5813:72;:::i;:::-;5177:768;;;;-1:-1:-1;5904:8:18;-1:-1:-1;;;;5177:768:18:o;7222:127::-;7283:10;7278:3;7274:20;7271:1;7264:31;7314:4;7311:1;7304:15;7338:4;7335:1;7328:15;7354:128;7421:9;;;7442:11;;;7439:37;;;7456:18;;:::i;7838:168::-;7911:9;;;7942;;7959:15;;;7953:22;;7939:37;7929:71;;7980:18;;:::i;8011:217::-;8051:1;8077;8067:132;;8121:10;8116:3;8112:20;8109:1;8102:31;8156:4;8153:1;8146:15;8184:4;8181:1;8174:15;8067:132;-1:-1:-1;8213:9:18;;8011:217::o;8512:277::-;8579:6;8632:2;8620:9;8611:7;8607:23;8603:32;8600:52;;;8648:1;8645;8638:12;8600:52;8680:9;8674:16;8733:5;8726:13;8719:21;8712:5;8709:32;8699:60;;8755:1;8752;8745:12;8794:251;8864:6;8917:2;8905:9;8896:7;8892:23;8888:32;8885:52;;;8933:1;8930;8923:12;8885:52;8965:9;8959:16;8984:31;9009:5;8984:31;:::i;9426:631::-;-1:-1:-1;;;;;9747:32:18;;;9729:51;;9816:32;;;;9811:2;9796:18;;9789:60;9880:2;9865:18;;9858:34;9923:2;9908:18;;9901:34;;;;9767:3;9966;9951:19;;9944:32;;;-1:-1:-1;9992:19:18;;;9985:30;10047:3;10032:19;;9426:631::o;10484:184::-;10554:6;10607:2;10595:9;10586:7;10582:23;10578:32;10575:52;;;10623:1;10620;10613:12;10575:52;-1:-1:-1;10646:16:18;;10484:184;-1:-1:-1;10484:184:18:o;12348:127::-;12409:10;12404:3;12400:20;12397:1;12390:31;12440:4;12437:1;12430:15;12464:4;12461:1;12454:15;13293:301;13422:3;13460:6;13454:13;13506:6;13499:4;13491:6;13487:17;13482:3;13476:37;13568:1;13532:16;;13557:13;;;-1:-1:-1;13532:16:18;13293:301;-1:-1:-1;13293:301:18:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1306000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "304",
								"PAUSER_ROLE()": "304",
								"UPGRADER_ROLE()": "326",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"cqnft1155Token()": "2403",
								"cqnftToken()": "2381",
								"cqtToken()": "2448",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"initialize(address,address,address,uint256,uint256)": "infinite",
								"minimumStakingPeriod()": "2339",
								"paused()": "2402",
								"proxiableUUID()": "infinite",
								"renounceRole(bytes32,address)": "29115",
								"revokeRole(bytes32,address)": "infinite",
								"rewardRate()": "2317",
								"stake(uint256,uint256)": "infinite",
								"stakeBatch(uint256[],uint256[])": "infinite",
								"stakes(uint256)": "13230",
								"supportsInterface(bytes4)": "447",
								"unstake(uint256)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 725,
									"end": 4710,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1549,
									"end": 1714,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 1549,
									"end": 1714,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1549,
									"end": 1714,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1549,
									"end": 1714,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1549,
									"end": 1714,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1549,
									"end": 1714,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1549,
									"end": 1714,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1549,
									"end": 1714,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1549,
									"end": 1714,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1549,
									"end": 1714,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1573,
									"end": 1615,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 2362,
									"end": 2366,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1604,
									"end": 1614,
									"name": "CALLER",
									"source": 17
								},
								{
									"begin": 1573,
									"end": 1583,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 1573,
									"end": 1615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1573,
									"end": 1615,
									"name": "tag",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1573,
									"end": 1615,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1625,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "6"
								},
								{
									"begin": 896,
									"end": 920,
									"name": "PUSH",
									"source": 17,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "CALLER",
									"source": 17
								},
								{
									"begin": 1625,
									"end": 1635,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 1625,
									"end": 1660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1625,
									"end": 1660,
									"name": "tag",
									"source": 17,
									"value": "6"
								},
								{
									"begin": 1625,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1670,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "7"
								},
								{
									"begin": 966,
									"end": 992,
									"name": "PUSH",
									"source": 17,
									"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
								},
								{
									"begin": 1696,
									"end": 1706,
									"name": "CALLER",
									"source": 17
								},
								{
									"begin": 1670,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 1670,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1670,
									"end": 1707,
									"name": "tag",
									"source": 17,
									"value": "7"
								},
								{
									"begin": 1670,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1670,
									"end": 1707,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7270,
									"end": 7657,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7270,
									"end": 7657,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7347,
									"end": 7351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2920,
									"end": 2948,
									"name": "PUSH",
									"source": 0,
									"value": "2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800"
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3901,
									"end": 3932,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7432,
									"end": 7651,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7432,
									"end": 7651,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7483,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7489,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7475,
									"end": 7506,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7506,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7506,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7506,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7506,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7506,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7506,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7506,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7513,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7513,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7475,
									"end": 7513,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7509,
									"end": 7513,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7475,
									"end": 7513,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7475,
									"end": 7513,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7559,
									"end": 7571,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 966,
									"end": 976,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 966,
									"end": 976,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 887,
									"end": 983,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7559,
									"end": 7571,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 7559,
									"end": 7571,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7550,
									"end": 7557,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7548,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7532,
									"end": 7572,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7593,
									"end": 7597,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7432,
									"end": 7651,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7432,
									"end": 7651,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7635,
									"end": 7640,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7628,
									"end": 7640,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7628,
									"end": 7640,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7628,
									"end": 7640,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7270,
									"end": 7657,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7270,
									"end": 7657,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7270,
									"end": 7657,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 7270,
									"end": 7657,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7270,
									"end": 7657,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7270,
									"end": 7657,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7270,
									"end": 7657,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "tag",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "636"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 725,
									"end": 4710,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093b9a88d1b3827e35df39db0c4f5f0b1503195780818a3a84e007496b58530ea64736f6c634300081a0033",
									".code": [
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "7B0A47EE"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "D0F7D24F"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "D547741F"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "D5A44F86"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "E63AB1E9"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "F72C0D8B"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "7B0A47EE"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "7EBED54C"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "8172885B"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "91D14854"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "A217FDDF"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "A6B63EB8"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "36568ABE"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "36568ABE"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "4D9A824D"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "4F1EF286"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "52D1902D"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "5C975ABB"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "7B0472F0"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A7"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "248A9CA3"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "2E17DE78"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "2F2FF15D"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "34AAB064"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 725,
											"end": 4710,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 874,
											"end": 899,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 874,
											"end": 899,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 874,
											"end": 899,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 862,
											"end": 864,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 728,
											"end": 905,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 3536,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "tag",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 3536,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "tag",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "tag",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "tag",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1795,
											"end": 1846,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1795,
											"end": 1846,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1783,
											"end": 1785,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1649,
											"end": 1852,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1276,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "tag",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "tag",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 2223,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "tag",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 2223,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1317,
											"end": 1342,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "tag",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "PUSH",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1348,
											"end": 1383,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "tag",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1282,
											"end": 1311,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "tag",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 1720,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "tag",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 1720,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "tag",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 3211,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "tag",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 3211,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "tag",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 1177,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "tag",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "tag",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6237,
											"end": 6262,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 6237,
											"end": 6262,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6237,
											"end": 6262,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6298,
											"end": 6330,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6298,
											"end": 6330,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 6298,
											"end": 6330,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6293,
											"end": 6295,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6271,
											"end": 6331,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6347,
											"end": 6365,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 6347,
											"end": 6365,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6347,
											"end": 6365,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6340,
											"end": 6374,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6340,
											"end": 6374,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6340,
											"end": 6374,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6340,
											"end": 6374,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6405,
											"end": 6407,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6383,
											"end": 6417,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 6433,
											"end": 6452,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6433,
											"end": 6452,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6426,
											"end": 6461,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6318,
											"end": 6321,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 6477,
											"end": 6496,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6477,
											"end": 6496,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6470,
											"end": 6505,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6224,
											"end": 6227,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 6209,
											"end": 6228,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 5950,
											"end": 6511,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 858,
											"end": 920,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 858,
											"end": 920,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 858,
											"end": 920,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 858,
											"end": 920,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 858,
											"end": 920,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 858,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 858,
											"end": 920,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 858,
											"end": 920,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 920,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 858,
											"end": 920,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 858,
											"end": 920,
											"name": "tag",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 858,
											"end": 920,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 858,
											"end": 920,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 858,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 896,
											"end": 920,
											"name": "PUSH",
											"source": 17,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 858,
											"end": 920,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 858,
											"end": 920,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 966,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 926,
											"end": 992,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 926,
											"end": 992,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3626,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3610,
											"end": 3626,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3610,
											"end": 3626,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3610,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3626,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3610,
											"end": 3626,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3626,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3610,
											"end": 3626,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3610,
											"end": 3632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3610,
											"end": 3632,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3610,
											"end": 3632,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3610,
											"end": 3632,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3636,
											"end": 3646,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3610,
											"end": 3646,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 3677,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3602,
											"end": 3677,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6718,
											"end": 6720,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3602,
											"end": 3677,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6700,
											"end": 6721,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6757,
											"end": 6759,
											"name": "PUSH",
											"source": 18,
											"value": "1A"
										},
										{
											"begin": 6737,
											"end": 6755,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 6737,
											"end": 6755,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6737,
											"end": 6755,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6730,
											"end": 6760,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6796,
											"end": 6824,
											"name": "PUSH",
											"source": 18,
											"value": "4E6F7420746865206F776E6572206F6620746865207374616B65000000000000"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6769,
											"end": 6825,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6842,
											"end": 6860,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 6842,
											"end": 6860,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 3602,
											"end": 3677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3695,
											"end": 3711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3711,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3723,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 3695,
											"end": 3723,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3695,
											"end": 3728,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3687,
											"end": 3755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 3687,
											"end": 3755,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3687,
											"end": 3755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3687,
											"end": 3755,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3687,
											"end": 3755,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3687,
											"end": 3755,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7073,
											"end": 7075,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3687,
											"end": 3755,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3687,
											"end": 3755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7055,
											"end": 7076,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7112,
											"end": 7114,
											"name": "PUSH",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7085,
											"end": 7115,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B88185B1C9958591E481D5B9CDD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7131,
											"end": 7149,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 7131,
											"end": 7149,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7131,
											"end": 7149,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7124,
											"end": 7176,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7193,
											"end": 7211,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 7193,
											"end": 7211,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3687,
											"end": 3755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 6871,
											"end": 7217,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3687,
											"end": 3755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 3687,
											"end": 3755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3766,
											"end": 3787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3824,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3808,
											"end": 3824,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3808,
											"end": 3824,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3808,
											"end": 3814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3808,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3808,
											"end": 3824,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3808,
											"end": 3824,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3808,
											"end": 3824,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3808,
											"end": 3824,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3808,
											"end": 3834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 3808,
											"end": 3834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3808,
											"end": 3834,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3790,
											"end": 3834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 3790,
											"end": 3834,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3790,
											"end": 3805,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3790,
											"end": 3834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "155"
										},
										{
											"begin": 3790,
											"end": 3834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3790,
											"end": 3834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 3790,
											"end": 3834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3766,
											"end": 3834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3766,
											"end": 3834,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3869,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 3869,
											"end": 3889,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3852,
											"end": 3865,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3852,
											"end": 3889,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3852,
											"end": 3889,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3844,
											"end": 3916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 3844,
											"end": 3916,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3844,
											"end": 3916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 3916,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3844,
											"end": 3916,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3844,
											"end": 3916,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7689,
											"end": 7691,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 3916,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3844,
											"end": 3916,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7671,
											"end": 7692,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7728,
											"end": 7730,
											"name": "PUSH",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7708,
											"end": 7726,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7701,
											"end": 7731,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD185ADA5B99C81C195C9A5BD9081B9BDD081B595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7747,
											"end": 7765,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 7747,
											"end": 7765,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7747,
											"end": 7765,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7740,
											"end": 7792,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3844,
											"end": 3916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 7487,
											"end": 7833,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3844,
											"end": 3916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 3844,
											"end": 3916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 3943,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3943,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3943,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3927,
											"end": 3943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3927,
											"end": 3943,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3943,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3927,
											"end": 3943,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3943,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3958,
											"end": 3973,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 3927,
											"end": 3955,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3973,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4039,
											"end": 4062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4039,
											"end": 4062,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4026,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 4026,
											"end": 4036,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4066,
											"end": 4070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4066,
											"end": 4070,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4039,
											"end": 4062,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4010,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 4010,
											"end": 4036,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4010,
											"end": 4023,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4010,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 4010,
											"end": 4036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4010,
											"end": 4036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 4010,
											"end": 4036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4010,
											"end": 4062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 4010,
											"end": 4062,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4010,
											"end": 4062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4010,
											"end": 4062,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 4010,
											"end": 4062,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4010,
											"end": 4062,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 4010,
											"end": 4062,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4009,
											"end": 4070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 4009,
											"end": 4070,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4009,
											"end": 4070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4009,
											"end": 4070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 4009,
											"end": 4070,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4009,
											"end": 4070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 4009,
											"end": 4070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3999,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3999,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3999,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3989,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3983,
											"end": 3999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 3999,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3999,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 3999,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3999,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3999,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3999,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3983,
											"end": 4006,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4006,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4006,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4070,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4070,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4070,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4125,
											"end": 4133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4107,
											"end": 4180,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4154,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8407,
											"end": 8458,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8407,
											"end": 8458,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8407,
											"end": 8458,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8407,
											"end": 8458,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8501,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8501,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8501,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8501,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4125,
											"end": 4133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "A9059CBB"
										},
										{
											"begin": 4107,
											"end": 4143,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4180,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 4107,
											"end": 4180,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 4107,
											"end": 4180,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4243,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4195,
											"end": 4243,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4195,
											"end": 4243,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 874,
											"end": 899,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 874,
											"end": 899,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 874,
											"end": 899,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4255,
											"end": 4259,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 4255,
											"end": 4259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "6352211E"
										},
										{
											"begin": 4195,
											"end": 4233,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4243,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 4195,
											"end": 4243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 4195,
											"end": 4243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4195,
											"end": 4260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4195,
											"end": 4260,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4191,
											"end": 4494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 4191,
											"end": 4494,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4295,
											"end": 4305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 4295,
											"end": 4305,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4356,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4356,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4328,
											"end": 4332,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4356,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9252,
											"end": 9303,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9312,
											"end": 9372,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9381,
											"end": 9415,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9381,
											"end": 9415,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9381,
											"end": 9415,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4295,
											"end": 4305,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4295,
											"end": 4305,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4295,
											"end": 4305,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4295,
											"end": 4305,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 4276,
											"end": 4319,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4356,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4356,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4276,
											"end": 4356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4191,
											"end": 4494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 4191,
											"end": 4494,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4191,
											"end": 4494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 4191,
											"end": 4494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4407,
											"end": 4421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4387,
											"end": 4483,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4387,
											"end": 4483,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4407,
											"end": 4421,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "F242432A"
										},
										{
											"begin": 4387,
											"end": 4439,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 4387,
											"end": 4483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4448,
											"end": 4452,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 4448,
											"end": 4452,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4465,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4467,
											"end": 4475,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4467,
											"end": 4475,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4407,
											"end": 4421,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 4387,
											"end": 4483,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4483,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4483,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4387,
											"end": 4483,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4191,
											"end": 4494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 4191,
											"end": 4494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 4511,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4504,
											"end": 4527,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4527,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4615,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4615,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10293,
											"end": 10318,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10293,
											"end": 10318,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10293,
											"end": 10318,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4562,
											"end": 4572,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 10334,
											"end": 10352,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10334,
											"end": 10352,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10334,
											"end": 10352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10327,
											"end": 10387,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10327,
											"end": 10387,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10327,
											"end": 10387,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10327,
											"end": 10387,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4574,
											"end": 4589,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10403,
											"end": 10421,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10396,
											"end": 10430,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10461,
											"end": 10463,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10439,
											"end": 10473,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10439,
											"end": 10473,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10439,
											"end": 10473,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10439,
											"end": 10473,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4543,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFDAF13B1D96BFC2213355F353F84C19493E0681EB0DF26F83D862ACD266750A"
										},
										{
											"begin": 4543,
											"end": 4615,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10280,
											"end": 10283,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 10265,
											"end": 10284,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4543,
											"end": 4615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 4543,
											"end": 4615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4543,
											"end": 4615,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4615,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4615,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4615,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 17
										},
										{
											"begin": 3592,
											"end": 4622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 4622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "tag",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 2223,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2344,
											"end": 2354,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 874,
											"end": 899,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 874,
											"end": 899,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 874,
											"end": 899,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2377,
											"end": 2387,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2377,
											"end": 2387,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2344,
											"end": 2354,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2344,
											"end": 2354,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "6352211E"
										},
										{
											"begin": 2325,
											"end": 2363,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2373,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 2325,
											"end": 2373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 2325,
											"end": 2373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2325,
											"end": 2387,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2387,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2474,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 2325,
											"end": 2474,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2470,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7EEAC7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2403,
											"end": 2470,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2449,
											"end": 2459,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2403,
											"end": 2470,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8407,
											"end": 8458,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8501,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8501,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8501,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2473,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2474,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2437,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2423,
											"end": 2437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FDD58E"
										},
										{
											"begin": 2403,
											"end": 2448,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "225"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2470,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "225"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 2403,
											"end": 2470,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 2403,
											"end": 2470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2474,
											"modifierDepth": 1,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 2325,
											"end": 2474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2304,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 2304,
											"end": 2526,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2304,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2526,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2304,
											"end": 2526,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2304,
											"end": 2526,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10875,
											"end": 10877,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2304,
											"end": 2526,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2304,
											"end": 2526,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10857,
											"end": 10878,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10914,
											"end": 10916,
											"name": "PUSH",
											"source": 18,
											"value": "1A"
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10887,
											"end": 10917,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10953,
											"end": 10981,
											"name": "PUSH",
											"source": 18,
											"value": "4E6F7420746865206F776E6572206F662074686520746F6B656E000000000000"
										},
										{
											"begin": 10933,
											"end": 10951,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10933,
											"end": 10951,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10933,
											"end": 10951,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10926,
											"end": 10982,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2304,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 10673,
											"end": 11023,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2304,
											"end": 2526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 2304,
											"end": 2526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2544,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2560,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2544,
											"end": 2560,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2544,
											"end": 2560,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2544,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 2544,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2544,
											"end": 2560,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2544,
											"end": 2560,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2560,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2544,
											"end": 2560,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2544,
											"end": 2568,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2544,
											"end": 2573,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2536,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 2536,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2536,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2598,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2536,
											"end": 2598,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2536,
											"end": 2598,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11230,
											"end": 11232,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2598,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2536,
											"end": 2598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11212,
											"end": 11233,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11269,
											"end": 11271,
											"name": "PUSH",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 11249,
											"end": 11267,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11249,
											"end": 11267,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11249,
											"end": 11267,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11242,
											"end": 11272,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B88185B1C9958591E481CDD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11288,
											"end": 11306,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 11288,
											"end": 11306,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11288,
											"end": 11306,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11281,
											"end": 11331,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11348,
											"end": 11366,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 11348,
											"end": 11366,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2536,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 11028,
											"end": 11372,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2536,
											"end": 2598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 2536,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2686,
											"end": 2696,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2721,
											"end": 2736,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2827,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2609,
											"end": 2827,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2861,
											"end": 2871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2861,
											"end": 2871,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2842,
											"end": 2890,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 874,
											"end": 899,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 874,
											"end": 899,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 874,
											"end": 899,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2686,
											"end": 2696,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2686,
											"end": 2696,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2861,
											"end": 2871,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2861,
											"end": 2871,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2861,
											"end": 2871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2861,
											"end": 2871,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "6352211E"
										},
										{
											"begin": 2842,
											"end": 2880,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2890,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 2842,
											"end": 2890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 2842,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2842,
											"end": 2904,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2842,
											"end": 2904,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2838,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 2838,
											"end": 3138,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2939,
											"end": 2949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2939,
											"end": 2949,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2920,
											"end": 3000,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2920,
											"end": 3000,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2964,
											"end": 2974,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2920,
											"end": 3000,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9252,
											"end": 9303,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2984,
											"end": 2988,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9319,
											"end": 9337,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9312,
											"end": 9372,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9406,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9381,
											"end": 9415,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9381,
											"end": 9415,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9381,
											"end": 9415,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2939,
											"end": 2949,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2939,
											"end": 2949,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2939,
											"end": 2949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2939,
											"end": 2949,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 2920,
											"end": 2963,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 3000,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 3000,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2838,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 2838,
											"end": 3138,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2838,
											"end": 3138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 2838,
											"end": 3138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3051,
											"end": 3065,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3127,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3127,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3065,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3065,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3065,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "F242432A"
										},
										{
											"begin": 3031,
											"end": 3083,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "244"
										},
										{
											"begin": 3031,
											"end": 3127,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3084,
											"end": 3094,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3084,
											"end": 3094,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3104,
											"end": 3108,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 3104,
											"end": 3108,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3119,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3119,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3065,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3051,
											"end": 3065,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 3031,
											"end": 3127,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "244"
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3127,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3127,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3031,
											"end": 3127,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2838,
											"end": 3138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 2838,
											"end": 3138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3153,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3198,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3153,
											"end": 3198,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11579,
											"end": 11604,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11579,
											"end": 11604,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11579,
											"end": 11604,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3170,
											"end": 3180,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 11635,
											"end": 11637,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11638,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11620,
											"end": 11638,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11613,
											"end": 11673,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3182,
											"end": 3197,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11689,
											"end": 11707,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "18DCD430020E4D4899772FD94A8B40451DC5044DFB70BC46B532EEAE431C864F"
										},
										{
											"begin": 3153,
											"end": 3198,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11567,
											"end": 11569,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 11552,
											"end": 11570,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3153,
											"end": 3198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 11377,
											"end": 11722,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "tag",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 1954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 1932,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 1932,
											"end": 1954,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1932,
											"end": 1954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 1932,
											"end": 1954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 1964,
											"end": 1979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 1964,
											"end": 1981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 1981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 1964,
											"end": 1981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1991,
											"end": 2015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 1991,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 1991,
											"end": 2015,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1991,
											"end": 2015,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 1991,
											"end": 2015,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 2026,
											"end": 2046,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2046,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2026,
											"end": 2046,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2046,
											"name": "DUP14",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2046,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2026,
											"end": 2046,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2046,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2046,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2046,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2046,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2046,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2026,
											"end": 2046,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2056,
											"end": 2080,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2080,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2080,
											"name": "DUP13",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2080,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2080,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2080,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2080,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2080,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2056,
											"end": 2080,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2090,
											"end": 2122,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2132,
											"end": 2142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2166,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 2166,
											"end": 2210,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2166,
											"end": 2210,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2166,
											"end": 2210,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 11880,
											"end": 11930,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11880,
											"end": 11930,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11868,
											"end": 11870,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1720,
											"end": 2217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "tag",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3366,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3330,
											"end": 3366,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3330,
											"end": 3366,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3322,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 3322,
											"end": 3409,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3322,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3322,
											"end": 3409,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3322,
											"end": 3409,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3322,
											"end": 3409,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12143,
											"end": 12145,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3322,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3322,
											"end": 3409,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3322,
											"end": 3409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12125,
											"end": 12146,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12182,
											"end": 12184,
											"name": "PUSH",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12155,
											"end": 12185,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12221,
											"end": 12255,
											"name": "PUSH",
											"source": 18,
											"value": "546F6B656E2049447320616E64207261726974696573206C656E677468206D69"
										},
										{
											"begin": 12201,
											"end": 12219,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 12201,
											"end": 12219,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12201,
											"end": 12219,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12194,
											"end": 12256,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12265,
											"end": 12301,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12318,
											"end": 12337,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 12318,
											"end": 12337,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3322,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 11941,
											"end": 12343,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3322,
											"end": 3409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 3322,
											"end": 3409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3424,
											"end": 3433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 3419,
											"end": 3524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3439,
											"end": 3459,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3439,
											"end": 3459,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3439,
											"end": 3459,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 3419,
											"end": 3524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3480,
											"end": 3513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 3486,
											"end": 3495,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3495,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 3486,
											"end": 3498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3486,
											"end": 3498,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3509,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3509,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3510,
											"end": 3511,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 3500,
											"end": 3512,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3512,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3480,
											"end": 3485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 3480,
											"end": 3513,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3480,
											"end": 3513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 3480,
											"end": 3513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3461,
											"end": 3464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3461,
											"end": 3464,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 3419,
											"end": 3524,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 3419,
											"end": 3524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3524,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3211,
											"end": 3530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12682,
											"end": 12684,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12664,
											"end": 12685,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12721,
											"end": 12723,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 12701,
											"end": 12719,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12701,
											"end": 12719,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12701,
											"end": 12719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12694,
											"end": 12724,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12740,
											"end": 12758,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 12740,
											"end": 12758,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12740,
											"end": 12758,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12733,
											"end": 12779,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12796,
											"end": 12814,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 12796,
											"end": 12814,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 12480,
											"end": 12820,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7970,
											"end": 7974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8059,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4628,
											"end": 4708,
											"name": "tag",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 4628,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 966,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1846,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1768,
											"end": 1786,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1768,
											"end": 1786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1649,
											"end": 1852,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 874,
											"end": 899,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 874,
											"end": 899,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 874,
											"end": 899,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 728,
											"end": 905,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8425,
											"end": 8457,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8425,
											"end": 8457,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8407,
											"end": 8458,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8501,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8501,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8501,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8233,
											"end": 8507,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1846,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1768,
											"end": 1786,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1768,
											"end": 1786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1649,
											"end": 1852,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1845,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1795,
											"end": 1846,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1768,
											"end": 1786,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1768,
											"end": 1786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 1649,
											"end": 1852,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 497,
											"end": 723,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 497,
											"end": 723,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 556,
											"end": 562,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 606,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 584,
											"end": 607,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 577,
											"end": 629,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 577,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 615,
											"end": 627,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 577,
											"end": 629,
											"name": "tag",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 670,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 670,
											"end": 693,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 497,
											"end": 723,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 497,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1141,
											"end": 1272,
											"name": "tag",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 1141,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1216,
											"end": 1247,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1216,
											"end": 1247,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1248,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1248,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1196,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "298"
										},
										{
											"begin": 1196,
											"end": 1266,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1277,
											"end": 1644,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 1277,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1345,
											"end": 1351,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1394,
											"end": 1403,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1385,
											"end": 1392,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1377,
											"end": 1409,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1412,
											"end": 1424,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "tag",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1467,
											"end": 1490,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1566,
											"end": 1568,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1551,
											"end": 1569,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1551,
											"end": 1569,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1538,
											"end": 1570,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1579,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 1538,
											"end": 1570,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1579,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 1579,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1579,
											"end": 1612,
											"name": "tag",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 1579,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1638,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1638,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1638,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1277,
											"end": 1644,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1277,
											"end": 1644,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1277,
											"end": 1644,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1277,
											"end": 1644,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1277,
											"end": 1644,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1277,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1857,
											"end": 1984,
											"name": "tag",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 1857,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 1913,
											"end": 1916,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1909,
											"end": 1929,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1930,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1949,
											"end": 1953,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1939,
											"end": 1954,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1973,
											"end": 1977,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1970,
											"end": 1971,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1978,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1989,
											"end": 3068,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 1989,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2127,
											"end": 2129,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2106,
											"end": 2113,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2102,
											"end": 2125,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2095,
											"end": 2147,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2095,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 2095,
											"end": 2147,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2141,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2133,
											"end": 2145,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2095,
											"end": 2147,
											"name": "tag",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 2095,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2182,
											"end": 2191,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2169,
											"end": 2192,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 2226,
											"end": 2231,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 2201,
											"end": 2232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "tag",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2279,
											"end": 2311,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2370,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 2320,
											"end": 2370,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2366,
											"end": 2367,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2364,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2356,
											"end": 2368,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2370,
											"name": "tag",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 2320,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2434,
											"end": 2447,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2434,
											"end": 2447,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2430,
											"end": 2457,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2420,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 2420,
											"end": 2475,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2471,
											"end": 2472,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2469,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2461,
											"end": 2473,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2420,
											"end": 2475,
											"name": "tag",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 2420,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2511,
											"end": 2513,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2498,
											"end": 2514,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2526,
											"end": 2556,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2523,
											"end": 2579,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2523,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 2523,
											"end": 2579,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2559,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 2559,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 2559,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2559,
											"end": 2577,
											"name": "tag",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 2559,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2610,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2662,
											"end": 2679,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2679,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2658,
											"end": 2689,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2658,
											"end": 2689,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2658,
											"end": 2689,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2691,
											"end": 2693,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 2654,
											"end": 2694,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2650,
											"end": 2704,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2638,
											"end": 2705,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2638,
											"end": 2705,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2735,
											"end": 2753,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2720,
											"end": 2754,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2720,
											"end": 2754,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2717,
											"end": 2779,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2714,
											"end": 2802,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2714,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 2714,
											"end": 2802,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2782,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 2782,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 2782,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2782,
											"end": 2800,
											"name": "tag",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 2782,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2818,
											"end": 2820,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2833,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2842,
											"end": 2864,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2842,
											"end": 2864,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2842,
											"end": 2864,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2883,
											"end": 2898,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2883,
											"end": 2898,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2883,
											"end": 2898,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2900,
											"end": 2902,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2876,
											"end": 2913,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2873,
											"end": 2930,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2873,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 2873,
											"end": 2930,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2924,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2916,
											"end": 2928,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2873,
											"end": 2930,
											"name": "tag",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 2873,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2977,
											"end": 2979,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 2975,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2969,
											"end": 2980,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2964,
											"end": 2966,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2952,
											"end": 2967,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2939,
											"end": 2989,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3027,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3009,
											"end": 3028,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3005,
											"end": 3033,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2998,
											"end": 3037,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3056,
											"end": 3062,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1989,
											"end": 3068,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1989,
											"end": 3068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1989,
											"end": 3068,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1989,
											"end": 3068,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1989,
											"end": 3068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1989,
											"end": 3068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3073,
											"end": 3419,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 3073,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3155,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3202,
											"end": 3204,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3181,
											"end": 3188,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3177,
											"end": 3200,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3173,
											"end": 3205,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3170,
											"end": 3222,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3170,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 3170,
											"end": 3222,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3218,
											"end": 3219,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3216,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3170,
											"end": 3222,
											"name": "tag",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 3170,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3263,
											"end": 3286,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3263,
											"end": 3286,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3263,
											"end": 3286,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3383,
											"end": 3385,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3386,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3386,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3368,
											"end": 3386,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3073,
											"end": 3419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 4377,
											"name": "tag",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 3606,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3701,
											"end": 3707,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3715,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3717,
											"end": 3723,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3731,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3733,
											"end": 3739,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3789,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 3774,
											"end": 3783,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3765,
											"end": 3772,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 3761,
											"end": 3784,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3757,
											"end": 3790,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3754,
											"end": 3807,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3754,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 3754,
											"end": 3807,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3803,
											"end": 3804,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3801,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3793,
											"end": 3805,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3754,
											"end": 3807,
											"name": "tag",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 3754,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3829,
											"end": 3852,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3861,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3861,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 3861,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3861,
											"end": 3892,
											"name": "tag",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 3861,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3911,
											"end": 3916,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3968,
											"end": 3970,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3940,
											"end": 3972,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3981,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 3940,
											"end": 3972,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3981,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 3981,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3981,
											"end": 4014,
											"name": "tag",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 3981,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4033,
											"end": 4040,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4077,
											"end": 4095,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4077,
											"end": 4095,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4064,
											"end": 4096,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4105,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 4064,
											"end": 4096,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4105,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 4105,
											"end": 4138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4105,
											"end": 4138,
											"name": "tag",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 4105,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 4377,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 4377,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 4377,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 4377,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4222,
											"end": 4240,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4222,
											"end": 4240,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4209,
											"end": 4241,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4209,
											"end": 4241,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4340,
											"end": 4343,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 4325,
											"end": 4344,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4312,
											"end": 4345,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4312,
											"end": 4345,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 4377,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3606,
											"end": 4377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4382,
											"end": 4800,
											"name": "tag",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 4382,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4531,
											"end": 4533,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4529,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4513,
											"end": 4534,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4494,
											"end": 4498,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4557,
											"end": 4570,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4601,
											"end": 4603,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4590,
											"end": 4599,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4586,
											"end": 4604,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4579,
											"end": 4613,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4660,
											"end": 4662,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4652,
											"end": 4658,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4648,
											"end": 4663,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4643,
											"end": 4645,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4632,
											"end": 4641,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4628,
											"end": 4646,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4622,
											"end": 4672,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 4721,
											"end": 4722,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4707,
											"end": 4713,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4692,
											"end": 4714,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4688,
											"end": 4719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4681,
											"end": 4723,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4791,
											"end": 4793,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4784,
											"end": 4786,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 4780,
											"end": 4787,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 4775,
											"end": 4777,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 4767,
											"end": 4773,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4763,
											"end": 4778,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4788,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4748,
											"end": 4757,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4744,
											"end": 4789,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4740,
											"end": 4794,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4732,
											"end": 4794,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4732,
											"end": 4794,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4732,
											"end": 4794,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4382,
											"end": 4800,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4382,
											"end": 4800,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4382,
											"end": 4800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4382,
											"end": 4800,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4382,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4805,
											"end": 5172,
											"name": "tag",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 4805,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4868,
											"end": 4876,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4884,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4932,
											"end": 4935,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4925,
											"end": 4929,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 4917,
											"end": 4923,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4913,
											"end": 4930,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4909,
											"end": 4936,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4899,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 4899,
											"end": 4954,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4950,
											"end": 4951,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4948,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4940,
											"end": 4952,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4899,
											"end": 4954,
											"name": "tag",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 4899,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4973,
											"end": 4993,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5005,
											"end": 5035,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5005,
											"end": 5035,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5002,
											"end": 5052,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5002,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 5002,
											"end": 5052,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5048,
											"end": 5049,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5046,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5050,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5002,
											"end": 5052,
											"name": "tag",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 5002,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5085,
											"end": 5089,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5083,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5073,
											"end": 5090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5061,
											"end": 5090,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5061,
											"end": 5090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5145,
											"end": 5148,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 5134,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5125,
											"end": 5126,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 5121,
											"end": 5135,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5109,
											"end": 5136,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5105,
											"end": 5143,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5102,
											"end": 5149,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5099,
											"end": 5166,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5099,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 5099,
											"end": 5166,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5162,
											"end": 5163,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 5160,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5099,
											"end": 5166,
											"name": "tag",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 5099,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4805,
											"end": 5172,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4805,
											"end": 5172,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4805,
											"end": 5172,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4805,
											"end": 5172,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4805,
											"end": 5172,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4805,
											"end": 5172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5177,
											"end": 5945,
											"name": "tag",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 5177,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5315,
											"end": 5321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5376,
											"end": 5378,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5373,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5355,
											"end": 5362,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5351,
											"end": 5374,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5347,
											"end": 5379,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5396,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 5344,
											"end": 5396,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5392,
											"end": 5393,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5390,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5382,
											"end": 5394,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5344,
											"end": 5396,
											"name": "tag",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 5344,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5419,
											"end": 5442,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5465,
											"end": 5483,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5463,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5501,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 5451,
											"end": 5501,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5497,
											"end": 5498,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5494,
											"end": 5495,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5487,
											"end": 5499,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5451,
											"end": 5501,
											"name": "tag",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 5451,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5536,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 5598,
											"end": 5605,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5578,
											"end": 5587,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 5574,
											"end": 5596,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5536,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 5536,
											"end": 5606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5536,
											"end": 5606,
											"name": "tag",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 5536,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5625,
											"end": 5633,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5625,
											"end": 5633,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5510,
											"end": 5606,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5713,
											"end": 5715,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5685,
											"end": 5717,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5729,
											"end": 5761,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5729,
											"end": 5761,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5726,
											"end": 5778,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5726,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 5726,
											"end": 5778,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 5772,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5764,
											"end": 5776,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5726,
											"end": 5778,
											"name": "tag",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 5726,
											"end": 5778,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5813,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 5877,
											"end": 5884,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5866,
											"end": 5874,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5855,
											"end": 5864,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5813,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 5813,
											"end": 5885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5813,
											"end": 5885,
											"name": "tag",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 5813,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5177,
											"end": 5945,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 5177,
											"end": 5945,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 5177,
											"end": 5945,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 5177,
											"end": 5945,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5904,
											"end": 5912,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5177,
											"end": 5945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7222,
											"end": 7349,
											"name": "tag",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 7222,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7283,
											"end": 7293,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 7278,
											"end": 7281,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 7274,
											"end": 7294,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 7271,
											"end": 7272,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 7295,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7314,
											"end": 7318,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 7311,
											"end": 7312,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7304,
											"end": 7319,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7338,
											"end": 7342,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7335,
											"end": 7336,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7343,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7354,
											"end": 7482,
											"name": "tag",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 7354,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7421,
											"end": 7430,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7421,
											"end": 7430,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7421,
											"end": 7430,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7442,
											"end": 7453,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7442,
											"end": 7453,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7442,
											"end": 7453,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7439,
											"end": 7476,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7439,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 7439,
											"end": 7476,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7456,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 7456,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 7456,
											"end": 7474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7838,
											"end": 8006,
											"name": "tag",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 7838,
											"end": 8006,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7911,
											"end": 7920,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7911,
											"end": 7920,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7911,
											"end": 7920,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 7942,
											"end": 7951,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7942,
											"end": 7951,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7959,
											"end": 7974,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7959,
											"end": 7974,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7959,
											"end": 7974,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 7953,
											"end": 7975,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7953,
											"end": 7975,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 7939,
											"end": 7976,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 7929,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 7929,
											"end": 8000,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7980,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 7980,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 7980,
											"end": 7998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8011,
											"end": 8228,
											"name": "tag",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 8011,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8051,
											"end": 8052,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8067,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 8067,
											"end": 8199,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 8116,
											"end": 8119,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 8109,
											"end": 8110,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8133,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8156,
											"end": 8160,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 8153,
											"end": 8154,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8146,
											"end": 8161,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8184,
											"end": 8188,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8181,
											"end": 8182,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8174,
											"end": 8189,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8067,
											"end": 8199,
											"name": "tag",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 8067,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 8222,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 8213,
											"end": 8222,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8011,
											"end": 8228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8512,
											"end": 8789,
											"name": "tag",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 8512,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8579,
											"end": 8585,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8632,
											"end": 8634,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8620,
											"end": 8629,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8611,
											"end": 8618,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8607,
											"end": 8630,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8603,
											"end": 8635,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8600,
											"end": 8652,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8600,
											"end": 8652,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 8600,
											"end": 8652,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8648,
											"end": 8649,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8646,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8638,
											"end": 8650,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8600,
											"end": 8652,
											"name": "tag",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 8600,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8680,
											"end": 8689,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8674,
											"end": 8690,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8733,
											"end": 8738,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8726,
											"end": 8739,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8719,
											"end": 8740,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8712,
											"end": 8717,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8709,
											"end": 8741,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 8699,
											"end": 8759,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 8699,
											"end": 8759,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8755,
											"end": 8756,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8745,
											"end": 8757,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8794,
											"end": 9045,
											"name": "tag",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 8794,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8864,
											"end": 8870,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 8919,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8905,
											"end": 8914,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8896,
											"end": 8903,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8892,
											"end": 8915,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8888,
											"end": 8920,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8885,
											"end": 8937,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8885,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 8885,
											"end": 8937,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8933,
											"end": 8934,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8930,
											"end": 8931,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8923,
											"end": 8935,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8885,
											"end": 8937,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 8885,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8965,
											"end": 8974,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8959,
											"end": 8975,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 8984,
											"end": 9015,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 9009,
											"end": 9014,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8984,
											"end": 9015,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 8984,
											"end": 9015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9426,
											"end": 10057,
											"name": "tag",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 9426,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9747,
											"end": 9779,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 9747,
											"end": 9779,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9747,
											"end": 9779,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 9729,
											"end": 9780,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9729,
											"end": 9780,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9816,
											"end": 9848,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9816,
											"end": 9848,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9816,
											"end": 9848,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 9816,
											"end": 9848,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 9811,
											"end": 9813,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9796,
											"end": 9814,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9796,
											"end": 9814,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9789,
											"end": 9849,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9880,
											"end": 9882,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9865,
											"end": 9883,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9865,
											"end": 9883,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9858,
											"end": 9892,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9923,
											"end": 9925,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9901,
											"end": 9935,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9901,
											"end": 9935,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9901,
											"end": 9935,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9901,
											"end": 9935,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9767,
											"end": 9770,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 9966,
											"end": 9969,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 9951,
											"end": 9970,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9951,
											"end": 9970,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9944,
											"end": 9976,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9944,
											"end": 9976,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9944,
											"end": 9976,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 10011,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9992,
											"end": 10011,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9992,
											"end": 10011,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9985,
											"end": 10015,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10047,
											"end": 10050,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 10032,
											"end": 10051,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10032,
											"end": 10051,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9426,
											"end": 10057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10484,
											"end": 10668,
											"name": "tag",
											"source": 18,
											"value": "227"
										},
										{
											"begin": 10484,
											"end": 10668,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10554,
											"end": 10560,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10609,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10595,
											"end": 10604,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10586,
											"end": 10593,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10582,
											"end": 10605,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10578,
											"end": 10610,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10575,
											"end": 10627,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10575,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 10575,
											"end": 10627,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10623,
											"end": 10624,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10620,
											"end": 10621,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10613,
											"end": 10625,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 10575,
											"end": 10627,
											"name": "tag",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 10575,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10646,
											"end": 10662,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 10646,
											"end": 10662,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10484,
											"end": 10668,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10484,
											"end": 10668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12348,
											"end": 12475,
											"name": "tag",
											"source": 18,
											"value": "282"
										},
										{
											"begin": 12348,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12409,
											"end": 12419,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 12404,
											"end": 12407,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 12400,
											"end": 12420,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 12397,
											"end": 12398,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12390,
											"end": 12421,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12440,
											"end": 12444,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 12437,
											"end": 12438,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 12430,
											"end": 12445,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12464,
											"end": 12468,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12461,
											"end": 12462,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12454,
											"end": 12469,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 13293,
											"end": 13594,
											"name": "tag",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 13293,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13422,
											"end": 13425,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13460,
											"end": 13466,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13454,
											"end": 13467,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 13506,
											"end": 13512,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13499,
											"end": 13503,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13491,
											"end": 13497,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13487,
											"end": 13504,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13482,
											"end": 13485,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13476,
											"end": 13513,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 13568,
											"end": 13569,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13532,
											"end": 13548,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13532,
											"end": 13548,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13557,
											"end": 13570,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13557,
											"end": 13570,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13557,
											"end": 13570,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13532,
											"end": 13548,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13293,
											"end": 13594,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13293,
											"end": 13594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F": "02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"PAUSER_ROLE()": "e63ab1e9",
							"UPGRADER_ROLE()": "f72c0d8b",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"cqnft1155Token()": "8172885b",
							"cqnftToken()": "4d9a824d",
							"cqtToken()": "34aab064",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,address,address,uint256,uint256)": "a6b63eb8",
							"minimumStakingPeriod()": "7ebed54c",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardRate()": "7b0a47ee",
							"stake(uint256,uint256)": "7b0472f0",
							"stakeBatch(uint256[],uint256[])": "d0f7d24f",
							"stakes(uint256)": "d5a44f86",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unstake(uint256)": "2e17de78",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cqnft1155Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cqnftToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cqtToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cqtToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cqnftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cqnft1155Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumStakingPeriod\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rarity\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_rarities\",\"type\":\"uint256[]\"}],\"name\":\"stakeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rarity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"jacquedegraff@creodamo.com\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":\"CryptoQuestTheShardsOfGenesisStaking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol\":{\"keccak256\":\"0x85821e25d9f0d39b76e601a9ee98262255f2ba1ee7aa0d93171338ae8e2fc11b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://513a6ec050cf3b891fca24a92718826797e917ac517eca9b449819a6689016f8\",\"dweb:/ipfs/QmckedJAD6n5yf69g5doHhZBJLNJs1mFnJDnAox4EFUFqM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 925,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2167,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_struct(Stake)2162_storage)"
							},
							{
								"astId": 2169,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
								"label": "cqtToken",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 2171,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
								"label": "cqnftToken",
								"offset": 0,
								"slot": "52",
								"type": "t_address"
							},
							{
								"astId": 2173,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
								"label": "cqnft1155Token",
								"offset": 0,
								"slot": "53",
								"type": "t_address"
							},
							{
								"astId": 2175,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
								"label": "rewardRate",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							},
							{
								"astId": 2177,
								"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
								"label": "minimumStakingPeriod",
								"offset": 0,
								"slot": "55",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(Stake)2162_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)2162_storage"
							},
							"t_struct(Stake)2162_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisStaking.Stake",
								"members": [
									{
										"astId": 2151,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2153,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
										"label": "owner",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 2155,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
										"label": "stakeTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2157,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
										"label": "unstakeTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2159,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
										"label": "reward",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2161,
										"contract": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol:CryptoQuestTheShardsOfGenesisStaking",
										"label": "rarity",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1288
						],
						"ERC165Upgradeable": [
							1328
						],
						"IAccessControl": [
							1423
						],
						"Initializable": [
							616
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1424,
							"src": "134:81:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1423,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1289,
							"src": "216:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1288,
										"src": "224:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1329,
							"src": "284:79:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1328,
										"src": "292:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 617,
							"src": "364:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "372:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "2136:13:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1288,
										"src": "2151:18:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1423,
										"src": "2171:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "2187:17:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								1328,
								2121,
								1423,
								1288,
								616
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2237:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 21,
												"keyName": "account",
												"keyNameLocation": "2253:7:0",
												"keyType": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2287:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 23,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2211:100:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2317:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "2488:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 33,
												"keyName": "role",
												"keyNameLocation": "2504:4:0",
												"keyType": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2512:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2512:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$25_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2450:85:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2658:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2877:87:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:0",
													"nodeType": "YulBlock",
													"src": "2896:62:0",
													"statements": [
														{
															"nativeSrc": "2910:38:0",
															"nodeType": "YulAssignment",
															"src": "2910:38:0",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:0",
																"nodeType": "YulIdentifier",
																"src": "2920:28:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "2887:71:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2845:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2845:20:0"
													},
													"referencedDeclaration": 35,
													"src": "2845:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:0"
									},
									"scope": 362,
									"src": "2787:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "3202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 51,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 129,
														"src": "3191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 57,
									"name": "onlyRole",
									"nameLocation": "3158:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:0"
									},
									"src": "3149:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3289:7:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3272:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:0"
									},
									"scope": 362,
									"src": "3231:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3370:7:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3353:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 362,
									"src": "3302:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3534:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3551:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "3571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1423_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1423_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 79,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1423",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 86,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3626:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 84,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$362_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1327,
															"src": "3602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 77,
												"id": 89,
												"nodeType": "Return",
												"src": "3544:94:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:0"
									},
									"scope": 362,
									"src": "3443:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1390
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3815:124:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "3825:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 101,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3825:20:0"
															},
															"referencedDeclaration": 35,
															"src": "3825:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 107,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "3901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 110,
															"indexExpression": {
																"id": 109,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3901:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "3894:38:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:0"
									},
									"scope": 362,
									"src": "3732:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4204:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "4231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 150,
														"src": "4214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4168:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:0"
									},
									"scope": 362,
									"src": "4148:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4454:124:0",
										"statements": [
											{
												"condition": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 138,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "4477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 137,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "4464:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "4493:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "4547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "4556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 142,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "4514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "4507:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 362,
									"src": "4381:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1398
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4833:117:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4843:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "4843:20:0"
															},
															"referencedDeclaration": 35,
															"src": "4843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "4876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 164,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:0",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "4919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$25_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "4919:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "4912:31:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:0"
									},
									"scope": 362,
									"src": "4759:191:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1406
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5311:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:0"
									},
									"scope": 362,
									"src": "5246:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1414
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5757:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 199,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 198,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5728:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:0"
									},
									"scope": 362,
									"src": "5662:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1422
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6427:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6441:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 218,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "6437:102:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "6477:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "6498:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 223,
															"nodeType": "RevertStatement",
															"src": "6491:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6567:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6384:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:0"
									},
									"scope": 362,
									"src": "6348:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6791:245:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6801:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "6801:20:0"
															},
															"referencedDeclaration": 35,
															"src": "6801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6870:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6911:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "6898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 252,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6935:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "6926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6953:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7000:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "6977:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "6972:57:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6755:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:0"
									},
									"scope": 362,
									"src": "6718:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "7353:304:0",
										"statements": [
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "7363:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 278,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7363:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7363:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7396:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:0"
											},
											{
												"condition": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 286,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "7451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 284,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7614:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 311,
															"nodeType": "Return",
															"src": "7628:12:0"
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "7432:219:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "7461:147:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 289,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 280,
																					"src": "7475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7475:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"id": 291,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7544:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1270,
																			"src": "7559:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "7532:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 306,
															"nodeType": "EmitStatement",
															"src": "7527:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 308,
															"nodeType": "Return",
															"src": "7586:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7347:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:0"
									},
									"scope": 362,
									"src": "7270:387:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7976:304:0",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8015:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "7986:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 325,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7986:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7986:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7986:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 328,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8019:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7986:59:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "8067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "8059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8059:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "8237:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 324,
															"id": 357,
															"nodeType": "Return",
															"src": "8251:12:0"
														}
													]
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "8055:219:0",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "8083:148:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 335,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "8097:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8099:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "8097:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"id": 337,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "8106:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8097:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8112:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "8097:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8097:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8097:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "8097:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8167:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 348,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8173:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 349,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1270,
																			"src": "8182:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8182:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 346,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "8155:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8155:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "EmitStatement",
															"src": "8150:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8216:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 324,
															"id": 354,
															"nodeType": "Return",
															"src": "8209:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "7663:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7901:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7913:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7935:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:31:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7970:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7970:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:6:0"
									},
									"scope": 362,
									"src": "7892:388:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "2090:6192:0",
							"usedErrors": [
								379,
								382,
								1350,
								1353
							],
							"usedEvents": [
								387,
								1362,
								1371,
								1380
							]
						}
					],
					"src": "108:8175:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							616
						]
					},
					"id": 617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 373,
									"members": [
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 368,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 371,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 616,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 616,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 379,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 382,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 387,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 391,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 390,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 373,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 398,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 402,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"expression": {
														"id": 404,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 412,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 420,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 430,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 432,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 440,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 446,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 455,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 456,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 463,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 470,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 475,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 373,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 483,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 485,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 493,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 499,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 506,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 512,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 517,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 472,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 523,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 525,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 529,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 616,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 373,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 548,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 550,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 552,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 563,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 369,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 566,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 575,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 574,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 573,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 616,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 587,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 616,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 601,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 616,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 611,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 376,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 613,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 373,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 373,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 616,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 617,
							"src": "2349:6560:1",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1736
						],
						"IERC1822Proxiable": [
							1433
						],
						"Initializable": [
							616
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1434,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 619,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1433,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1737,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 621,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1736,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 617,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 623,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "1023:13:2"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 628,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1433,
										"src": "1038:17:2"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 798,
							"linearizedBaseContracts": [
								798,
								1433,
								616
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 636,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 631,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 634,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 633,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 632,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 640,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 638,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 643,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 648,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2643:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 651,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2653:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:2"
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:2"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 656,
									"name": "onlyProxy",
									"nameLocation": "2631:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:2"
									},
									"src": "2622:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2914:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 659,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2924:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:2"
											},
											{
												"id": 662,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 664,
									"name": "notDelegated",
									"nameLocation": "2899:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:2"
									},
									"src": "2890:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3028:7:2",
										"statements": []
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 666,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3011:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:2"
									},
									"scope": 798,
									"src": "2968:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3111:7:2",
										"statements": []
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 673,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 672,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3094:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:2"
									},
									"scope": 798,
									"src": "3041:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1432
									],
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3783:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 684,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "3800:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1463,
													"src": "3800:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 683,
												"id": 686,
												"nodeType": "Return",
												"src": "3793:39:2"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:2",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 664,
												"src": "3752:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:2"
									},
									"scope": 798,
									"src": "3705:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "4263:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4291:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 698,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4273:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4341:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4360:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 702,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4319:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:2"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "4253:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4184:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:2"
									},
									"scope": 798,
									"src": "4158:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4644:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 714,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 716,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 718,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "4749:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1494,
																"src": "4749:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 721,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "4654:251:2",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "4844:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 724,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "4865:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "4858:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:2"
									},
									"scope": 798,
									"src": "4599:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "5080:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 736,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 738,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5111:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "5090:145:2",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "5119:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 740,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "5195:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 742,
															"nodeType": "RevertStatement",
															"src": "5188:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:2"
									},
									"scope": 798,
									"src": "5028:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5651:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:2"
									},
									"scope": 798,
									"src": "5624:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "6137:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 785,
															"nodeType": "Block",
															"src": "6227:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "6245:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 769,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "6253:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1463,
																			"src": "6253:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 777,
																	"nodeType": "IfStatement",
																	"src": "6241:120:2",
																	"trueBody": {
																		"id": 776,
																		"nodeType": "Block",
																		"src": "6287:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 773,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "6341:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 772,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 648,
																						"src": "6312:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 775,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 781,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6404:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 782,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "6423:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 778,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "6374:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1555,
																			"src": "6374:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 784,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:2"
																}
															]
														},
														"errorName": "",
														"id": 786,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 767,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "6213:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:2"
														},
														"src": "6204:235:2"
													},
													{
														"block": {
															"id": 793,
															"nodeType": "Block",
															"src": "6446:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 790,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6555:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 787,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "6513:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1468,
																			"src": "6513:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 792,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:2"
																}
															]
														},
														"errorName": "",
														"id": 794,
														"nodeType": "TryCatchClause",
														"src": "6440:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6169:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 760,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "6151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1433_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1433",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1432,
														"src": "6151:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 795,
												"nodeType": "TryStatement",
												"src": "6147:437:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6083:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:2"
									},
									"scope": 798,
									"src": "6052:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 799,
							"src": "986:5606:2",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1468,
								1481,
								1759,
								1762
							],
							"usedEvents": [
								387,
								1447
							]
						}
					],
					"src": "115:6478:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1288
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							926
						]
					},
					"id": 927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 801,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1289,
							"src": "130:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 803,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 617,
							"src": "172:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 802,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "180:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 805,
										"name": "Initializable",
										"nameLocations": [
											"718:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "718:13:3"
									},
									"id": 806,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:3"
								},
								{
									"baseName": {
										"id": 807,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1288,
										"src": "733:18:3"
									},
									"id": 808,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 804,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926,
								1288,
								616
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 813,
									"name": "Paused",
									"nameLocation": "842:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "849:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:3"
									},
									"src": "836:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 818,
									"name": "Unpaused",
									"nameLocation": "953:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"src": "947:32:3"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "985:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 819,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "1137:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 826,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1147:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:3"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 823,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1120:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:3"
									},
									"scope": 926,
									"src": "1084:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "1250:32:3",
										"statements": [
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:3"
											}
										]
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 833,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 832,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1233:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:3"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:3"
									},
									"scope": 926,
									"src": "1187:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1493:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 843,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:3"
											},
											{
												"id": 846,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:3"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 848,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:3"
									},
									"src": "1468:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "1740:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 851,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "1750:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:3"
											},
											{
												"id": 854,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:3"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 856,
									"name": "whenPaused",
									"nameLocation": "1727:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:3"
									},
									"src": "1718:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "1932:31:3",
										"statements": [
											{
												"expression": {
													"id": 862,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "1949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 861,
												"id": 863,
												"nodeType": "Return",
												"src": "1942:14:3"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:3"
									},
									"scope": 926,
									"src": "1879:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "2082:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 870,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "2101:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:3"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:3"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:3"
									},
									"scope": 926,
									"src": "2031:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "2257:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 882,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "2275:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:3"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:3"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:3"
									},
									"scope": 926,
									"src": "2209:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2499:66:3",
										"statements": [
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 899,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "2545:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 898,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "2538:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "EmitStatement",
												"src": "2533:25:3"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 892,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 891,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "2485:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:3"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:3"
									},
									"scope": 926,
									"src": "2450:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "2745:69:3",
										"statements": [
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 910,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2755:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 915,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "2794:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 914,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2785:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "EmitStatement",
												"src": "2780:27:3"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 908,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 907,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 856,
												"src": "2734:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:3"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:3"
									},
									"scope": 926,
									"src": "2697:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 925,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "3079:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 922,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 924,
										"length": {
											"hexValue": "3439",
											"id": 923,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 927,
							"src": "677:2430:3",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387,
								813,
								818
							]
						}
					],
					"src": "105:3003:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
					"exportedSymbols": {
						"IERC1155Upgradeable": [
							1048
						],
						"IERC165Upgradeable": [
							1340
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 1341,
							"src": "135:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 931,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"394:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "394:18:4"
									},
									"id": 932,
									"nodeType": "InheritanceSpecifier",
									"src": "394:18:4"
								}
							],
							"canonicalName": "IERC1155Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 930,
								"nodeType": "StructuredDocumentation",
								"src": "195:165:4",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1048,
							"linearizedBaseContracts": [
								1048,
								1340
							],
							"name": "IERC1155Upgradeable",
							"nameLocation": "371:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "419:121:4",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 945,
									"name": "TransferSingle",
									"nameLocation": "551:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "582:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "566:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "608:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "592:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "630:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "614:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "642:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "634:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "654:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "646:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:95:4"
									},
									"src": "545:116:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "667:144:4",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 960,
									"name": "TransferBatch",
									"nameLocation": "822:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "861:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "845:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "895:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "879:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "925:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "909:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "947:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "937:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 953,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "937:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 954,
													"nodeType": "ArrayTypeName",
													"src": "937:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "970:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "960:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 956,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "960:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 957,
													"nodeType": "ArrayTypeName",
													"src": "960:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:147:4"
									},
									"src": "816:167:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "989:147:4",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 969,
									"name": "ApprovalForAll",
									"nameLocation": "1147:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1178:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1162:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1203:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1187:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1218:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1213:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1213:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:66:4"
									},
									"src": "1141:87:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "1234:343:4",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 976,
									"name": "URI",
									"nameLocation": "1588:3:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1599:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1592:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 971,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1592:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1622:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1606:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:34:4"
									},
									"src": "1582:44:4"
								},
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "1632:173:4",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1819:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1837:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1829:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1854:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1846:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1828:29:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1881:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1881:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:9:4"
									},
									"scope": 1048,
									"src": "1810:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "1896:188:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2098:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2141:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2122:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 988,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2122:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 989,
													"nodeType": "ArrayTypeName",
													"src": "2122:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2178:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2159:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 991,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 992,
													"nodeType": "ArrayTypeName",
													"src": "2159:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:75:4"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2211:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 995,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2211:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 996,
													"nodeType": "ArrayTypeName",
													"src": "2211:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:18:4"
									},
									"scope": 1048,
									"src": "2089:140:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "2235:248:4",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2497:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2523:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2515:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2515:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2538:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2533:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2533:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2514:33:4"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2556:0:4"
									},
									"scope": 1048,
									"src": "2488:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "2563:135:4",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2712:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2737:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2729:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2754:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2746:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:35:4"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2787:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2787:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2786:6:4"
									},
									"scope": 1048,
									"src": "2703:90:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "2799:556:4",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3369:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3394:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3386:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3408:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3400:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3420:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3412:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3432:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3424:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3424:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3455:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3440:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3440:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:75:4"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3469:0:4"
									},
									"scope": 1048,
									"src": "3360:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "3476:390:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3880:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3919:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3911:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3941:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3933:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3933:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3972:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3953:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1037,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3953:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1038,
													"nodeType": "ArrayTypeName",
													"src": "3953:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4004:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3985:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1040,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1041,
													"nodeType": "ArrayTypeName",
													"src": "3985:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4036:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "4021:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4021:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:145:4"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4055:0:4"
									},
									"scope": 1048,
									"src": "3871:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1049,
							"src": "361:3697:4",
							"usedErrors": [],
							"usedEvents": [
								945,
								960,
								969,
								976
							]
						}
					],
					"src": "110:3949:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1126
						]
					},
					"id": 1127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1051,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1126,
							"linearizedBaseContracts": [
								1126
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1060,
									"name": "Transfer",
									"nameLocation": "405:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "414:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "436:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "456:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:5"
									},
									"src": "399:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1069,
									"name": "Approval",
									"nameLocation": "636:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "645:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "668:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "693:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:5"
									},
									"src": "630:78:5"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:5"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "831:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:5"
									},
									"scope": 1126,
									"src": "785:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "942:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:5"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "982:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:5"
									},
									"scope": 1126,
									"src": "923:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1234:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 1126,
									"src": "1204:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 1126,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2302:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2319:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:5"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2353:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:5"
									},
									"scope": 1126,
									"src": "2285:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2679:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2693:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2705:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2739:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:5"
									},
									"scope": 1126,
									"src": "2657:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1127,
							"src": "202:2545:5",
							"usedErrors": [],
							"usedEvents": [
								1060,
								1069
							]
						}
					],
					"src": "106:2642:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1340
						],
						"IERC721Upgradeable": [
							1242
						]
					},
					"id": 1243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 1129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1243,
							"sourceUnit": 1341,
							"src": "133:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1131,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"293:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "293:18:6"
									},
									"id": 1132,
									"nodeType": "InheritanceSpecifier",
									"src": "293:18:6"
								}
							],
							"canonicalName": "IERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1130,
								"nodeType": "StructuredDocumentation",
								"src": "193:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1242,
							"linearizedBaseContracts": [
								1242,
								1340
							],
							"name": "IERC721Upgradeable",
							"nameLocation": "271:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "318:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1141,
									"name": "Transfer",
									"nameLocation": "417:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "442:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "426:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "464:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "448:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "484:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "468:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:67:6"
									},
									"src": "411:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "499:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1150,
									"name": "Approval",
									"nameLocation": "604:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "629:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "613:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "652:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "636:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "678:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "662:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:74:6"
									},
									"src": "598:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "693:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1159,
									"name": "ApprovalForAll",
									"nameLocation": "821:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "836:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "859:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "890:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "885:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:64:6"
									},
									"src": "815:85:6"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "906:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "996:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1014:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1006:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:15:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1052:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1044:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:17:6"
									},
									"scope": 1242,
									"src": "987:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "1067:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1212:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1228:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1220:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:17:6"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1268:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1260:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:15:6"
									},
									"scope": 1242,
									"src": "1203:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "1281:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1851:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1876:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1868:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1890:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1882:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1902:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1894:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1911:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:64:6"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:0:6"
									},
									"scope": 1242,
									"src": "1842:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1947:687:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2648:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2673:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2665:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2687:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2679:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2691:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:43:6"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2716:0:6"
									},
									"scope": 1242,
									"src": "2639:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "2723:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3469:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3490:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "3482:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3504:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "3496:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3496:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3516:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "3508:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:43:6"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3533:0:6"
									},
									"scope": 1242,
									"src": "3460:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "3540:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4006:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4022:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4014:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4014:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4034:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4026:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4013:29:6"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:0:6"
									},
									"scope": 1242,
									"src": "3997:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "4058:309:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4381:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4407:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4399:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4422:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4417:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4417:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:33:6"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4440:0:6"
									},
									"scope": 1242,
									"src": "4372:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "4447:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4600:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4620:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4612:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:17:6"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4660:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4652:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:18:6"
									},
									"scope": 1242,
									"src": "4591:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "4676:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4828:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4853:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4845:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4845:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4868:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4860:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4844:33:6"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4901:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4901:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:6:6"
									},
									"scope": 1242,
									"src": "4819:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1243,
							"src": "261:4648:6",
							"usedErrors": [],
							"usedEvents": [
								1141,
								1150,
								1159
							]
						}
					],
					"src": "108:4802:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1288
						],
						"Initializable": [
							616
						]
					},
					"id": 1289,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1289,
							"sourceUnit": 617,
							"src": "126:63:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1245,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "134:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1248,
										"name": "Initializable",
										"nameLocations": [
											"728:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "728:13:7"
									},
									"id": 1249,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:7"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1247,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1288,
							"linearizedBaseContracts": [
								1288,
								616
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "800:7:7",
										"statements": []
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1251,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "783:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:7"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:7"
									},
									"scope": 1288,
									"src": "748:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "875:7:7",
										"statements": []
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1257,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "858:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:7"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:7"
									},
									"scope": 1288,
									"src": "813:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "949:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1266,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1268,
												"nodeType": "Return",
												"src": "959:17:7"
											}
										]
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:7"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "940:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:7"
									},
									"scope": 1288,
									"src": "887:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "1056:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1275,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1277,
												"nodeType": "Return",
												"src": "1066:15:7"
											}
										]
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:7"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1040:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:7"
									},
									"scope": 1288,
									"src": "989:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "1166:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1283,
												"id": 1285,
												"nodeType": "Return",
												"src": "1176:8:7"
											}
										]
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:7"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "1157:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:7"
									},
									"scope": 1288,
									"src": "1094:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1289,
							"src": "688:505:7",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "101:1093:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1328
						],
						"IERC165": [
							2121
						],
						"Initializable": [
							616
						]
					},
					"id": 1329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1290,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 2122,
							"src": "140:80:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1291,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2121,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 617,
							"src": "221:66:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1293,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "229:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1296,
										"name": "Initializable",
										"nameLocations": [
											"807:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "807:13:8"
									},
									"id": 1297,
									"nodeType": "InheritanceSpecifier",
									"src": "807:13:8"
								},
								{
									"baseName": {
										"id": 1298,
										"name": "IERC165",
										"nameLocations": [
											"822:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2121,
										"src": "822:7:8"
									},
									"id": 1299,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:8"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1295,
								"nodeType": "StructuredDocumentation",
								"src": "289:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1328,
							"linearizedBaseContracts": [
								1328,
								2121,
								616
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "786:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "887:7:8",
										"statements": []
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1302,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1301,
												"name": "onlyInitializing",
												"nameLocations": [
													"870:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "870:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "870:16:8"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "845:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:8"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:8"
									},
									"scope": 1328,
									"src": "836:58:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "961:7:8",
										"statements": []
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1308,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1307,
												"name": "onlyInitializing",
												"nameLocations": [
													"944:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "944:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "944:16:8"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "909:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:8"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:8"
									},
									"scope": 1328,
									"src": "900:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2120
									],
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "1116:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1319,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "1133:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1321,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "1153:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2121_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2121_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1320,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1148:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1148:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2121",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1162:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1148:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1133:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1325,
												"nodeType": "Return",
												"src": "1126:47:8"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "973:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1043:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1068:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1061:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:20:8"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1110:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:6:8"
									},
									"scope": 1328,
									"src": "1034:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1329,
							"src": "768:414:8",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "114:1069:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1340
						]
					},
					"id": 1341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1331,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1340,
							"linearizedBaseContracts": [
								1340
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "812:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:9"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "855:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:9"
									},
									"scope": 1340,
									"src": "785:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1341,
							"src": "405:458:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1423
						]
					},
					"id": 1424,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1342,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1343,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:10",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1423,
							"linearizedBaseContracts": [
								1423
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:10",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1350,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "356:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "373:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:10"
									},
									"src": "317:76:10"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:10",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1353,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:10"
									},
									"src": "552:37:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:10",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1362,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "877:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "899:33:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "934:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:10"
									},
									"src": "854:110:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:10",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1371,
									"name": "RoleGranted",
									"nameLocation": "1193:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1205:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1227:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1252:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:10"
									},
									"src": "1187:89:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:10",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1380,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "1580:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "1602:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "1627:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:10"
									},
									"src": "1562:89:10"
								},
								{
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:10",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1755:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1769:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:10"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1809:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:10"
									},
									"scope": 1423,
									"src": "1738:77:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:10",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "2032:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:10"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "2069:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:10"
									},
									"scope": 1423,
									"src": "2010:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:10",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2347:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1400,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2361:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:10"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:10"
									},
									"scope": 1423,
									"src": "2328:59:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:10",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "2641:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1408,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "2655:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:10"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:10"
									},
									"scope": 1423,
									"src": "2621:60:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:10",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "3205:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "3219:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:10"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:10"
									},
									"scope": 1423,
									"src": "3183:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1424,
							"src": "225:3033:10",
							"usedErrors": [
								1350,
								1353
							],
							"usedEvents": [
								1362,
								1371,
								1380
							]
						}
					],
					"src": "109:3150:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1433
						]
					},
					"id": 1434,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1425,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1426,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:11",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1433,
							"linearizedBaseContracts": [
								1433
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:11",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:11"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "868:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1429,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:11"
									},
									"scope": 1433,
									"src": "820:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1434,
							"src": "343:536:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1999
						],
						"ERC1967Utils": [
							1736
						],
						"IBeacon": [
							1746
						],
						"StorageSlot": [
							2109
						]
					},
					"id": 1737,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1435,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1737,
							"sourceUnit": 1747,
							"src": "140:46:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1436,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1746,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1737,
							"sourceUnit": 2000,
							"src": "187:48:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1438,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1999,
										"src": "195:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1737,
							"sourceUnit": 2110,
							"src": "236:56:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1440,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2109,
										"src": "244:11:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1442,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:12",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1736,
							"linearizedBaseContracts": [
								1736
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:12",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1447,
									"name": "Upgraded",
									"nameLocation": "739:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "748:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:12"
									},
									"src": "733:47:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:12",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1454,
									"name": "AdminChanged",
									"nameLocation": "864:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "877:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "900:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:12"
									},
									"src": "858:60:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:12",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1459,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1009:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:12"
									},
									"src": "988:45:12"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:12",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1463,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "1279:114:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1461,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:12",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1468,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "1509:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:12"
									},
									"src": "1474:59:12"
								},
								{
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:12",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1473,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "1630:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:12"
									},
									"src": "1604:41:12"
								},
								{
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:12",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1478,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1744:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:12"
									},
									"src": "1717:43:12"
								},
								{
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:12",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1481,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:12"
									},
									"src": "1853:26:12"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "2018:77:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1489,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "2062:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1487,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "2035:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "2035:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2004,
													"src": "2035:53:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1486,
												"id": 1492,
												"nodeType": "Return",
												"src": "2028:60:12"
											}
										]
									},
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:12",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:12"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2009:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:12"
									},
									"scope": 1736,
									"src": "1957:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "2249:218:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1500,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "2263:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1510,
												"nodeType": "IfStatement",
												"src": "2259:119:12",
												"trueBody": {
													"id": 1509,
													"nodeType": "Block",
													"src": "2299:79:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1506,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "2349:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1505,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "2320:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1508,
															"nodeType": "RevertStatement",
															"src": "2313:54:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1514,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "2414:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1511,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "2387:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2031,
																"src": "2387:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "2387:53:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1517,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "2443:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:12"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:12",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2214:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:12"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:12"
									},
									"scope": 1736,
									"src": "2186:281:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "2860:254:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1530,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "2889:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1529,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "2870:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1534,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "2931:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1533,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "2922:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "EmitStatement",
												"src": "2917:32:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1537,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "2964:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "3065:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1549,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "3079:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1551,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:12"
														}
													]
												},
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "2960:148:12",
												"trueBody": {
													"id": 1548,
													"nodeType": "Block",
													"src": "2981:78:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1544,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "3024:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1545,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "3043:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1541,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "2995:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1999_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:12",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1918,
																	"src": "2995:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1547,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:12",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2805:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2832:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:12"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:12"
									},
									"scope": 1736,
									"src": "2779:335:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:12",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1559,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "3335:105:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1557,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1558,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "3844:68:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1567,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "3888:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1565,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "3861:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "3861:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2004,
													"src": "3861:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1570,
												"nodeType": "Return",
												"src": "3854:51:12"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:12",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:12"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3835:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:12"
									},
									"scope": 1736,
									"src": "3792:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "4039:172:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1578,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "4053:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "4049:91:12",
												"trueBody": {
													"id": 1591,
													"nodeType": "Block",
													"src": "4077:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1585,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1584,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "4098:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1590,
															"nodeType": "RevertStatement",
															"src": "4091:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1596,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "4176:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1593,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "4149:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2031,
																"src": "4149:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "4149:44:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1599,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "4196:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:12"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:12",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4013:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:12"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:12"
									},
									"scope": 1736,
									"src": "3994:217:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "4379:85:12",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1610,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "4407:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1612,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "4419:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1609,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "4394:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "EmitStatement",
												"src": "4389:39:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1616,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "4448:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1615,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "4438:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:12"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:12",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "4352:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:12"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:12"
									},
									"scope": 1736,
									"src": "4331:133:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:12",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1624,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "4741:106:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1622,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1623,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "4963:69:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1632,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "5007:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1630,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "4980:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "4980:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2004,
													"src": "4980:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1635,
												"nodeType": "Return",
												"src": "4973:52:12"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:12",
										"text": " @dev Returns the current beacon."
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:12"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "4954:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:12"
									},
									"scope": 1736,
									"src": "4910:122:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "5161:390:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1643,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "5175:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1653,
												"nodeType": "IfStatement",
												"src": "5171:95:12",
												"trueBody": {
													"id": 1652,
													"nodeType": "Block",
													"src": "5203:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1649,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "5245:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1648,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1478,
																	"src": "5224:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1651,
															"nodeType": "RevertStatement",
															"src": "5217:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1657,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "5303:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1654,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "5276:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2031,
																"src": "5276:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "5276:45:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1660,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "5324:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:12"
											},
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:12",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "5344:28:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1663,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1670,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1666,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1640,
																	"src": "5383:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1665,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1746,
																"src": "5375:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1746_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1746",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:12",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1745,
														"src": "5375:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1671,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "5424:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1681,
												"nodeType": "IfStatement",
												"src": "5420:125:12",
												"trueBody": {
													"id": 1680,
													"nodeType": "Block",
													"src": "5463:82:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1677,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1664,
																		"src": "5513:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1676,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5484:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1679,
															"nodeType": "RevertStatement",
															"src": "5477:57:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:12",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5134:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:12"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:12"
									},
									"scope": 1736,
									"src": "5114:437:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "6155:254:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1692,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "6176:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1691,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "6165:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1696,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "6216:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1695,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "6201:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "EmitStatement",
												"src": "6196:30:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1699,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "6241:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1718,
													"nodeType": "Block",
													"src": "6360:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1715,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "6374:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1717,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:12"
														}
													]
												},
												"id": 1719,
												"nodeType": "IfStatement",
												"src": "6237:166:12",
												"trueBody": {
													"id": 1714,
													"nodeType": "Block",
													"src": "6258:96:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1707,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1686,
																						"src": "6309:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1706,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1746,
																					"src": "6301:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1746_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1746",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:12",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1745,
																			"src": "6301:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1711,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "6338:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1703,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "6272:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1999_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:12",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1918,
																	"src": "6272:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1713,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:12",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6108:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6127:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:12"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:12"
									},
									"scope": 1736,
									"src": "6076:333:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "6634:86:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1725,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1733,
												"nodeType": "IfStatement",
												"src": "6644:70:12",
												"trueBody": {
													"id": 1732,
													"nodeType": "Block",
													"src": "6663:51:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1729,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "6684:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1731,
															"nodeType": "RevertStatement",
															"src": "6677:26:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:12",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:12"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:12"
									},
									"scope": 1736,
									"src": "6598:122:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1737,
							"src": "449:6273:12",
							"usedErrors": [
								1468,
								1473,
								1478,
								1481
							],
							"usedEvents": [
								1447,
								1454,
								1459
							]
						}
					],
					"src": "114:6609:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1746
						]
					},
					"id": 1747,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1738,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1739,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:13",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1746,
							"linearizedBaseContracts": [
								1746
							],
							"name": "IBeacon",
							"nameLocation": "224:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:13",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:13"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "460:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:13"
									},
									"scope": 1746,
									"src": "411:58:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1747,
							"src": "214:257:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1999
						]
					},
					"id": 2000,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1748,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1749,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:14",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1999,
							"linearizedBaseContracts": [
								1999
							],
							"name": "Address",
							"nameLocation": "203:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:14",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1754,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "349:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:14"
									},
									"src": "316:50:14"
								},
								{
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:14",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1759,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "475:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:14"
									},
									"src": "452:39:14"
								},
								{
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:14",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1762,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:14"
									},
									"src": "591:24:14"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "1602:260:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1772,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																],
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1770,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1775,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "1640:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1785,
												"nodeType": "IfStatement",
												"src": "1612:109:14",
												"trueBody": {
													"id": 1784,
													"nodeType": "Block",
													"src": "1648:73:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1780,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1778,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1777,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "1669:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1783,
															"nodeType": "RevertStatement",
															"src": "1662:48:14"
														}
													]
												}
											},
											{
												"assignments": [
													1787,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "1732:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1786,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1794,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1788,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1765,
																"src": "1750:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1790,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "1772:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:14"
											},
											{
												"condition": {
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:14",
													"subExpression": {
														"id": 1795,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "1798:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1801,
												"nodeType": "IfStatement",
												"src": "1793:63:14",
												"trueBody": {
													"id": 1800,
													"nodeType": "Block",
													"src": "1807:49:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "1828:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1799,
															"nodeType": "RevertStatement",
															"src": "1821:24:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:14",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1550:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1577:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:14"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:14"
									},
									"scope": 1999,
									"src": "1531:331:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "2794:62:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1814,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "2833:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1815,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "2841:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1813,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "2811:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1812,
												"id": 1818,
												"nodeType": "Return",
												"src": "2804:45:14"
											}
										]
									},
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:14",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2727:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2743:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:14"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2780:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:14"
									},
									"scope": 1999,
									"src": "2705:151:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "3293:279:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1834,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																],
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1832,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1837,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "3331:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1847,
												"nodeType": "IfStatement",
												"src": "3303:108:14",
												"trueBody": {
													"id": 1846,
													"nodeType": "Block",
													"src": "3338:73:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1842,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1840,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1839,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "3359:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1845,
															"nodeType": "RevertStatement",
															"src": "3352:48:14"
														}
													]
												}
											},
											{
												"assignments": [
													1849,
													1851
												],
												"declarations": [
													{
														"constant": false,
														"id": 1849,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "3421:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1848,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1851,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "3435:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1850,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1858,
												"initialValue": {
													"arguments": [
														{
															"id": 1856,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "3488:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1852,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "3462:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1854,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "3481:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1860,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "3537:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1861,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "3545:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1862,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "3554:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1859,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "3510:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1831,
												"id": 1864,
												"nodeType": "Return",
												"src": "3503:62:14"
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3211:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3227:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1824,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3246:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:14"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3279:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:14"
									},
									"scope": 1999,
									"src": "3180:392:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "3811:154:14",
										"statements": [
											{
												"assignments": [
													1877,
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1877,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1891,
														"src": "3822:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1876,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1891,
														"src": "3836:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1878,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1884,
												"initialValue": {
													"arguments": [
														{
															"id": 1882,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "3881:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1880,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "3863:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:14",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1886,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "3930:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1887,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "3938:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1888,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "3947:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1885,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "3903:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1875,
												"id": 1890,
												"nodeType": "Return",
												"src": "3896:62:14"
											}
										]
									},
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3739:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3755:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1870,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:14"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3797:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1873,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:14"
									},
									"scope": 1999,
									"src": "3711:254:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "4203:156:14",
										"statements": [
											{
												"assignments": [
													1903,
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1903,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1917,
														"src": "4214:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1902,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1917,
														"src": "4228:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1904,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1910,
												"initialValue": {
													"arguments": [
														{
															"id": 1908,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "4275:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1906,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "4255:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:14",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1912,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "4324:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1913,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "4332:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1914,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "4341:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1911,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "4297:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1916,
												"nodeType": "Return",
												"src": "4290:62:14"
											}
										]
									},
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4136:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4152:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:14"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4189:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:14"
									},
									"scope": 1999,
									"src": "4106:253:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "4783:424:14",
										"statements": [
											{
												"condition": {
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:14",
													"subExpression": {
														"id": 1930,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "4798:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1955,
													"nodeType": "Block",
													"src": "4857:344:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1937,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "5045:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1941,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1921,
																				"src": "5071:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:14",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1952,
															"nodeType": "IfStatement",
															"src": "5041:119:14",
															"trueBody": {
																"id": 1951,
																"nodeType": "Block",
																"src": "5096:64:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1948,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1921,
																					"src": "5138:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1947,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1759,
																				"src": "5121:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1950,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:14"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1953,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "5180:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1954,
															"nodeType": "Return",
															"src": "5173:17:14"
														}
													]
												},
												"id": 1956,
												"nodeType": "IfStatement",
												"src": "4793:408:14",
												"trueBody": {
													"id": 1936,
													"nodeType": "Block",
													"src": "4807:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1933,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "4829:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1932,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "4821:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1935,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:14",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4670:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4694:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4716:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:14"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4769:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:14"
									},
									"scope": 1999,
									"src": "4625:582:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "5509:122:14",
										"statements": [
											{
												"condition": {
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:14",
													"subExpression": {
														"id": 1968,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "5524:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1977,
													"nodeType": "Block",
													"src": "5583:42:14",
													"statements": [
														{
															"expression": {
																"id": 1975,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "5604:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1967,
															"id": 1976,
															"nodeType": "Return",
															"src": "5597:17:14"
														}
													]
												},
												"id": 1978,
												"nodeType": "IfStatement",
												"src": "5519:106:14",
												"trueBody": {
													"id": 1974,
													"nodeType": "Block",
													"src": "5533:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1971,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1963,
																		"src": "5555:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1970,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "5547:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1973,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:14",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "5433:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1960,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "5447:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:14"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "5495:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1965,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:14"
									},
									"scope": 1999,
									"src": "5407:224:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "5798:461:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1986,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "5874:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1995,
													"nodeType": "Block",
													"src": "6204:49:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1992,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "6225:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1994,
															"nodeType": "RevertStatement",
															"src": "6218:24:14"
														}
													]
												},
												"id": 1996,
												"nodeType": "IfStatement",
												"src": "5870:383:14",
												"trueBody": {
													"id": 1991,
													"nodeType": "Block",
													"src": "5897:301:14",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:14",
																"nodeType": "YulBlock",
																"src": "6055:133:14",
																"statements": [
																	{
																		"nativeSrc": "6073:40:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:14"
																			},
																			"nativeSrc": "6096:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:14"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:14",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:14",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:14",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:14"
																					},
																					"nativeSrc": "6137:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:14"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:14"
																			},
																			"nativeSrc": "6130:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:14"
																		},
																		"nativeSrc": "6130:44:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:14"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:14",
																	"valueSize": 1
																}
															],
															"id": 1990,
															"nodeType": "InlineAssembly",
															"src": "6046:142:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:14",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "5760:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:14"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:14"
									},
									"scope": 1999,
									"src": "5743:516:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2000,
							"src": "195:6066:14",
							"usedErrors": [
								1754,
								1759,
								1762
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2109
						]
					},
					"id": 2110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2001,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2002,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:15",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2109,
							"linearizedBaseContracts": [
								2109
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2005,
									"members": [
										{
											"constant": false,
											"id": 2004,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2005,
											"src": "1300:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2003,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1271:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2008,
									"members": [
										{
											"constant": false,
											"id": 2007,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2008,
											"src": "1355:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2006,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1326:46:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2011,
									"members": [
										{
											"constant": false,
											"id": 2010,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2011,
											"src": "1407:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2009,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1378:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2014,
									"members": [
										{
											"constant": false,
											"id": 2013,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "1462:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2012,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1433:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2017,
									"members": [
										{
											"constant": false,
											"id": 2016,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "1516:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2015,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1488:47:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2020,
									"members": [
										{
											"constant": false,
											"id": 2019,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2020,
											"src": "1568:11:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2018,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1541:45:15",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "1768:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:15",
													"nodeType": "YulBlock",
													"src": "1830:38:15",
													"statements": [
														{
															"nativeSrc": "1844:14:15",
															"nodeType": "YulAssignment",
															"src": "1844:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:15",
																"nodeType": "YulIdentifier",
																"src": "1854:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2027,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2023,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:15",
														"valueSize": 1
													}
												],
												"id": 2029,
												"nodeType": "InlineAssembly",
												"src": "1821:47:15"
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:15",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1708:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2022,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:15"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1745:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2025,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2005,
														"src": "1745:11:15"
													},
													"referencedDeclaration": 2005,
													"src": "1745:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:15"
									},
									"scope": 2109,
									"src": "1684:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "2056:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:15",
													"nodeType": "YulBlock",
													"src": "2118:38:15",
													"statements": [
														{
															"nativeSrc": "2132:14:15",
															"nodeType": "YulAssignment",
															"src": "2132:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:15",
																"nodeType": "YulIdentifier",
																"src": "2142:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2038,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2034,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:15",
														"valueSize": 1
													}
												],
												"id": 2040,
												"nodeType": "InlineAssembly",
												"src": "2109:47:15"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:15",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "1996:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:15"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2033:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2008_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2037,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2036,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2008,
														"src": "2033:11:15"
													},
													"referencedDeclaration": 2008,
													"src": "2033:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2008_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:15"
									},
									"scope": 2109,
									"src": "1972:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "2344:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:15",
													"nodeType": "YulBlock",
													"src": "2406:38:15",
													"statements": [
														{
															"nativeSrc": "2420:14:15",
															"nodeType": "YulAssignment",
															"src": "2420:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:15",
																"nodeType": "YulIdentifier",
																"src": "2430:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2049,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2045,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:15",
														"valueSize": 1
													}
												],
												"id": 2051,
												"nodeType": "InlineAssembly",
												"src": "2397:47:15"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:15",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2284:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2044,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:15"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2321:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2011_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2047,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2011,
														"src": "2321:11:15"
													},
													"referencedDeclaration": 2011,
													"src": "2321:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2011_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:15"
									},
									"scope": 2109,
									"src": "2260:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "2632:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:15",
													"nodeType": "YulBlock",
													"src": "2694:38:15",
													"statements": [
														{
															"nativeSrc": "2708:14:15",
															"nodeType": "YulAssignment",
															"src": "2708:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:15",
																"nodeType": "YulIdentifier",
																"src": "2718:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2060,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2056,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:15",
														"valueSize": 1
													}
												],
												"id": 2062,
												"nodeType": "InlineAssembly",
												"src": "2685:47:15"
											}
										]
									},
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:15",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2572:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2055,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:15"
									},
									"returnParameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2609:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2014_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2058,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2014,
														"src": "2609:11:15"
													},
													"referencedDeclaration": 2014,
													"src": "2609:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2014_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:15"
									},
									"scope": 2109,
									"src": "2548:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "2917:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:15",
													"nodeType": "YulBlock",
													"src": "2979:38:15",
													"statements": [
														{
															"nativeSrc": "2993:14:15",
															"nodeType": "YulAssignment",
															"src": "2993:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:15",
																"nodeType": "YulIdentifier",
																"src": "3003:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2071,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2067,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:15",
														"valueSize": 1
													}
												],
												"id": 2073,
												"nodeType": "InlineAssembly",
												"src": "2970:47:15"
											}
										]
									},
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:15",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2858:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2066,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:15"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2895:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2069,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2017,
														"src": "2895:10:15"
													},
													"referencedDeclaration": 2017,
													"src": "2895:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:15"
									},
									"scope": 2109,
									"src": "2835:188:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "3225:112:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:15",
													"nodeType": "YulBlock",
													"src": "3287:44:15",
													"statements": [
														{
															"nativeSrc": "3301:20:15",
															"nodeType": "YulAssignment",
															"src": "3301:20:15",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:15",
																"nodeType": "YulIdentifier",
																"src": "3311:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2082,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2078,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2084,
												"nodeType": "InlineAssembly",
												"src": "3278:53:15"
											}
										]
									},
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:15",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "3158:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2077,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:15"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "3203:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2081,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2080,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2017,
														"src": "3203:10:15"
													},
													"referencedDeclaration": 2017,
													"src": "3203:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:15"
									},
									"scope": 2109,
									"src": "3135:202:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2096,
										"nodeType": "Block",
										"src": "3513:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:15",
													"nodeType": "YulBlock",
													"src": "3575:38:15",
													"statements": [
														{
															"nativeSrc": "3589:14:15",
															"nodeType": "YulAssignment",
															"src": "3589:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:15",
																"nodeType": "YulIdentifier",
																"src": "3599:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2093,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2089,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:15",
														"valueSize": 1
													}
												],
												"id": 2095,
												"nodeType": "InlineAssembly",
												"src": "3566:47:15"
											}
										]
									},
									"documentation": {
										"id": 2087,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:15",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "3455:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2088,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:15"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "3492:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2092,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2091,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "3492:9:15"
													},
													"referencedDeclaration": 2020,
													"src": "3492:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:15"
									},
									"scope": 2109,
									"src": "3433:186:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "3816:112:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:15",
													"nodeType": "YulBlock",
													"src": "3878:44:15",
													"statements": [
														{
															"nativeSrc": "3892:20:15",
															"nodeType": "YulAssignment",
															"src": "3892:20:15",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:15",
																"nodeType": "YulIdentifier",
																"src": "3902:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2104,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2100,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2106,
												"nodeType": "InlineAssembly",
												"src": "3869:53:15"
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:15",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3751:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2099,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:15"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3795:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2102,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "3795:9:15"
													},
													"referencedDeclaration": 2020,
													"src": "3795:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:15"
									},
									"scope": 2109,
									"src": "3729:199:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2110,
							"src": "1245:2685:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2121
						]
					},
					"id": 2122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2111,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2112,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:16",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2121,
							"linearizedBaseContracts": [
								2121
							],
							"name": "IERC165",
							"nameLocation": "431:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:16",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "817:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:16"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "860:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:16"
									},
									"scope": 2121,
									"src": "790:76:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2122,
							"src": "421:447:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:16"
				},
				"id": 16
			},
			"src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol": {
				"ast": {
					"absolutePath": "src/smartcontracts/CryptoQuestTheShardsOfGenesisStaking.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1288
						],
						"CryptoQuestTheShardsOfGenesisStaking": [
							2565
						],
						"ERC165Upgradeable": [
							1328
						],
						"ERC1967Utils": [
							1736
						],
						"IAccessControl": [
							1423
						],
						"IERC1155Upgradeable": [
							1048
						],
						"IERC165Upgradeable": [
							1340
						],
						"IERC1822Proxiable": [
							1433
						],
						"IERC20Upgradeable": [
							1126
						],
						"IERC721Upgradeable": [
							1242
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							926
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 2566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 2124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2566,
							"sourceUnit": 1127,
							"src": "107:79:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"id": 2125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2566,
							"sourceUnit": 1243,
							"src": "187:81:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
							"id": 2126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2566,
							"sourceUnit": 1049,
							"src": "269:83:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2566,
							"sourceUnit": 363,
							"src": "353:81:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 2128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2566,
							"sourceUnit": 927,
							"src": "435:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 2129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2566,
							"sourceUnit": 617,
							"src": "514:75:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2566,
							"sourceUnit": 799,
							"src": "590:77:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2132,
										"name": "Initializable",
										"nameLocations": [
											"774:13:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "774:13:17"
									},
									"id": 2133,
									"nodeType": "InheritanceSpecifier",
									"src": "774:13:17"
								},
								{
									"baseName": {
										"id": 2134,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"789:24:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "789:24:17"
									},
									"id": 2135,
									"nodeType": "InheritanceSpecifier",
									"src": "789:24:17"
								},
								{
									"baseName": {
										"id": 2136,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"815:19:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 926,
										"src": "815:19:17"
									},
									"id": 2137,
									"nodeType": "InheritanceSpecifier",
									"src": "815:19:17"
								},
								{
									"baseName": {
										"id": 2138,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"836:15:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "836:15:17"
									},
									"id": 2139,
									"nodeType": "InheritanceSpecifier",
									"src": "836:15:17"
								}
							],
							"canonicalName": "CryptoQuestTheShardsOfGenesisStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2131,
								"nodeType": "StructuredDocumentation",
								"src": "669:56:17",
								"text": "@custom:security-contact jacquedegraff@creodamo.com"
							},
							"fullyImplemented": true,
							"id": 2565,
							"linearizedBaseContracts": [
								2565,
								798,
								1433,
								926,
								362,
								1328,
								2121,
								1423,
								1288,
								616
							],
							"name": "CryptoQuestTheShardsOfGenesisStaking",
							"nameLocation": "734:36:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 2144,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "882:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 2565,
									"src": "858:62:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2140,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "858:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 2142,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "906:13:17",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 2141,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "896:9:17",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "896:24:17",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f72c0d8b",
									"id": 2149,
									"mutability": "constant",
									"name": "UPGRADER_ROLE",
									"nameLocation": "950:13:17",
									"nodeType": "VariableDeclaration",
									"scope": 2565,
									"src": "926:66:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2145,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "926:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "55504752414445525f524f4c45",
												"id": 2147,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "976:15:17",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												},
												"value": "UPGRADER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												}
											],
											"id": 2146,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "966:9:17",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "966:26:17",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisStaking.Stake",
									"id": 2162,
									"members": [
										{
											"constant": false,
											"id": 2151,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "1030:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 2162,
											"src": "1022:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2153,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "1055:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2162,
											"src": "1047:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2152,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1047:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2155,
											"mutability": "mutable",
											"name": "stakeTime",
											"nameLocation": "1078:9:17",
											"nodeType": "VariableDeclaration",
											"scope": 2162,
											"src": "1070:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1070:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2157,
											"mutability": "mutable",
											"name": "unstakeTime",
											"nameLocation": "1105:11:17",
											"nodeType": "VariableDeclaration",
											"scope": 2162,
											"src": "1097:19:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1097:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2159,
											"mutability": "mutable",
											"name": "reward",
											"nameLocation": "1134:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2162,
											"src": "1126:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2158,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1126:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2161,
											"mutability": "mutable",
											"name": "rarity",
											"nameLocation": "1158:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2162,
											"src": "1150:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2160,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1150:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1006:5:17",
									"nodeType": "StructDefinition",
									"scope": 2565,
									"src": "999:172:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5a44f86",
									"id": 2167,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1210:6:17",
									"nodeType": "VariableDeclaration",
									"scope": 2565,
									"src": "1177:39:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
										"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake)"
									},
									"typeName": {
										"id": 2166,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1185:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1177:25:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
											"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2165,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2164,
												"name": "Stake",
												"nameLocations": [
													"1196:5:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2162,
												"src": "1196:5:17"
											},
											"referencedDeclaration": 2162,
											"src": "1196:5:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$2162_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "34aab064",
									"id": 2169,
									"mutability": "mutable",
									"name": "cqtToken",
									"nameLocation": "1237:8:17",
									"nodeType": "VariableDeclaration",
									"scope": 2565,
									"src": "1222:23:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2168,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1222:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4d9a824d",
									"id": 2171,
									"mutability": "mutable",
									"name": "cqnftToken",
									"nameLocation": "1266:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2565,
									"src": "1251:25:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2170,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1251:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8172885b",
									"id": 2173,
									"mutability": "mutable",
									"name": "cqnft1155Token",
									"nameLocation": "1297:14:17",
									"nodeType": "VariableDeclaration",
									"scope": 2565,
									"src": "1282:29:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2172,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1282:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 2175,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "1332:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2565,
									"src": "1317:25:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2174,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1317:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ebed54c",
									"id": 2177,
									"mutability": "mutable",
									"name": "minimumStakingPeriod",
									"nameLocation": "1363:20:17",
									"nodeType": "VariableDeclaration",
									"scope": 2565,
									"src": "1348:35:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2176,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1348:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "18dcd430020e4d4899772fd94a8b40451dc5044dfb70bc46b532eeae431c864f",
									"id": 2185,
									"name": "Staked",
									"nameLocation": "1396:6:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1411:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "1403:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1428:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "1420:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeTime",
												"nameLocation": "1443:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "1435:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:51:17"
									},
									"src": "1390:64:17"
								},
								{
									"anonymous": false,
									"eventSelector": "ffdaf13b1d96bfc2213355f353f84c19493e0681eb0df26f83d862acd266750a",
									"id": 2195,
									"name": "Unstaked",
									"nameLocation": "1465:8:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1482:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "1474:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1499:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "1491:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakeTime",
												"nameLocation": "1514:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "1506:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1535:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "1527:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1473:69:17"
									},
									"src": "1459:84:17"
								},
								{
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "1563:151:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2199,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "1584:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2200,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1604:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1608:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1604:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2198,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1573:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1573:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2203,
												"nodeType": "ExpressionStatement",
												"src": "1573:42:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2205,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "1636:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1649:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1653:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1649:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2204,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1625:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:35:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2209,
												"nodeType": "ExpressionStatement",
												"src": "1625:35:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2211,
															"name": "UPGRADER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "1681:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2212,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1696:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1700:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1696:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2210,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "1670:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1670:37:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2215,
												"nodeType": "ExpressionStatement",
												"src": "1670:37:17"
											}
										]
									},
									"id": 2217,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1560:2:17"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1563:0:17"
									},
									"scope": 2565,
									"src": "1549:165:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2261,
										"nodeType": "Block",
										"src": "1922:295:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2232,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1932:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1932:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2234,
												"nodeType": "ExpressionStatement",
												"src": "1932:22:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2235,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1964:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2237,
												"nodeType": "ExpressionStatement",
												"src": "1964:17:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2238,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "1991:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1991:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2240,
												"nodeType": "ExpressionStatement",
												"src": "1991:24:17"
											},
											{
												"expression": {
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2241,
														"name": "cqtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "2026:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2242,
														"name": "_cqtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "2037:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2026:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2244,
												"nodeType": "ExpressionStatement",
												"src": "2026:20:17"
											},
											{
												"expression": {
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2245,
														"name": "cqnftToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2171,
														"src": "2056:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2246,
														"name": "_cqnftToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "2069:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2056:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "2056:24:17"
											},
											{
												"expression": {
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2249,
														"name": "cqnft1155Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2173,
														"src": "2090:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2250,
														"name": "_cqnft1155Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "2107:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2090:32:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2252,
												"nodeType": "ExpressionStatement",
												"src": "2090:32:17"
											},
											{
												"expression": {
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2253,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2175,
														"src": "2132:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2254,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "2145:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2132:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "2132:24:17"
											},
											{
												"expression": {
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2257,
														"name": "minimumStakingPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "2166:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2258,
														"name": "_minimumStakingPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2227,
														"src": "2189:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2166:44:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "2166:44:17"
											}
										]
									},
									"functionSelector": "a6b63eb8",
									"id": 2262,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2229,
												"name": "initializer",
												"nameLocations": [
													"1903:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 470,
												"src": "1903:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1903:11:17"
										}
									],
									"name": "initialize",
									"nameLocation": "1729:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "_cqtToken",
												"nameLocation": "1757:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1749:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "_cqnftToken",
												"nameLocation": "1784:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1776:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "_cqnft1155Token",
												"nameLocation": "1813:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1805:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1805:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "1846:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1838:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "_minimumStakingPeriod",
												"nameLocation": "1875:21:17",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1867:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1739:163:17"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1922:0:17"
									},
									"scope": 2565,
									"src": "1720:497:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "2294:911:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2276,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2264,
																			"src": "2364:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2273,
																					"name": "cqnftToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2171,
																					"src": "2344:10:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2272,
																				"name": "IERC721Upgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1242,
																				"src": "2325:18:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$1242_$",
																					"typeString": "type(contract IERC721Upgradeable)"
																				}
																			},
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2325:30:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721Upgradeable_$1242",
																				"typeString": "contract IERC721Upgradeable"
																			}
																		},
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2356:7:17",
																		"memberName": "ownerOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1175,
																		"src": "2325:38:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view external returns (address)"
																		}
																	},
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2325:48:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2278,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2377:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2381:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2377:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2325:62:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2285,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2449:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2453:6:17",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2449:10:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2287,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2264,
																			"src": "2461:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2282,
																					"name": "cqnft1155Token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2173,
																					"src": "2423:14:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2281,
																				"name": "IERC1155Upgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1048,
																				"src": "2403:19:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC1155Upgradeable_$1048_$",
																					"typeString": "type(contract IERC1155Upgradeable)"
																				}
																			},
																			"id": 2283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2403:35:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC1155Upgradeable_$1048",
																				"typeString": "contract IERC1155Upgradeable"
																			}
																		},
																		"id": 2284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2439:9:17",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 986,
																		"src": "2403:45:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view external returns (uint256)"
																		}
																	},
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2403:67:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2473:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2403:71:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2325:149:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572206f662074686520746f6b656e",
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2488:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e926d765124afa7645719d9ee54990b20d280fc9c8126299bae5cd0693cd5706",
																"typeString": "literal_string \"Not the owner of the token\""
															},
															"value": "Not the owner of the token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e926d765124afa7645719d9ee54990b20d280fc9c8126299bae5cd0693cd5706",
																"typeString": "literal_string \"Not the owner of the token\""
															}
														],
														"id": 2271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2304:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2304:222:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2294,
												"nodeType": "ExpressionStatement",
												"src": "2304:222:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2296,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "2544:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																			"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
																		}
																	},
																	"id": 2298,
																	"indexExpression": {
																		"id": 2297,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "2551:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2544:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$2162_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
																	}
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2561:7:17",
																"memberName": "tokenId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2151,
																"src": "2544:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2572:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2544:29:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616c7265616479207374616b6564",
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2575:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa21bce4fe506452861a1614013817d8a427e267f30e56423392821fbb80cd2d",
																"typeString": "literal_string \"Token already staked\""
															},
															"value": "Token already staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa21bce4fe506452861a1614013817d8a427e267f30e56423392821fbb80cd2d",
																"typeString": "literal_string \"Token already staked\""
															}
														],
														"id": 2295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2536:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:62:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2304,
												"nodeType": "ExpressionStatement",
												"src": "2536:62:17"
											},
											{
												"expression": {
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2305,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "2609:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
															}
														},
														"id": 2307,
														"indexExpression": {
															"id": 2306,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "2616:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2609:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2162_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2309,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2264,
																"src": "2657:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2310,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2686:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2690:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2686:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 2312,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2721:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2727:9:17",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2721:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2763:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2786:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 2316,
																"name": "_rarity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "2809:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2308,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "2628:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$2162_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisStaking.Stake storage pointer)"
															}
														},
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2648:7:17",
															"2679:5:17",
															"2710:9:17",
															"2750:11:17",
															"2778:6:17",
															"2801:6:17"
														],
														"names": [
															"tokenId",
															"owner",
															"stakeTime",
															"unstakeTime",
															"reward",
															"rarity"
														],
														"nodeType": "FunctionCall",
														"src": "2628:199:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2162_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake memory"
														}
													},
													"src": "2609:218:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$2162_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
													}
												},
												"id": 2319,
												"nodeType": "ExpressionStatement",
												"src": "2609:218:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2324,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2264,
																"src": "2881:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2321,
																		"name": "cqnftToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2171,
																		"src": "2861:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2320,
																	"name": "IERC721Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "2842:18:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$1242_$",
																		"typeString": "type(contract IERC721Upgradeable)"
																	}
																},
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2842:30:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721Upgradeable_$1242",
																	"typeString": "contract IERC721Upgradeable"
																}
															},
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2873:7:17",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1175,
															"src": "2842:38:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view external returns (address)"
															}
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2842:48:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2326,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2894:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2898:6:17",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2894:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2842:62:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2358,
													"nodeType": "Block",
													"src": "3017:121:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2347,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3084:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3088:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3084:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2351,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3104:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisStaking_$2565",
																					"typeString": "contract CryptoQuestTheShardsOfGenesisStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisStaking_$2565",
																					"typeString": "contract CryptoQuestTheShardsOfGenesisStaking"
																				}
																			],
																			"id": 2350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3096:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2349,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3096:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3096:13:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2353,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "3111:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 2354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3121:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	{
																		"hexValue": "",
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3124:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2344,
																				"name": "cqnft1155Token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2173,
																				"src": "3051:14:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2343,
																			"name": "IERC1155Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "3031:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Upgradeable_$1048_$",
																				"typeString": "type(contract IERC1155Upgradeable)"
																			}
																		},
																		"id": 2345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3031:35:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Upgradeable_$1048",
																			"typeString": "contract IERC1155Upgradeable"
																		}
																	},
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3067:16:17",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1031,
																	"src": "3031:52:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3031:96:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2357,
															"nodeType": "ExpressionStatement",
															"src": "3031:96:17"
														}
													]
												},
												"id": 2359,
												"nodeType": "IfStatement",
												"src": "2838:300:17",
												"trueBody": {
													"id": 2342,
													"nodeType": "Block",
													"src": "2906:105:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2333,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2964:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2968:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2964:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2337,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2984:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisStaking_$2565",
																					"typeString": "contract CryptoQuestTheShardsOfGenesisStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisStaking_$2565",
																					"typeString": "contract CryptoQuestTheShardsOfGenesisStaking"
																				}
																			],
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2976:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2335,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2976:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2976:13:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2339,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2264,
																		"src": "2991:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2330,
																				"name": "cqnftToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2171,
																				"src": "2939:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2329,
																			"name": "IERC721Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1242,
																			"src": "2920:18:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$1242_$",
																				"typeString": "type(contract IERC721Upgradeable)"
																			}
																		},
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2920:30:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Upgradeable_$1242",
																			"typeString": "contract IERC721Upgradeable"
																		}
																	},
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2951:12:17",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1207,
																	"src": "2920:43:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2920:80:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2341,
															"nodeType": "ExpressionStatement",
															"src": "2920:80:17"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2361,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2264,
															"src": "3160:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3170:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3174:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3170:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2364,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3182:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3188:9:17",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3182:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2360,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2185,
														"src": "3153:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3153:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2367,
												"nodeType": "EmitStatement",
												"src": "3148:50:17"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2269,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2268,
												"name": "whenNotPaused",
												"nameLocations": [
													"2280:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "2280:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2280:13:17"
										}
									],
									"name": "stake",
									"nameLocation": "2232:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2246:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "2238:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "_rarity",
												"nameLocation": "2264:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "2256:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:35:17"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2294:0:17"
									},
									"scope": 2565,
									"src": "2223:982:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "3312:218:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2381,
																	"name": "_tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "3330:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3340:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3330:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2383,
																	"name": "_rarities",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2375,
																	"src": "3350:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3360:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3350:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3330:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e2049447320616e64207261726974696573206c656e677468206d69736d61746368",
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3368:40:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39e01b02a8ec1a0fd1e3a4d6d6bd8b4018063aa53e4e9672bdce298147a18dc3",
																"typeString": "literal_string \"Token IDs and rarities length mismatch\""
															},
															"value": "Token IDs and rarities length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39e01b02a8ec1a0fd1e3a4d6d6bd8b4018063aa53e4e9672bdce298147a18dc3",
																"typeString": "literal_string \"Token IDs and rarities length mismatch\""
															}
														],
														"id": 2380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3322:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3322:87:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2388,
												"nodeType": "ExpressionStatement",
												"src": "3322:87:17"
											},
											{
												"body": {
													"id": 2409,
													"nodeType": "Block",
													"src": "3466:58:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2401,
																			"name": "_tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2372,
																			"src": "3486:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 2403,
																		"indexExpression": {
																			"id": 2402,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "3496:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3486:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2404,
																			"name": "_rarities",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "3500:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 2406,
																		"indexExpression": {
																			"id": 2405,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2390,
																			"src": "3510:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3500:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2400,
																	"name": "stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2369,
																	"src": "3480:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3480:33:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2408,
															"nodeType": "ExpressionStatement",
															"src": "3480:33:17"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2393,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2390,
														"src": "3439:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2394,
															"name": "_tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2372,
															"src": "3443:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 2395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3453:6:17",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3443:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3439:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2410,
												"initializationExpression": {
													"assignments": [
														2390
													],
													"declarations": [
														{
															"constant": false,
															"id": 2390,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3432:1:17",
															"nodeType": "VariableDeclaration",
															"scope": 2410,
															"src": "3424:9:17",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2389,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3424:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2392,
													"initialValue": {
														"hexValue": "30",
														"id": 2391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3436:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3424:13:17"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3461:3:17",
														"subExpression": {
															"id": 2397,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "3461:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2399,
													"nodeType": "ExpressionStatement",
													"src": "3461:3:17"
												},
												"nodeType": "ForStatement",
												"src": "3419:105:17"
											}
										]
									},
									"functionSelector": "d0f7d24f",
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2377,
												"name": "whenNotPaused",
												"nameLocations": [
													"3298:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "3298:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3298:13:17"
										}
									],
									"name": "stakeBatch",
									"nameLocation": "3220:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "_tokenIds",
												"nameLocation": "3250:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "3231:28:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2370,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3231:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2371,
													"nodeType": "ArrayTypeName",
													"src": "3231:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "_rarities",
												"nameLocation": "3280:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "3261:28:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2373,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3261:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2374,
													"nodeType": "ArrayTypeName",
													"src": "3261:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3230:60:17"
									},
									"returnParameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:0:17"
									},
									"scope": 2565,
									"src": "3211:319:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2553,
										"nodeType": "Block",
										"src": "3592:1030:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2420,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "3610:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																			"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
																		}
																	},
																	"id": 2422,
																	"indexExpression": {
																		"id": 2421,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2414,
																		"src": "3617:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3610:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$2162_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
																	}
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3627:5:17",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2153,
																"src": "3610:22:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2424,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3636:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3640:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3636:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3610:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420746865206f776e6572206f6620746865207374616b65",
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3648:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2e0b264ccf675e173c230596ff7ecba0dd7a1c403648e17c6ce7c079df5e7ab",
																"typeString": "literal_string \"Not the owner of the stake\""
															},
															"value": "Not the owner of the stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2e0b264ccf675e173c230596ff7ecba0dd7a1c403648e17c6ce7c079df5e7ab",
																"typeString": "literal_string \"Not the owner of the stake\""
															}
														],
														"id": 2419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3602:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3602:75:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2429,
												"nodeType": "ExpressionStatement",
												"src": "3602:75:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2431,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "3695:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																			"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
																		}
																	},
																	"id": 2433,
																	"indexExpression": {
																		"id": 2432,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2414,
																		"src": "3702:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3695:16:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$2162_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
																	}
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3712:11:17",
																"memberName": "unstakeTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2157,
																"src": "3695:28:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3727:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3695:33:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616c726561647920756e7374616b6564",
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3730:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfbc489d0add4380fb0a9331116e14e9d245825f5265e05f9ad04c1d23417c73",
																"typeString": "literal_string \"Token already unstaked\""
															},
															"value": "Token already unstaked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfbc489d0add4380fb0a9331116e14e9d245825f5265e05f9ad04c1d23417c73",
																"typeString": "literal_string \"Token already unstaked\""
															}
														],
														"id": 2430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3687:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3687:68:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2439,
												"nodeType": "ExpressionStatement",
												"src": "3687:68:17"
											},
											{
												"assignments": [
													2441
												],
												"declarations": [
													{
														"constant": false,
														"id": 2441,
														"mutability": "mutable",
														"name": "stakingPeriod",
														"nameLocation": "3774:13:17",
														"nodeType": "VariableDeclaration",
														"scope": 2553,
														"src": "3766:21:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3766:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2449,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2442,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3790:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3796:9:17",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3790:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 2444,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "3808:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																	"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
																}
															},
															"id": 2446,
															"indexExpression": {
																"id": 2445,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2414,
																"src": "3815:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3808:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$2162_storage",
																"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
															}
														},
														"id": 2447,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3825:9:17",
														"memberName": "stakeTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2155,
														"src": "3808:26:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3790:44:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3766:68:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2451,
																"name": "stakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "3852:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2452,
																"name": "minimumStakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2177,
																"src": "3869:20:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3852:37:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720706572696f64206e6f74206d6574",
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3891:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbed3010ef2ca5a7950ddcaceee490947e7e5814a0c73147fbe9a8dd3ac26daa",
																"typeString": "literal_string \"Staking period not met\""
															},
															"value": "Staking period not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbed3010ef2ca5a7950ddcaceee490947e7e5814a0c73147fbe9a8dd3ac26daa",
																"typeString": "literal_string \"Staking period not met\""
															}
														],
														"id": 2450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3844:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3844:72:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2456,
												"nodeType": "ExpressionStatement",
												"src": "3844:72:17"
											},
											{
												"expression": {
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2457,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "3927:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																	"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
																}
															},
															"id": 2459,
															"indexExpression": {
																"id": 2458,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2414,
																"src": "3934:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3927:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$2162_storage",
																"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
															}
														},
														"id": 2460,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3944:11:17",
														"memberName": "unstakeTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2157,
														"src": "3927:28:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2461,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3958:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3964:9:17",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3958:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3927:46:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2464,
												"nodeType": "ExpressionStatement",
												"src": "3927:46:17"
											},
											{
												"expression": {
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2465,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "3983:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																	"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
																}
															},
															"id": 2467,
															"indexExpression": {
																"id": 2466,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2414,
																"src": "3990:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3983:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$2162_storage",
																"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
															}
														},
														"id": 2468,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4000:6:17",
														"memberName": "reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2159,
														"src": "3983:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2469,
																			"name": "stakingPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2441,
																			"src": "4010:13:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2470,
																			"name": "rewardRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2175,
																			"src": "4026:10:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4010:26:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2472,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2167,
																				"src": "4039:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																					"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
																				}
																			},
																			"id": 2474,
																			"indexExpression": {
																				"id": 2473,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2414,
																				"src": "4046:8:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4039:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$2162_storage",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
																			}
																		},
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4056:6:17",
																		"memberName": "rarity",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2161,
																		"src": "4039:23:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4010:52:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2477,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4009:54:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4066:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "4009:61:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3983:87:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2481,
												"nodeType": "ExpressionStatement",
												"src": "3983:87:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2486,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4144:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4148:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4144:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2488,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "4156:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																		"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
																	}
																},
																"id": 2490,
																"indexExpression": {
																	"id": 2489,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2414,
																	"src": "4163:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4156:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$2162_storage",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
																}
															},
															"id": 2491,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4173:6:17",
															"memberName": "reward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2159,
															"src": "4156:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2483,
																	"name": "cqtToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2169,
																	"src": "4125:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2482,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "4107:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1126_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4107:27:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4135:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1093,
														"src": "4107:36:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:73:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "4107:73:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2498,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2414,
																"src": "4234:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2495,
																		"name": "cqnftToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2171,
																		"src": "4214:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2494,
																	"name": "IERC721Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "4195:18:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$1242_$",
																		"typeString": "type(contract IERC721Upgradeable)"
																	}
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4195:30:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721Upgradeable_$1242",
																	"typeString": "contract IERC721Upgradeable"
																}
															},
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4226:7:17",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1175,
															"src": "4195:38:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view external returns (address)"
															}
														},
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4195:48:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 2502,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4255:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisStaking_$2565",
																	"typeString": "contract CryptoQuestTheShardsOfGenesisStaking"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisStaking_$2565",
																	"typeString": "contract CryptoQuestTheShardsOfGenesisStaking"
																}
															],
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4247:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4247:7:17",
																"typeDescriptions": {}
															}
														},
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4247:13:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4195:65:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2534,
													"nodeType": "Block",
													"src": "4373:121:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2525,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4448:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisStaking_$2565",
																					"typeString": "contract CryptoQuestTheShardsOfGenesisStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisStaking_$2565",
																					"typeString": "contract CryptoQuestTheShardsOfGenesisStaking"
																				}
																			],
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4440:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2523,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4440:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4440:13:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2527,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4455:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4459:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4455:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2529,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2414,
																		"src": "4467:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 2530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4477:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	{
																		"hexValue": "",
																		"id": 2531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4480:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2520,
																				"name": "cqnft1155Token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2173,
																				"src": "4407:14:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2519,
																			"name": "IERC1155Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "4387:19:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Upgradeable_$1048_$",
																				"typeString": "type(contract IERC1155Upgradeable)"
																			}
																		},
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4387:35:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Upgradeable_$1048",
																			"typeString": "contract IERC1155Upgradeable"
																		}
																	},
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4423:16:17",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1031,
																	"src": "4387:52:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4387:96:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2533,
															"nodeType": "ExpressionStatement",
															"src": "4387:96:17"
														}
													]
												},
												"id": 2535,
												"nodeType": "IfStatement",
												"src": "4191:303:17",
												"trueBody": {
													"id": 2518,
													"nodeType": "Block",
													"src": "4262:105:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2511,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4328:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisStaking_$2565",
																					"typeString": "contract CryptoQuestTheShardsOfGenesisStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisStaking_$2565",
																					"typeString": "contract CryptoQuestTheShardsOfGenesisStaking"
																				}
																			],
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4320:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2509,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4320:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4320:13:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2513,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4335:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4339:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4335:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2515,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2414,
																		"src": "4347:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2506,
																				"name": "cqnftToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2171,
																				"src": "4295:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2505,
																			"name": "IERC721Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1242,
																			"src": "4276:18:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$1242_$",
																				"typeString": "type(contract IERC721Upgradeable)"
																			}
																		},
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4276:30:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Upgradeable_$1242",
																			"typeString": "contract IERC721Upgradeable"
																		}
																	},
																	"id": 2508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4307:12:17",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1207,
																	"src": "4276:43:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:80:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2517,
															"nodeType": "ExpressionStatement",
															"src": "4276:80:17"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4504:23:17",
													"subExpression": {
														"baseExpression": {
															"id": 2536,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "4511:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
															}
														},
														"id": 2538,
														"indexExpression": {
															"id": 2537,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "4518:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4511:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2162_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2540,
												"nodeType": "ExpressionStatement",
												"src": "4504:23:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2542,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "4552:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2543,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4562:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4566:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4562:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2545,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4574:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4580:9:17",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4574:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2547,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "4591:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stake_$2162_storage_$",
																		"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref)"
																	}
																},
																"id": 2549,
																"indexExpression": {
																	"id": 2548,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2414,
																	"src": "4598:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4591:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$2162_storage",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisStaking.Stake storage ref"
																}
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4608:6:17",
															"memberName": "reward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2159,
															"src": "4591:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2541,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "4543:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256)"
														}
													},
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4543:72:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2552,
												"nodeType": "EmitStatement",
												"src": "4538:77:17"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 2554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2417,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2416,
												"name": "whenNotPaused",
												"nameLocations": [
													"3578:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "3578:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3578:13:17"
										}
									],
									"name": "unstake",
									"nameLocation": "3545:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3561:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "3553:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3552:18:17"
									},
									"returnParameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3592:0:17"
									},
									"scope": 2565,
									"src": "3536:1086:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 2563,
										"nodeType": "Block",
										"src": "4706:2:17",
										"statements": []
									},
									"id": 2564,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2560,
													"name": "UPGRADER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2149,
													"src": "4691:13:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2561,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2559,
												"name": "onlyRole",
												"nameLocations": [
													"4682:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4682:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4682:23:17"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "4637:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4673:8:17"
									},
									"parameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "4655:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4655:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4654:9:17"
									},
									"returnParameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4706:0:17"
									},
									"scope": 2565,
									"src": "4628:80:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2566,
							"src": "725:3985:17",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1350,
								1353,
								1468,
								1481,
								1759,
								1762
							],
							"usedEvents": [
								387,
								813,
								818,
								1362,
								1371,
								1380,
								1447,
								2185,
								2195
							]
						}
					],
					"src": "81:4630:17"
				},
				"id": 17
			}
		}
	}
}